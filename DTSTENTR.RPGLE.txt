       Ctl-Opt Option(*SrcStmt : *NoDebugIO);

       Dcl-F DTSTENTD WORKSTN(*Ext) Usage(*Input:*Output) INFDS(DSINFO)
             MAXDEV(*FILE) INFSR(*PSSR) SFILE(MILSFL:Mile_RRN)
             SFILE(ASRSFL:Ad_Mile_RRN) SFILE(BILSFL:Bill_RRN)
             SFILE(FULSFL:Fuel_RRN) SFILE(AFRSFL:Ad_Fuel_RRN)
             SFILE(LSTSFL:List_RRN) SFILE(DELSFL:DEL_RRN) SFILE(MSGSFL:MSG#);

       Dcl-Ds FDtsBat    ExtName('FDTSBAT') Inz End-Ds;
       Dcl-Ds FvehFil   ExtName('FVEHFIL') Inz End-Ds;
       Dcl-Ds FdtsMile  ExtName('FDTSMILE')Inz End-Ds;
       Dcl-Ds FfuelTkt  ExtName('FFUELTKT')Inz End-Ds;
       Dcl-Ds FDtsFuel  ExtName('FDTSFUEL')Inz End-Ds;
       Dcl-Ds FdtsErr   ExtName('FDTSERR') Inz End-Ds;

       Dcl-Ds Wk_Hdr EXTNAME('FDTSHDR') Inz;
              TMRCWTHD EXTFLD('TMRCWT') ;
       END-DS;

       Dcl-Ds Fuel_Ds Qualified Dim(9999);
           Fuel_tkt Char(9);
           Fuel_src Char(1);
       END-DS;

       Dcl-Ds Wk_CustMst EXTNAME('FCUSMST') Inz End-Ds;

       Dcl-Ds DTSSRQds EXTNAME('FDTSSRQ') Inz End-Ds;

       Dcl-Ds DTSSRQq EXTNAME('FDTSSRQ') Qualified Inz End-Ds;

       Dcl-Ds FDTSCSTSF EXTNAME('FDTSCSTSF') Inz;
              TMHTRPHD EXTFLD('TMHTRP') ;
       END-DS;

       Dcl-Ds PSSA  ExtName('FPSDS') PsDs End-Ds;

       Dcl-Ds LDA EXTNAME('FLDADS') DTAARA(*LDA);
         LdInds Char(24) Pos(465);
         WkCorp Char(4) Pos(601);
       End-Ds;

       Dcl-Ds Hld_LDA Qualified Inz;
         LDA_Data LikeDs(LDA) ;
       End-Ds;

       Dcl-Ds JobRun Dtaara('DTSBCHUPD') Inz;
        BchRun Char(1) ;
       End-Ds;



       Dcl-S FUNA    Char(10) DIM(1) CTDATA PERRCD(1);
       Dcl-S FUNB    Char(8) DIM(1) CTDATA PERRCD(1);
       Dcl-S FUNC    Char(7) DIM(1) CTDATA PERRCD(1);
       Dcl-S FUND    Char(11) DIM(1) CTDATA PERRCD(1);
       Dcl-S FUNE    Char(10) DIM(1) CTDATA PERRCD(1);
       Dcl-S FUNF    Char(16) DIM(1) CTDATA PERRCD(1);
       Dcl-S FUNFR   Char(16) DIM(1) CTDATA PERRCD(1);
       Dcl-S FUNG    Char(12) DIM(1) CTDATA PERRCD(1);
       Dcl-S FUNH    Char(9) DIM(1) CTDATA PERRCD(1);

       Dcl-S @ST Char(2) DIM(99) Inz;                                         // MILEAGE STATES
       Dcl-S @STWGT Packed(7) DIM(99) Inz;                                    // MILEAGE STATES
       Dcl-S @STAXL Packed(2) DIM(99) Inz;                                    // MILEAGE STATES
       Dcl-S @STM Char(2) DIM(99) Inz;                                        // MILEAGE STATES
       Dcl-S @SMC Char(1) DIM(99) Inz;                                        // STATE MIL CODE
       Dcl-S @BRN Packed(4) DIM(99) Inz;                                      // BILRRN select
       Dcl-S TRP Char(1) DIM(8) Inz;                                          // TRIP NO.
       Dcl-S DFL Char(18) DIM(99) Inz;
       Dcl-S QTY Packed(5:1) DIM(99) Inz;
       Dcl-S CSS Char(8) DIM(99) Inz;                                         // Trip No in sus
       Dcl-S TRDAY Packed(7) DIM(99) Inz;
       Dcl-S TRMIL Packed(7) DIM(99) Inz;

       Dcl-Ds PRMMSG OCCURS(20) Inz;
         PRMLIN Char(2);
         PRMMID Char(7) Pos(5);
         PRMSEV Zoned(2);
       End-Ds;

       Dcl-Ds CUSMSG OCCURS(20) Inz;
         CUSLIN Char(2);
         CUSMID Char(7) Pos(5);
         CUSSEV Zoned(2);
       End-Ds;

       Dcl-Ds MILMSG OCCURS(20) Inz;
         MILLIN Char(2);
         MILMID Char(7) Pos(5);
         MILSEV Zoned(2);
       End-Ds;

       Dcl-Ds ASRMSG OCCURS(99) Inz;
         ASRLIN Char(2);
         ASRMID Char(7) Pos(5);
         ASRSEV Zoned(2);
       End-Ds;

       Dcl-Ds FULMSG OCCURS(20) Inz;
         FULLIN Char(2);
         FULMID Char(7) Pos(5);
         FULSEV Zoned(2);
       End-Ds;

       Dcl-Ds AFRMSG OCCURS(20) Inz;
         AFRLIN Char(2);
         AFRMID Char(7) Pos(5);
         AFRSEV Zoned(2);
       End-Ds;


       Dcl-Ds AsOfDt DtaAra('DTSPAPERDT');
         AsOfYr Char(3) Pos(1);
         AsOfMo Char(2) Pos(4);
         Pr_CYY Zoned(3) Overlay(AsOfYr);
         Pr_MM Zoned(2) Overlay(AsOfMo);
       End-Ds;

       Dcl-S Pr_EOM Packed(7) Inz;
       Dcl-S WRKDESC Char(10) Inz;
       Dcl-S Bl_Date Date Inz(d'2001-01-01');
       Dcl-S Valid_set Char(11) Inz('0123456789.');

       Dcl-Ds DSINFO;
         #IROW Char(1) Pos(370);
         #ICOL Char(1) Pos(371);
         INFRRN Bindec(4) Pos(378);
       End-Ds;

       Dcl-Ds *N;
         #CROW Bindec(4) Inz;
         #CROWA Char(2) Overlay(#CROW);
         #CCOL Bindec(4) Inz;
         #CCOLA Char(2) Overlay(#CCOL);
       End-Ds;

       Dcl-Ds *N;
         TRL3     Char(10) Inz;
         TRL3AB   Char(4) Overlay(TRL3);
         TRL3A    Char(3) Overlay(TRL3AB);
         TRL3B    Char(1) Overlay(TRL3AB:4);
         TRL3C    Zoned(6) Overlay(TRL3:5);
       End-Ds;

       Dcl-Ds *N;
         DSDPUR Zoned(6) inz;
         DSDPMM Zoned(2) Overlay(DSDPUR);
         DSDPDD Zoned(2) Overlay(DSDPUR:3);
         DSDPYY Zoned(2) Overlay(DSDPUR:5);
       End-Ds;

       Dcl-Ds *N;
         Line_Date Zoned(7) Inz;
         LinDatYY Zoned(3) Overlay(Line_Date);
         LinDatMM Zoned(2) Overlay(Line_Date:4);
         LinDatDD Zoned(2) Overlay(Line_Date:6);
       End-Ds;

       Dcl-Ds *N;
         DSCUS Char(12) Inz;
         DSACCN Char(8) Overlay(DSCUS);
         DSCUST Char(6) Overlay(DSCUS);
         DSCBG Char(2) Overlay(DSCUS:7);
         DSCDST Char(4) Overlay(DSCUS:9);
       End-Ds;

       Dcl-Ds *N;
         DSFPG Zoned(5:1) Inz;
         DSFPG0 Zoned(5) Overlay(DSFPG);
       End-Ds;

       Dcl-Ds *N;
         MILE Char(73) Inz;
         MILOPT Char(1) Overlay(MILE);
         DSLINE Char(2) Overlay(MILE:2);
         DSMDY Zoned(6) Overlay(MILE:4);
         DSSE Char(2) Overlay(MILE:10);
         DSSTNM Char(14) Overlay(MILE:12);
         DSRTES Char(6) Overlay(MILE:26);
         DSBODM Zoned(7) Overlay(MILE:32);
         DSCODE Char(1) Overlay(MILE:39);
         DSLE Char(1) Overlay(MILE:40);
         DSTOLL Zoned(5) Overlay(MILE:41);
         DSRCWT Zoned(7) Overlay(MILE:46);
         DSAXLE Zoned(1) Overlay(MILE:53);
         DSKYU Zoned(6) Overlay(MILE:54);
         HODOM Zoned(7) Overlay(MILE:60);
         HMILE Zoned(7) Overlay(MILE:67);
       End-Ds;

       Dcl-Ds D1MILE OCCURS(99) Inz;
         D1SOPT Char(1);
         D1LINE Char(2);
         D1TMDY Zoned(6);
         D1SE Char(2);
         D1STNM Char(14);
         D1RTES Char(6);
         D1BODM Zoned(7);
         D1CODE Char(1);
         D1LE Char(1);
         D1TOLL Zoned(5);
         D1RCWT Zoned(7);
         D1AXLE Zoned(1);
         D1KYU Zoned(6);
         D1HODM Zoned(7);
         D1HMIL Zoned(7);
       End-Ds;

       Dcl-Ds DEMILE OCCURS(99) Inz;
         DESOPT Char(1);
         DETMDY Char(1);
         DESE Char(1);
         DEBODM Char(1);
         DECODE Char(1);
       End-Ds;

       Dcl-Ds *N;
         FUEL      Char(83) Inz;
         FULOPT    Char(1) Overlay(FUEL);
         DSFLIN    Char(2) Overlay(FUEL:2);
         DSSRC     Char(1) Overlay(FUEL:4);
         DSFMDY    Zoned(6) Overlay(FUEL:5);
         DSSPUR    Char(2) Overlay(FUEL:11);
         DSTKNO    Char(9) Overlay(FUEL:13);
         DSFPGX    Zoned(5) Overlay(FUEL:22);
         DSQTM     Char(1) Overlay(FUEL:27);
         DSVEND    Char(6) Overlay(FUEL:28);
         Ds_FDIST  Char(4) Overlay(DSVEND);
         DS_FLoc   Char(2) Overlay(DSVEND:5);
         DSVNDN    Char(16) Overlay(FUEL:34);
         DSVNDC    Char(10) Overlay(FUEL:50);
         HSRC      Char(1) Overlay(FUEL:60);
         DSTAXP    Char(1) Overlay(FUEL:61);
         DSORIG    Char(1) Overlay(FUEL:62);
         DSGRIN    Char(8) Overlay(FUEL:63);
         DSFX      Char(1) Overlay(FUEL:71);
         DSTKTRCVD Char(1) Overlay(FUEL:72);
         DSINVC    Char(10) Overlay(FUEL:73);
         DSSRCF    Char(1) Overlay(FUEL:83);
       End-Ds;

       Dcl-Ds D2FUEL OCCURS(99) Inz;
         D2FOPT Char(1);
         D2FLIN Char(2);
         D2SRC Char(1);
         D2DPUR Zoned(6);
         D2SPUR Char(2);
         D2TKNO Char(9);
         D2FPG Zoned(5);
         D2QTM Char(1);
         D2VEND Char(6);
         D2VNDN Char(16);
         D2VNDC Char(10);
         D2HSRC Char(1);
         D2TAXP Char(1);
         D2ORIG Char(1);
         D2GRIN Char(8);
         D2FX Char(1);
         D2TKTRCVD Char(1);
         D2INVC Char(10);
         D2SRCF Char(1);
       End-Ds;


       Dcl-Ds *N;
         Check_Odom Char(14) Inz;
         A_OdomC Char(7) Overlay(Check_Odom);
         B_OdomC Char(7) Overlay(Check_Odom:8);
         A_OdomZ Zoned(7) Overlay(Check_Odom);
         B_odomZ Zoned(7) Overlay(Check_Odom:8);
       End-Ds;

       Dcl-Ds *N;
         DS0458 Char(256) Inz;
         MN0458 Char(2) Overlay(DS0458);
       End-Ds;

       Dcl-DS *N;
         $MID Char(7);
         $Msgcd Char(3) Overlay($MID) Inz('DTS');
         $Msgid Char(4) Overlay($MID:4);
       End-Ds;

       Dcl-DS *N;
         $MFILE Char(10) Inz;
         $MFile6 Char(6) Overlay($MFILE);
         $MFile8 Char(8) Overlay($MFILE);
       End-Ds;

       Dcl-DS *N;
         FUNCLN Char(80);
         Funmsg Char(15) Overlay(FUNCLN);
       End-Ds;
       Dcl-Ds FUNDSP Inz;
         DSP04 Char(10);
         DSP06 Char(16);
         BLNK08 Char(11);
         DSP09 Char(7);
         DSP10 Char(11);
         DSP11 Char(10);
       End-Ds;

       Dcl-Ds FUNADD;
         ADD01 Char(15) Inz('F1=Exit');        //Functional Key in Footer Section of ADD Screen
         ADD04 Char(10) Inz;
         ADD07 Char(16) Inz;
         ADD08 Char(8) Inz;
         ADD05 Char(12) Inz;
         ADD10 Char(9) Inz;
         ADD11 Char(10) Inz;
       End-Ds;

       Dcl-Ds FUNCHG;
         CHG01 Char(15) Inz('F1=Exit');        //Functional Key in Footer Section of CHG Screen
         CHG04 Char(10) Inz;
         CHG07 Char(16) Inz;
         CHG08 Char(8) Inz;
         CHG09 Char(7) Inz;
         CHG05 Char(14) Inz;
         CHG0512 Char(12) Overlay(CHG05);
         CHG11 Char(10) Inz;
       End-Ds;

       Dcl-Ds FUNDLT ;
         DLT01 Char(15) Inz('F1=Exit');        //Functional Key in Footer Section of DLT Screen
         DLT04 Char(10) Inz;
         DLT06 Char(16) Inz;
         DLT08 Char(8) Inz;
         FILL Char(3) Inz;
         DLT09 Char(7) Inz;
         DLT10 Char(11) Inz;
         BLNK11 Char(10) Inz;
       End-Ds;

       Dcl-Ds *N ;
         Today_7   Zoned(7) Inz;
         Cur_CYY7  Zoned(3) Overlay(Today_7);
         Cur_MM7   Zoned(2) Overlay(Today_7:4);
         Cur_DD7   Zoned(2) Overlay(Today_7:6);
       End-Ds;

       Dcl-Ds *N Inz;
         Wk_Date7 Zoned(7);
         Wk_CYY7  Zoned(3) Overlay(Wk_Date7);
         Wk_MM7   Zoned(2) Overlay(Wk_Date7:4);
         Wk_DD7   Zoned(2) Overlay(Wk_Date7:6);
       End-Ds;

       Dcl-Ds DUPFL Inz;
         DUPFLY Zoned(3);
         DUPFLM Zoned(2);
         DUPFLD Zoned(2);
         DUPFLS Char(2);
         DUPFLT Char(9);
       End-Ds;

       Dcl-Ds ResultSet;
         $ContractKey Bindec(9);
         $TransNumber Char(10);
         $PONumber Char(20);
         $Customer Char(30);
         $AddressLine1 Char(35);
         $AddressLine2 Char(35);
         $City Char(28);
         $State Char(2);
         $PostCd Char(10);
         $Country Char(3);
         $Account Char(8);
         $Custnum Char(6) Overlay($Account);
         $Custgrp Char(2) Overlay($Account:7);
         $Attn Char(20);
         $DateOut Date;
         $TimeOut Time;
         $DateIn Date;
         $TimeIn Time;
         $RentLocCd Char(6);
         $SourceType Char(1);
         $Dist Char(4);
         $BegOdo Int(10);
         $EndOdo Int(10);
         $Resultst Char(10) Pos(211);
       End-Ds;

       Dcl-S ResultSet1 LIKE(ResultSet);
       Dcl-S ResultSet2 LIKE(ResultSet);
       Dcl-S ResultSet3 LIKE(ResultSet);
       Dcl-S ResultSet4 LIKE(ResultSet);
       Dcl-S ResultSet5 LIKE(ResultSet);

       Dcl-Ds PResultSet;
         $PContractKey Bindec(9);
         $PTransNumber Char(10);
         $PPONumber Char(20);
         $PCustomer Char(30);
         $PAddressLin1 Char(35);
         $PAddressLin2 Char(35);
         $PCity Char(28);
         $PState Char(2);
         $PPostCd Char(10);
         $PCountry Char(3);
         $PAccount Char(8);
         $PAttn Char(20);
         $PDateOut Date;
         $PTimeOut Time;
         $PDateIn Date;
         $PTimeIn Time;
         $PRentLocCd Char(6);
         $PSourceType Char(1);
         $PDist Char(4);
         $PBegOdo Int(10);
         $PEndOdo Int(10);
       End-Ds;


       Dcl-Pr Snd_Msg ExtPgm('SPYESNOR');
         Text Char(300);
         Rply Char(1);
       End-Pr;
       Dcl-S Text Char(300) Inz;
       Dcl-S Rply Char(1) Inz;
       Dcl-S RecFnd Char(1) Inz;
       Dcl-S EFlag Char(1) Inz;
       Dcl-S WTAXL_Flg Char(1) Inz('0');
       Dcl-S Susp_Flg Char(1) Inz('0');
       Dcl-S LstFlg Char(1) Inz('N');
       Dcl-S DspFlg Char(1) Inz('Y');
       Dcl-S Lwieght_Susp Char(1) Inz;
       Dcl-S PBegDate Date;
       Dcl-S PLicWgt  Char(7);
       Dcl-S PAxles   Char(2);
       Dcl-S PState   Char(2) Inz('OR');
       Dcl-S PError   Char(10);

       Dcl-Pr SECURITY ExtPgm('SECURITY');
       End-Pr;

       Dcl-Pr FMTAXLVLDR ExtPgm('FMTAXLVLDR');
        PCorp     Like(DsCorp);
        PFinCust  Like(DsCust);
        PFinUnit  Like(DsUnit);
        PBegDate_ Like(PBegDate);
        PState_   Like(PState);
        PLicWgt_  Like(PLicWgt);
        PAxles_   Like(PAxles);
        PError_   Like(PError);
       End-Pr;

       Dcl-Pr getDTSSRQ ExtPgm('GETDTSSRQ');
         PIState Char(2) const;
         PICUST Char(6) const;
         PIDIST Char(4) const;
         PIDATE Packed(7) const;
         POFOUND Ind;                                                           // *on if found
         POIMAGE likeds(DTSSRQq);
       End-Pr;

       Dcl-Pr SPVEXIT ExtPgm('SPVEXIT');
         CONFRM_ Like(CONFRM);
       End-Pr;

       Dcl-Pr DTSTSSRR ExtPgm('DTSTSSRR');
         SUSREJ_ Like(SUSREJ);
         REJ_ Like(REJ);
       End-Pr;

       Dcl-Pr SPV1CORP ExtPgm('SPV1CORP');
         @@CORP_ Like(VFCORP);
         WKNME_ Like(WKNME);
         WKAFLG_ Like(WKAFLG);
         WKFLG1_ Like(WKFLG1);
         WKFLG2_ Like(WKFLG2);
         WKPRSC_ Like(WKPRSC);
         WKACSC_ Like(WKACSC);
         WKPRLC_ Like(WKPRLC);
         WKEFLG_ Like(WKEFLG);
         WKUOMC_ Like(WKUOMC);
         WKCTRC_ Like(WKCTRC);
       End-Pr;

       Dcl-Pr SPV1UNIT ExtPgm('SPV1UNIT');
         DSCORP_ Like(DSCORP);
         DSUNIT_ Like(DSUNIT);
         UPIND1_ Like(UPIND1);
         UPDIST_ Like(UPDIST);
         UPLOCN_ Like(UPLOCN);
         UPCUST_ Like(UPCUST);
         UPBGRP_ Like(UPBGRP);
         UPUSE_ Like(UPUSE);
         UPCAT_ Like(UPCAT);
         UPTYPE_ Like(UPTYPE);
         UPVCST_ Like(UPVCST);
         UPACTG_ Like(UPACTG);
         UPSLDT_ Like(Wk_Date7P);
         UPOWNR_ Like(UPOWNR);
         UPADMN_ Like(UPADMN);
         UPALTN_ Like(UPALTN);
         UPAREA_ Like(UPAREA);
         UPREGN_ Like(UPREGN);
         Wk_Date7P_ Like(Beg_Date7);
       End-Pr;

       Dcl-Pr SPCUSRTVR ExtPgm('SPCUSRTVR');
         DSUNIT_ Like(DSUNIT);
         $USE_ Like($USE);
         CusAdr_Date_ Like(Wk_Date7P);
         $Time_ Like($Time);
         ResultSet1_ Like(ResultSet1);
         ResultSet2_ Like(ResultSet2);
         ResultSet3_ Like(ResultSet3);
         ResultSet4_ Like(ResultSet4);
         ResultSet5_ Like(ResultSet5);
         $Error_ Like(WK_CustErr);
         BatchFlag_ Like(BatchFlag);
         BillFlag_ Like(BillFlag);
         GMTFlag_ Like(GMTFlag);
         CTFLAG_ Like(CTFLAG);
         AccFlag_ Like(AccFlag);
       End-Pr;

       Dcl-S $Use Char(10) Inz;
       Dcl-S $Time Packed(6) Inz;
       Dcl-S OPDis Packed(6) Inz;
       Dcl-S HKYU Packed(6) Inz;
       Dcl-S Tflin Char(2) Inz;
       Dcl-S Vfadm Char(4) Inz;
       Dcl-S Exit_Match_Fl Char(1) Inz;
       Dcl-S SAVCUS Char(12) Inz;
       Dcl-S EmFlag Char(1) Inz;
       Dcl-S Bch_Flg Char(1) Inz;
       Dcl-S Bch_Flg1 Char(1) Inz;
       Dcl-S Wk_DSRCWT Packed(7);
       Dcl-S Wk_DSAXLE Packed(1);

       Dcl-Pr SPV1CSVR ExtPgm('SPV1CSVR');
         WKCACT_ Like(WKCACT);
         WKCCUS_ Like(WKCCUS);
         DSCDST_ Like(DSCDST);
         Wk_Date7P_ Like(Beg_Date7);
         WKCERR_ Like(WK_CustErr);
         Wk_CustMst_ Like(Wk_CustMst);
       End-Pr;

       Dcl-Pr DTSTCTNR ExtPgm('DTSTCTNR');
         DSHTRP_ Like(DSHTRP);
         DSBOX_ Like(DSBOX);
         DSBCNO_ Like(DSBCNO);
       End-Pr;

       Dcl-Pr DTSTTRFR ExtPgm('DTSTTRFR');
         CSSBOX_ Like(CSSBOX);
         CSSBAT_ Like(CSSBAT);
         TRFCNT_ Like(TRFCNT);
         DSBOX_ Like(DSBOX);
         DSBCNO_ Like(DSBCNO);
       End-Pr;

       Dcl-Pr DTSTWVNR ExtPgm('DTSTWVNR');
         $RTNCD_ Like($RTNCD);
         $$VEND_ Like($$VEND);
         $$STAT_ Like($$STAT);
         $$VNAM_ Like($$VNAM);
         $$VCTY_ Like($$VCTY);
       End-Pr;

       Dcl-Pr DTSTWINR ExtPgm('DTSTWINR');
       End-Pr;

       Dcl-Pr SPHELP ExtPgm('SPHELP');
         HELPDS_ Like(HELPDS);
       End-Pr;

       Dcl-Pr SPRTVMSV ExtPgm('SPRTVMSV');
         $MID_ Like($MID);
         $MFILE_ Like($MFILE);
         $MLIB_ Like($MLIB);
         $MKEY_ Like($MKEY);
         $MDATA_ Like($MDATA);
         $MSEV_ Like($MSEV);
       End-Pr;

       Dcl-Pr SPCNLRPG ExtPgm('SPCNLRPG');
         PSSA_ Like(PSSA);
       End-Pr;


       Dcl-S wkPgmNam Char(25) Inz('DTSTENTR_G5');
       Dcl-S wkOption Char(1) Inz;
       Dcl-S wkFlag Char(1) Inz;

       Dcl-Pr Rmt_Conn ExtPgm('REMXCONR');
        wkOption_ like(wkOption);
        wkPgmNam_ like(wkPgmNam);
        wkFlag_ like(wkFlag);
        $sqlcod BinDec(9) Options (*NoPass);
        $sqlstate Char(5) Options (*NoPass);
        $sqlmsg  Char(70) Options (*NoPass);
       End-Pr;

       Dcl-Pr DTSTENTR ExtPgm('DTSTENTR');
        PmBoxN Char(7) Options (*NoPass);        // Parameters are Optional
        PmBcno Char(7) Options (*NoPass);
        PmExit Char(1) Options (*NoPass);
        PmRtrn Char(1) Options (*NoPass);
        PmFull Char(1) Options (*NoPass);
        PmTrip Char(8) Options (*NoPass);
       End-Pr;

       Dcl-Pi DTSTENTR;
        PmBoxN Char(7) Options (*NoPass);        // Parameters are Optional
        PmBcno Char(7) Options (*NoPass);
        PmExit Char(1) Options (*NoPass);
        PmRtrn Char(1) Options (*NoPass);
        PmFull Char(1) Options (*NoPass);
        PmTrip Char(8) Options (*NoPass);
       End-Pi;

       Dcl-C NUMRC CONST('0123456789');
       Dcl-C YES CONST('Y');
       Dcl-C NO CONST('N');
       Dcl-C FUN01 CONST('F1=Exit        ');
       Dcl-C FUN02 CONST('F1=Exit F2=Log ');
       Dcl-C FUN03 CONST('F1=Exit F2=List F4=Window');

       Dcl-C FUN04 CONST('F1=Exit F2=List F-
       4=Window F7=Suspend');

       Dcl-C FUN04R CONST('F1=Exit F2=List F-
       4=Window F7=Sus/Rej');

       Dcl-C FUN05 CONST('F1=Exit F2=List F-
       4=Window F5=Override');

       Dcl-C RENT CONST('Daily Service or Rental.');

       Dcl-C XXXXXX CONST('XXXXXXXXXXXXXXXXXXXX');

       Dcl-C WKCHAR CONST(X'D0');
       Dcl-C WKCHAR1 CONST(X'E0');

       Dcl-S REMCNT Packed(3) Inz;

       Dcl-S True        Ind Inz(*On);
       Dcl-S Pmt_Loop    Ind Inz(*On);
       Dcl-S Cus_Loop    Ind Inz(*On);
       Dcl-S Mil_Loop    Ind Inz(*On);
       Dcl-S Asr_Loop    Ind Inz(*On);
       Dcl-S Bil_Loop    Ind Inz(*On);
       Dcl-S Ful_Loop    Ind Inz(*On);
       Dcl-S Batch_lst   Ind Inz(*Off);
       Dcl-S Today_10    Date;
       Dcl-S Today_2Yr   Packed(7) Inz;
       Dcl-S Wk_Date7P   Packed(7) Inz;
       Dcl-S Wk_Date10   Date;
       Dcl-S Wk_DATE6    Packed(6) Inz;
       Dcl-S Wk_MDY      Packed(6) Inz;
       Dcl-S Wk_CYMD     Packed(7) Inz;

       Dcl-S Sfl_End Char(1) Inz('N');

       Dcl-S Beg_Date7 Packed(7) Inz;
       Dcl-S Wk_BegDat7P Packed(7) Inz;
       Dcl-S Wk_EndDat7P Packed(7) Inz;
       Dcl-S Wk_BegDat7 Packed(7) Inz;
       Dcl-S Wk_EndDat7 Packed(7)Inz;
       Dcl-S Wk_BegDt10 Date;

       Dcl-S GoAhead Char(1) Inz;
       Dcl-S RecExist Char(1) Inz;
       Dcl-S VTimestamp Timestamp;

       Dcl-S Hld10 Char(1) Inz('0');
       Dcl-S Wk_Mile_Err Packed(1) Inz;
       Dcl-S Wk_Fuel_Err Packed(1) Inz;
       Dcl-S Acq_Unit_Key Char(20) Inz;
       Dcl-S Wk_Cust8 Char(8) Inz;
       Dcl-S WkRemote  Char(8) Inz;
       Dcl-S WkMachine Char(8) Inz;
       Dcl-S VTDSC Packed(25) Inz;
       Dcl-S DSBODM1 Packed(7) Inz;
       Dcl-S Pos Packed(3) Inz;
       Dcl-S Pos1 Packed(3) Inz;
       Dcl-S TRPMIL Packed(7) Inz;
       Dcl-S Wk25E Char(25) Inz;

       Dcl-S $Once     Char(1)Inz('N');
       Dcl-S FrmLis    Char(1)Inz('N');
       Dcl-S RntUnt    Char(1)Inz('N');

       Dcl-S DSBOX8 Char(8) Inz;
       Dcl-S CONFRM Char(1) Inz;
       Dcl-S REJ Char(1) Inz;
       Dcl-S SUSREJ Char(1) Inz;

       Dcl-S srqFound Ind Inz(*Off);                                            // *on if found
       Dcl-S Lwieght Char(7) Inz;
       Dcl-S #DSRCWT Packed(7) Inz;
       Dcl-S #VF9N72 Packed(7:2) Inz;
       Dcl-S #DSAXLE Packed(2) Inz;

       Dcl-S Valid Char(1);
       Dcl-S OneCust Char(1) Inz('N');
       Dcl-S MltCust Char(1) Inz('N');

       Dcl-S $$STAT Char(2) Inz;
       Dcl-S $$VCTY Char(15) Inz;
       Dcl-S $$VEND Char(6) Inz;
       Dcl-S $$VNAM Char(24) Inz;

       Dcl-S $HSEQ Packed(5) Inz;
       Dcl-S $MDATA Char(256) Inz;
       Dcl-S $MKEY Char(4) Inz;
       Dcl-S $MLIB Char(10) Inz;
       Dcl-S $MSEV Packed(2) Inz;
       Dcl-S $OLEAS Char(1) Inz;
       Dcl-S $RTNCD Char(1) Inz;
       Dcl-S ##COL Like(#CCOL) Inz;
       Dcl-S ##PSSR Char(1) Inz;
       Dcl-S ##ROW Like(#CROW) Inz;
       Dcl-S #TIME Packed(12) Inz;
       Dcl-S @CBAT Packed(3) Inz;
       Dcl-S @RETRN Char(6) Inz;
       Dcl-S AFuel_Err_Cnt Packed(3) Inz;
       Dcl-S AFuel_Req_Fnd Char(1) Inz;
       Dcl-S Ad_Fuel_RRN Packed(4) Inz;
       Dcl-S AState_Err_Cnt Packed(3) Inz;
       Dcl-S AState_Req_Fnd Char(1) Inz;
       Dcl-S Ad_Mile_RRN Packed(4) inz;
       Dcl-S AXLFND Char(1) Inz;
       Dcl-S BEGODM Packed(7) Inz;
       Dcl-S Bill_RRN Packed(4) Inz;
       Dcl-S BLNKAL Char(1) Inz;

       Dcl-S WK_COUNT1 Packed(3) Inz;
       Dcl-S Rls_Cnt Packed(2) Inz;
       Dcl-S Rls_Flg Char(1) Inz;
       Dcl-S CSKEYD Char(1) Inz;
       Dcl-S CSSBAT Char(7) Inz;
       Dcl-S CSSBOX Char(7) Inz;
       Dcl-S CSSTRP Char(8) Inz;
       Dcl-S Cust_Err_Cnt Packed(3) Inz;
       Dcl-S Code2_Fnd Char(1) Inz;
       Dcl-S Days_Diff Packed(7) Inz;
       Dcl-S DEFRN Packed(4) Inz;
       Dcl-S DEMRN Packed(4) Inz;
       Dcl-S DMADMN Char(4) Inz;
       Dcl-S DMAREA Char(4) Inz;
       Dcl-S DMCNTR Char(4) Inz;
       Dcl-S DMLOCN Char(8) Inz;
       Dcl-S DMNAME Char(24) Inz;
       Dcl-S DMREGN Char(4) Inz;
       Dcl-S DORRN Packed(4) Inz;
       Dcl-S DSACTV Char(1) Inz;
       Dcl-S DSAJAR Char(4) Inz;
       Dcl-S DSBOX Char(7) Inz;

       Dcl-S DSDIVS Char(4) Inz;
       Dcl-S DSSFND Char(1) Inz;
       Dcl-S No_Trp# Char(1) Inz;
       Dcl-S ENDODM Packed(7) Inz;
       Dcl-S FATAL Packed(3) Inz;
       Dcl-S FIRST Char(1) Inz;
       Dcl-S Fuel_Err_Cnt Packed(3) Inz;
       Dcl-S FULL Char(1) Inz;
       Dcl-S Fuel_RRN Packed(4) Inz;
       Dcl-S Grn_Tickt_Fnd Char(1) Inz;
       Dcl-S HBDAT Like(DSBDAT) Inz;
       Dcl-S HBDAT1 Like(DSBDAT) Inz;
       Dcl-S HBSPD Packed(7) Inz;
       Dcl-S HDPC Like(DSDPC) Inz;
       Dcl-S HDPS Like(DSDPS) Inz;
       Dcl-S HDSS Like(DSDSS) Inz;
       Dcl-S HELPDS Char(12) Inz;
       Dcl-S HLD22 Char(1) Inz;
       Dcl-S HTRIP Like(DSHTRP) Inz;
       Dcl-S Tot_Miles Packed(7) Inz;
       Dcl-S HUNIT Like(DSUNIT) Inz;
       Dcl-S LSUNIT Like(DSUNIT) Inz;
       Dcl-S INFRN Packed(4) Inz;
       Dcl-S INMRN Packed(4) Inz;
       Dcl-S LstOdo Packed(7) Inz;
       Dcl-S LASTDT Packed(6) Inz;
       Dcl-S LEFND Char(1) Inz;
       Dcl-S LINFND Char(1) Inz;
       Dcl-S LOOP Char(1) Inz;
       Dcl-S LOOP1 Char(1) Inz;
       Dcl-S LOOP2 Char(1) Inz;
       Dcl-S LOOP3 Char(1) Inz;
       Dcl-S LOOP4 Char(1) Inz;
       Dcl-S LSEL Char(1) Inz;
       Dcl-S List_RRN Packed(4) Inz;
       Dcl-S MCUS Char(1) Inz;
       Dcl-S MIERR Char(1) Inz;
       Dcl-S Mile_Err_Cnt Packed(3) Inz;
       Dcl-S Mile_RRN Packed(4) Inz;
       Dcl-S MRRN Packed(4) Inz;
       Dcl-S MSG# Packed(3) Inz;
       Dcl-S Org_Tickt_Fnd Char(1) Inz;
       Dcl-S OVER Packed(3) Inz;
       Dcl-S PANEL Char(4) Inz;
       Dcl-S PERR Char(1) Inz;

       Dcl-S PODOM Packed(7) Inz;
       Dcl-S PRCFG Char(1) Inz;
       Dcl-S Prompt_Err_cnt Packed(3) Inz;
       Dcl-S PRVDAT Packed(7) Inz;
       Dcl-S PTMDY Packed(6) Inz;
       Dcl-S PTYMD Packed(7) Inz;
       Dcl-S REDISP Char(1) Inz;
       Dcl-S WK_COUNT2 Packed(2) Inz;
       Dcl-S SAVBRN Packed(4) Inz;
       Dcl-S SAVFRN Packed(4) Inz;
       Dcl-S SAVRRN Packed(4) Inz;
       Dcl-S SAV28 Char(1) Inz;
       Dcl-S SAV30 Char(1) Inz;
       Dcl-S SAV68 Char(1) Inz;
       Dcl-S SCRCHG Char(1) Inz;
       Dcl-S SEL# Packed(4) Inz;
       Dcl-S SQSEQ# Like(TMSEQ#) Inz;
       Dcl-S SUSP Packed(3) Inz;

       Dcl-S Tax_Fnd Char(1) Inz;
       Dcl-S TMPBCH Char(7) Inz;
       Dcl-S TMPBOX Char(7) Inz;
       Dcl-S TOLFND Char(1) Inz;
       Dcl-S TOTCAP Packed(4) Inz;
       Dcl-S TRFCNT Packed(2) Inz;

       Dcl-S TSTWT Packed(7) Inz;
       Dcl-S UPACTG Packed(3) Inz;
       Dcl-S UPADMN Char(4) Inz;
       Dcl-S UPALTN Char(4) Inz;
       Dcl-S UPAREA Char(4) Inz;
       Dcl-S UPBGRP Char(2) Inz;
       Dcl-S UPCAT Char(8) Inz;
       Dcl-S UPCUST Char(6) Inz;
       Dcl-S UPDIST Char(4) Inz;
       Dcl-S UPIND1 Char(1) Inz;
       Dcl-S UPLOCN Char(2) Inz;
       Dcl-S UPOWNR Char(4) Inz;
       Dcl-S UPREGN Char(4) Inz;
       Dcl-S UPTYPE Char(8) Inz;
       Dcl-S UPUSE Char(6) Inz;
       Dcl-S UPVCST Char(8) Inz;
       Dcl-S WARN Packed(3) Inz;
       Dcl-S WGTFND Char(1) Inz;
       Dcl-S WKACSC Char(2) Inz;
       Dcl-S WKAFLG Char(1) Inz;
       Dcl-S WKBOXT Char(7) Inz;
       Dcl-S WKCACT Char(8) Inz;
       Dcl-S WKCCUS Char(6) Inz;
       Dcl-S WK_CustErr Char(1) Inz;
       Dcl-S BatchFlag Char(1) Inz;
       Dcl-S BillFlag Char(1) Inz;
       Dcl-S GMTFlag Char(1) Inz(' ');
       Dcl-S CTFLAG Char(1) Inz(' ');
       Dcl-S AccFlag Char(1) Inz;
       Dcl-S WKCTRC Char(3) Inz;
       Dcl-S Wk_Cust6 Char(6) Inz;
       Dcl-S Wk_Cust1 Char(1) Inz;
       Dcl-S Wk_STNUM Packed(2) Inz;

       Dcl-S WKEFLG Char(1) Inz;
       Dcl-S WKFLG Char(1) Inz;
       Dcl-S WKFLG1 Char(1) Inz;
       Dcl-S WKFLG2 Char(1) Inz;
       Dcl-S WKFPG1 Packed(5:1) Inz;
       Dcl-S WKFPG2 Packed(5:1) Inz;
       Dcl-S WKIND Char(1) Inz;
       Dcl-S WKLDF Like(TMLDF) Inz;
       Dcl-S WKLICW Packed(7) Inz;
       Dcl-S WKNME Char(24) Inz;
       Dcl-S WKPRLC Char(1) Inz;
       Dcl-S WKPRSC Char(2) Inz;
       Dcl-S WKSPER Char(1) Inz;
       Dcl-S WKSTNO Packed(2) Inz;
       Dcl-S WKTARE Like(VFTARE) Inz;
       Dcl-S WKFCtr Packed(3) Inz;
       Dcl-S WKTLTR Packed(5:1) Inz;
       Dcl-S WKUOMC Char(1) Inz;
       Dcl-S WRKQTY Packed(5:1) Inz;
       Dcl-S Ctr Packed(4) Inz;
       Dcl-S Fnd_Flg Packed(2) Inz;
       Dcl-S DATA_FND Packed(6) Inz;

      /Copy QRPGLECPY,SPV1DSTCB



        Exsr Getbatchflg ;
        ExSr GetAccFlag;

        ExSr Dts_Begin;
        ExSr End_Pgm;

       Begsr  Getbatchflg;

         Clear WRKDESC ;

         Exec Sql Select SHORT_DESC
                    Into :WRKDESC
                    from VEHTABF
                   Where SYSTEM_CODE = 'DTS' and PROGRAM_NAME  = 'DTSTENTR' and
                         FIELD_NAME  = 'BATBILL' and RECORD_STATUS = 'A'
                   Fetch First Row only;

         Select;
         When SQLCODE = 100;
            BATCHFLAG = ' ';
            BILLFLAG = ' ';
         When %Subst((WRKDESC):1:1) =' ';
            BATCHFLAG = ' ';
         When %Subst((WRKDESC):1:1) ='Y';
            BATCHFLAG = 'Y';
         Other;
            BATCHFLAG = 'N';
         EndSl;

         Select;
         When %Subst((WRKDESC):2:1) =' ';
            Billflag  = ' ';
         When %Subst((WRKDESC):2:1) ='Y';
            Billflag  = 'Y';
         Other;
            Billflag  = 'N';
         EndSl;

       Endsr;
SM01   //-----------------------------------------------------------------
SM01   // Routine  :    GetAccFlag;                                       *
SM01   // Function :Get AccFlag from VEHTABF.                            *
SM01   //-----------------------------------------------------------------
SM01   BegSr GetAccFlag;

         Clear WRKDESC;

SM01     Exec Sql Select SHORT_DESC
                    Into :WRKDESC
                    from VEHTABF
SM01               Where  SYSTEM_CODE = 'DTS' and PROGRAM_NAME  = 'DTSTENTR' and
SM01                      FIELD_NAME  = 'ACCFLG' and RECORD_STATUS = 'A'
                   Fetch First Row only ;

SM01     If SqlCode = 0;
SM01        Select;
SM01        When %Subst((WRKDESC):1:1) =' ';
SM01             ACCFLAG = ' ';
SM01        When %Subst((WRKDESC):1:1) ='Y';
SM01             ACCFLAG = 'Y';
            When %Subst((WRKDESC):1:1) ='N';
SM01             ACCFLAG = 'N';
SM01        EndSl;
SM01     EndIf;
SM01     Clear SqlCode;

SM01   EndSr;

        BegSr Dts_Begin;

          Reset FrmLis;    // FrmLis will be set as 'N'
          DSTKTRCVD = 'N';

          Exsr @ConnectSr;
          WkRemote = SqlErm;

          Exec Sql Connect Reset;
          WkMachine = SqlErm;

          Exsr Process_Prompt;
          If *InKa = *On Or *InKb = *On;
             LeaveSr;
          EndIf;
          *In18 = *Off;

          Exsr Batch_List;

          Select;
          When *InKa = *On;
             LeaveSr;
          When DshTrp = ' ';
             Batch_lst = *Off;
             No_Trp# = '1';
             Exsr Dts_Process;
             LeaveSr;
          EndSl;
          Exsr Dts_Process;

        EndSr;
        BegSr Dts_Process;

         Dow Pmt_Loop;

          Reset FrmLis;    // FrmLis will be set as 'N'
          If Batch_lst = *On;
            FrmLis  = 'Y';
          EndIf;
          DSTKTRCVD = 'N';

          If No_Trp# = '1';
            Exsr Process_Prompt;
            If LstFlg = 'Y';
               DspFlg = 'Y';
            Endif;
            If *InKa = *On Or *InKb = *On;
               Leave;
            EndIf;

            If Batch_lst = *Off;
               *In18 = *Off;
               Exsr Batch_List;
               if CONFRM = 'Y';
                 Exsr End_Pgm;
                 Return;
               Endif;
            EndIf;

            Select;
            When *InKa = *On;
               Leave;
            When DshTrp = ' ';
               Batch_lst = *Off ;
               Iter;
            EndSl;
          EndIf;
          No_Trp# = '1';

          RntUnt = 'N';
          Reset Cus_loop;            //Cus_loop will be set as '1'
          Dow Cus_Loop;
            Susp_Flg = '0';
            Exsr Process_Cust_Header;

            Select;
            When *InKa = *On;
              LeaveSr;
            When *InKb = *On;
              Leave;
            EndSl;

            Reset Mil_Loop;          //Mil_loop will be set as '1'
            Dow Mil_Loop;

              Exsr Process_State_Mileage;

              Select;
              When *InKa = *On;
                LeaveSr;
              When *InKb = *On;
                Leave;
              EndSl;

              Reset Asr_Loop;       //Asr_Loop will be set as '1'
              Dow Asr_Loop;

                Select;
                When SavRrn > 0;
                  Exsr Prc_Add_State_Mil_Req;  // Process Additional State Mileage Requirements

                  Select;
                  When *InKa = *On;  // Function key F1, Leave the Process
                    LeaveSr;

                  When *InKb = *On;   // Function key F2, process the state mileage screen
                    ASSRN = 1;
                    Leave;
                  Endsl;

                Other;
                  AState_Req_Fnd = No;
                EndSl;

                If Susp_Flg = '0' and WTAXL_Flg = '1' and
                  AState_Req_Fnd = 'N';
                  Exsr WgtAxl_Vldr;

                  If Susp > 0;
                     *IN33 = *ON;
                     *IN43 = *ON;
                     *IN44 = *ON;
                     Susp_Flg = '1';

                     Select;
                     When *INKG = *ON And *IN07 = *ON;
                     When *INKB = '1';
                       Mil_Loop = '0';
                       Leave;
                     Other;
                       Leave;
                     EndSl;
                  Endif;
                Endif;

                Reset Bil_Loop;        //Bil_Loop will be set as '1'
                Dow Bil_Loop;
                  Susp_Flg = '0';
                  Exsr Proc_Bill_Fuel;


                  Select;
                  When *InKa = *On;  // Function key F1, Leave the Process
                    LeaveSr;
                  When *InKb = *On and AState_Req_Fnd = 'Y';
                    Leave;
                  When *InKb = *On;
                    Asr_Loop = *Off;
                    Leave;
                  EndSl;

                  Reset Ful_Loop;        //Ful_Loop will be set as '1'
                  Dow Ful_Loop;
                    ExSr Proc_Fuel_Purchase;

                    Select;
                    When *InKa = *On;    // Function key F1, Leave the Process
                      LeaveSr;
                    When *InKb = *On;   // Function key F2 - Process Billing Fuel screen
                      Leave;
                    EndSl;

                    Select;
                    When SavFrn > 0;   // Function key F1, Leave the Process
                      Exsr Proc_Add_Fuel_Req;

                      Select;
                      When *InKa = *On;   // Function key F1, Leave the Process
                         LeaveSr;
                      When *InKb = *On;
                         Iter;
                      Endsl;

                    Other;
                      AFuel_Req_Fnd = No;
                    EndSl;

                    Select;
                    When Mode = 'ADD    ';
                      Exsr Write_Dts_File;
                    When Mode = 'CHANGE ' and Batch_lst = *Off;
                      Exsr Update_Dts_File;
                    When Mode = 'CHANGE ';
                      Exsr Update_Dts_File;
                      WCUST = DSCUST;
                      WCBG = DSCBG;
                      WCDST = DSCDST;
                      WCORP = DSCORP;
                      WUNIT = DSUNIT;
                      WDPC = DSDPC;
                      WDPS = DSDPS;
                      WDSC = DSDSC;
                      WDSS = DSDSS;
                      WKEYDT = DKEYDT;
                      WSEQ = DSSEQ;

                      Select;
                      When SUSP = 0;
                        WERR = 'VALID';
                      When *IN07 = *On And SUSREJ = 'R';
                        WERR = 'REJEC';
                      Other;
                        WERR = 'SUSPE';
                      EndSl;
                    EndSl;

                    Ful_Loop = *Off;
                    Bil_Loop = *Off;
                    Asr_Loop = *Off;
                    Mil_Loop = *Off;
                    Cus_Loop = *Off;

                  EndDo;
                EndDo;
              EndDo;
            EndDo;
          EndDo;

          DspFlg = 'Y';
          If LstFlg = 'Y' and LSTOPT <> ' ';
            *INKB = '1';
            LOOP1 = *OFF;
            DspFlg = 'N';
          Endif;

         EndDo;

        EndSr;

        BegSr End_Pgm;
          If %Parms() <> 0;
            PmExit = *Inka;
            PmrTrn = *Inkb;
          EndIf;
          Exsr @DisconnectSr;
          *InLr = *On;
        EndSr;
       BegSr Process_Prompt;

         In JobRun;

         If BchRun = 'Y' and Bch_Flg <> 'Y';
           ExSr ChkDtaRef;
         EndIf;
         Bch_Flg = 'N';

         DsCusn = *Blanks;                                                    // cust name
         DsCust = *Blanks;                                                    // cust number
         DsCbg = *Blanks;                                                     // bill group
         DsCdst = *Blanks;                                                    // cust distric
         Panel = 'PRMT';


         Select;
         When %Parms() = 0 and FRMLIS = 'N';
             *IN20 = *OFF;
             Funmsg = FUN01;
         When %Parms() = 0;
             *IN20 = *ON;
             FUNCLN = *BLANKS;
             FunCln = Fun03;



         When %Parms() = 5 And FrmLis = 'N' And
             *In01 = *ON And Full <> 'Y';
             Exsr Additnl_Fuel_Req;
             *In20 = *Off;
             Funmsg = Fun02;                // Function Key
             FunCln = FunDsp;
             If Mode <> 'ADD    ';
               *Inki = *On;
               ExSr Chg_Mode;
             EndIf;

         When %Parms() = 5 And FrmLis = 'N' And Mode <> 'DISPLAY';
             Exsr Additnl_Fuel_Req;
             *In20 = *Off;
             Funmsg = Fun02;                // Function Key
             FunCln = FunDsp;
             *Inkh = *ON;
             Exsr Chg_Mode;

         When %Parms() = 5 And FrmLis = 'N';
             Exsr Additnl_Fuel_Req;
             *In20 = *Off;
             Funmsg = Fun02;                // Function Key
             FunCln = FunDsp;

         When %Parms() = 5;
             Exsr Additnl_Fuel_Req;
             *In20 = *On;
             FunCln = *Blanks;
             FunCln = Fun03;

         When %Parms() = 6 and *In02 = *On;
             Exsr Additnl_Fuel_Req;

             If $Once <> 'Y';
               DsHtrp = PmTrip;
             EndIf;
             *In20 = *On;

             Mode = 'CHANGE ';
             Clear Chg05;
             Clear Chg07;
             Clear Chg08;
             Clear Chg09;
             Clear Chg11;
             Funmsg = Fun02;
             FunCln = FunChg;

         When %Parms() = 6;
             Exsr Additnl_Fuel_Req;

             If $Once <> 'Y';
               DsHtrp = PmTrip;
             EndIf;

             *In20 = *On;
             Clear DSP06;
             Clear DSP09;
             Clear DSP10;
             Clear DSP11;
             Funmsg = FUN02;
             FunCln = FunDsp;
             *INKH = *On;
             MODE = '       ';
             EXSR Chg_Mode;
         EndSl;


         If *INKB = *OFF
           And FRMLIS = 'N';
           Exsr Clear_Prompt;
         EndIf;

         If %Parms() >= 5;
           *INKB = '1';
         Endif;

         *IN32 = *OFF;

         *In80 = (DSBOX <> *BLANKS);


         If DspFlg = 'Y';
           LOOP1 = *ON;
         Endif;

         Dow LOOP1 = *ON;
           If TMPBCH <> *BLANK;
             DSBCNO = TMPBCH;
           ENDIF;

           Reset FDtsBat;
           Exec Sql Select BtSts,  BTODTR, BTKDTR, BTVDTR, BTSDTR, BTDDTR
                      into :BTSTS,:BTODTR,:BTKDTR,:BTVDTR,:BTSDTR,:BTDDTR
                      from FdtsBat
                    Where  BtBox = :DsBox and BtBat = :DsBcno
                    Fetch first row only;
           If SqlCode = 0;
              Exsr Batch_Sts_Desc;
           EndIf;
           Clear SqlCode;

           LSUNIT = DSUNIT;


           WRITE MSGCLR;
           WRITE MSGCTL;


           WRITE TITLE;

           *In64 = *On;
           Write PROMPT;
           Read DTSTENTD;
           *In67 = %Eof;


           *IN70 = *OFF;


           *IN40 = *OFF;
           *IN41 = *OFF;
           *IN42 = *OFF;
           *IN43 = *OFF;


           *IN80 = *OFF;

           *IN32 = *OFF;
           *IN33 = *OFF;

           #DSRCWT = 0;
           #DSAXLE = 0;
           SUSREJ = *BLANKS;

           Select;
           When Mode = 'ADD' and FRMLIS = 'N';
               Clear ADD05;
               Clear ADD07;
               FunCln = FunAdd;
           When Mode = 'CHANGE' and FRMLIS = 'N';
               Clear CHG05;
               Clear CHG07;
               FunCln = FunChg;
           EndSl;

           Exsr Reset_Err_Acc;


           Select;
           When *Inka = *On;
             SPVEXIT ( CONFRM );
             If ConFrm = 'Y';
               LeaveSr;
             EndIf;

           When *Inkb = *On;
             LeaveSr;

           When *Inkd = *On;
             ExSr Inquiry_Window;

           When *Inkh = *On Or *Inki = *On
             Or *Inkj = *On Or *Inkk = *On;
             Exsr Chg_Mode;

           When *In90 = *On;
             ExSr Process_Help;

           When *inKa <> *On;
             ExSr Clear_DS;
             ExSr Validate_Prompt;

                Select;
                When Over = 0 And Susp = 0 And Fatal = 0;

                  Select;
                  When Mode <> 'DELETE' and ReDisp = 'Y';
                      Clear ReDisp;
                  When Mode <> 'DELETE';        //indicates ReDisp <> 'Y'
                      Loop1 = *Off;
                  EndSl;

                When Fatal = 0 and Susp > 0;
                   *In33 = *On;

                   Select;
                   When FRMLIS = 'N' and Mode = 'ADD';

                     ADD07 = FUNFR(1);
                     If *IN07 = *Off;
                       ADD07 = FUNF(1);
                     EndIf;
                     FunCln = FunAdd;

                   When FRMLIS = 'N' and Mode = 'CHANGE';
                     CHG07 = FUNFR(1);
                     If *IN07 = *Off;
                       CHG07 = FUNF(1);
                     EndIf;
                     FunCln = FunChg;

                   When FRMLIS <> 'N';
                      FunCln = *Blanks;
                      FunCln = Fun04R;
                      If *IN07 = *Off;
                         FunCln = Fun04;
                      EndIf;

                   EndSl;

                When Over > 0 And Susp = 0  And Fatal = 0;
                   *In32 = *ON;

                   Select;
                   When FRMLIS = 'N' and MODE = 'ADD';
                     ADD05 = FUNG(1);
                     FunCln = FunAdd;

                   When FRMLIS = 'N' and MODE = 'CHANGE';
                     CHG0512 = FUNG(1);
                     FunCln = FunChg;

                   When FRMLIS <> 'N';
                     FUNCLN = *BLANKS;
                     Funcln = Fun05;
                   ENDSl;
                EndSl;

                If (Over <> 0 or Susp <> 0 or Fatal <> 0)
                  and (*INKE = *ON Or *INKG = *ON);

                    If *INKG = *ON And *IN07 = *ON;

                      Exsr DTS_Sus_Rej;

                    ENDIF;
                    LeaveSr;
                EndIf;

           Other;

             ExSr Clear_DS;
             ExSr Validate_Prompt;
             LeaveSr;
           EndSl;

         EndDo;

       EndSr;
       BegSr Additnl_Fuel_Req;

          *In34 = *On;
          If $Once <> 'Y';
            DsBox = PmBoxn;
            %Subst(DsBox8:1:7) = PmBoxn;
            DsBcno = PmBcno;
            Full = PmFull;
            $Once = 'Y';
          EndIf;

          Clear Hdpc;
          Clear Hdps;
          *Inkb = *Off;

       EndSr;
       BegSr Reset_Err_Acc;

           Clear OVER;
           Clear SUSP;
           Clear FATAL;
           Clear WARN;

       EndSr;
       BegSr Clear_Prompt;


         If %Parms() <> 6;
           CLEAR DSHTRP;
         ENDIF;
         CLEAR DSUNIT;
         CLEAR DSCORP;
         CLEAR DSBDAT;
         CLEAR HTRIP;
         CLEAR HUNIT;
         CLEAR HBDAT;


         If MODE <> 'ADD    '
           And MODE <> 'CHANGE ';
           *IN25 = *ON;
         EndIf;

       EndSr;
       BegSr Clear_DS;

         For Ctr = 1 To 20;
           %Occur(PRMMSG) = Ctr;
           Clear PrmMsg;
         EndFor;

         Clear Prompt_Err_cnt;

       EndSr;
       BegSr Batch_Sts_Desc;

         Select;
         When BtSts = 'S';
           WkSts = 'SHIPPED';
         When BtSts = 'O';
           WkSts = 'OPENED ';
         Other;
           WkSts = 'CLOSED ';
         EndSl;

       EndSr;
       BegSr Validate_Prompt;


         If DsBox = *Blanks Or DsbCno = *Blanks;
           *In40 = *On;
           $Msgid = '0019';


           If DshTrp <> *Blanks And Mode <> 'ADD';

             EvalR DsHTrp = %Trim(DsHTrp);

             Exec Sql Select TmbCno,TmbCno,Tm7a08
                       Into :DsbCno,:TmpBch,:DsBox8
                       From  HdrCsr_A
                       Where TmhTrp = :DshTrp
                       Fetch first row only;
             If SqlCode = 0;
               DsBox = %trim(DsBox8);
               TmpBox = DsBox;
               $Msgid = '0049';
             EndIf;
             Clear SqlCode;
           EndIf;

           ExSr Err_Message;
           If DsBox <> *Blanks;
              Eval TmpBox = *Zero;
              EvalR TmpBox = %Trim(DsBox);
              EvalR TmpBox = %xlate(' ':'0':TmpBox);
              Eval  DsBox = TmpBox;
              EvalR DsBox8 = %Trim(TmpBox);
           Endif;

           If DsbCno <> *Blanks;
              Eval TmpBch = *Zero;
              EvalR TmpBch = %Trim(DsBcNo);
              EvalR TmpBch = %xlate(' ':'0':TmpBch);
              EvalR DsBcNo = %Trim(TmpBch);
           Endif;

           LeaveSr;
         Endif;

         Eval TmpBox = *Zero;
         EvalR TmpBox = %Trim(DsBox);
         EvalR TmpBox = %xlate(' ':'0':TmpBox);
         Eval  DsBox = TmpBox;
         EvalR DsBox8 = %Trim(TmpBox);

         Eval TmpBch = *Zero;
         EvalR TmpBch = %Trim(DsBcNo);
         EvalR TmpBch = %xlate(' ':'0':TmpBch);
         EvalR DsBcNo = %Trim(TmpBch);


         Exec Sql Select BtBox, BtBox, BtBat, BtBat, BtSts, BtvDtr,
                         BtsDtr, BtmDtr, BtoDtr, BtkDtr, BtForm, BtdDtr
                    Into :BtBox,:TmpBox,:BtBat,:TmpBch,:BtSts,:BtvDtr,
                         :BtsDtr,:BtmDtr,:BtoDtr,:BtkDtr,:BtForm,:BtdDtr
                    From FDtsBat
                   Where BtBox = :DsBox and BtBat = :DsBcno
                   Fetch first row only;

         Select;
         When SqlCode = 100;
             *IN40 = *ON;
             $Msgid = '0051';
             Exsr Err_Message;

         When BtSts = 'S' And Mode <> 'DISPLAY';
             *IN40 = *ON;
             $Msgid = '0193';
             Exsr Err_Message;
         Other;

             $HSeq = 0;
             Exsr Fetch_Seq_Num;
             If SqlCode = 0;
               $HSeq = TmSeq#;
             Endif;
             Clear SqlCode;


             DSTCNT = BTVDTR + BTSDTR;
             DSLNTR = BTMDTR;

             Exsr Batch_Sts_Desc;

             Exsr Verify_Trip_cnt;


             If DshTrp <> *Blanks;

                 EvalR DsHTrp = %Trim(DsHTrp);

               WKEFLG = 'N';

               Clear Wk_Hdr;
               Exec Sql Select  TmUnit, TmaFm,TmaFy
                          Into :TmUnit,:TmaFm,:TmaFy
                          From  HdrCsr_A
                          Where TmhTrp = :DshTrp
                          Fetch first row only;
               If SqlCode = 0
                 And (Mode = 'CHANGE ' Or Mode = 'DELETE ');

                   If   (BTSTS = 'S')
                     Or (TMAFM < Pr_MM And TMAFM <> 0
                        And TMAFY <= Pr_CYY)
                     Or (TMAFY < Pr_CYY And TMAFY <> 0);
                     *IN40 = *ON;
                     WKEFLG = 'Y';
                    $Msgid = '0193';
                     Exsr Err_Message;
                   EndIf;

               EndIf;

               Clear SqlCode;


               Select;
               When DsUnit <> *Blanks;
                 EvalR DsUnit = %Trim(DsUnit);
               When Mode <> 'ADD' And Mode <> 'CHANGE';
                 DsUnit = TmUnit;
               EndSl;

               CLEAR STATUS;


               If Mode = 'ADD';
                  ExSr Add_Validation;
                  LeaveSr;
               EndIF;
               ExSr Other_Mode_Validation;       //Mode <> 'ADD'
             EndIf;
         EndSl;
         Clear SqlCode;

       EndSr;
       BegSr Fetch_Seq_Num;

          Exec Sql Select TmSeq# Into :TMSEQ# from HdrCsr_A
                   Where Tm7a08 = trim(:DsBox8) and TmBcno = :DsBcno
                     and TmpYy  = :Cur_Cyy7 and TmpMm  = :Cur_Mm7
                     and TmpDd  = :Cur_Dd7
                   Order By Tm7a08,TmBcno,TmpYy,TmpMm,TmpDd,TmSeq# Desc
                   Fetch first row only;

       EndSr;
       BegSr DTS_Sus_Rej;

         REJ = ' ';
         If Wk_BegDat7 < Today_2Yr;
           REJ = 'R';
         ENDIF;

         DTSTSSRR ( SUSREJ : REJ );

         If SUSREJ <> 'R';
           DSBOX = TMPBOX;
           WkSts = 'OPENED ';
           DSBCNO = TMPBCH;
         ENDIF;

       EndSr;
       BegSr Verify_Trip_cnt;

         FULL = NO;
         If BTODTR = BTKDTR;
            FULL = 'Y';
         EndIf;

       EndSr;
        BegSr Other_Mode_Validation;

           Reset Wk_Hdr;

           Exec Sql Select TMCUST, TMCORP, TMUNIT, TMCDST, TM4A01,
                           TMBDAT, TMSEQ#, TMCBG, TMDPC, TMDPS, TMDSC,
                           TMDSS, TMERR, TMPMM, TMPDD, TMPYY, TMKYU
                      into :TMCUST, :DSCORP, :HUNIT, :TMCDST, :EFlag,
                           :TMBDAT, :DSSEQ, :TMCBG, :TMDPC, :TMDPS,
                           :TMDSC, :TMDSS, :TMERR, :Wk_MM7, :Wk_DD7,
                           :Wk_CYY7, :TMKYU
                      from HdrCsr_A
                     Where TM7A08 = :DSBOX And TMBCNO = :DSBCNO And
                           TMHTRP = :DSHTRP
                     Fetch first row only;


           Select;
           When SqlCode = 0 and DSUNIT = LSUNIT;
              DSUNIT = HUNIT;
           When SqlCode <> 0;
              *IN41 = *ON;
              $Msgid = '0053';
              Exsr Err_Message;
              LeaveSr;
           EndSl;

           If Wk_Date7 > 0;
             Wk_Date10 = %Date(Wk_Date7:*CYMD);
             DKeyDt = %Dec(Wk_Date10:*MDY);
           Else;
             Wk_Date10 = %Date('0001-01-01');
             DKeyDt = 0;
           Endif;

           Clear Status;
           Select;
           When TMERR = 'Y';
              STATUS = 'SUSPENDED';
           When TMERR = 'R';
              STATUS = 'REJECTED';
           Other;
              STATUS = 'VALID';
           EndSl;


           Select;
           When Mode = 'DELETE';
              Exsr Clear_Dlt_Sf;
              CLEAR DEL_RRN;

              DSCUST = TMCUST;
              DSCBG  = TMCBG;
              DSCDST = TMCDST;
              Beg_Date7 = TMBDAT;

              If TMBDAT > 0;
                Wk_Date10 = %Date(TMBDAT:*CYMD);
                DsBDat = %Dec(Wk_Date10:*MDY);
              Else;
                Wk_Date10 = %Date('0001-01-01');
                DsBDat = 0;
              Endif;

              DSDPC = TMDPC;
              DSDPS = TMDPS;
              DSDSC = TMDSC;
              DSDSS = TMDSS;
              DSERR = STATUS;
              DEL_RRN = DEL_RRN + 1;
              WRITE DELSFL;
              If *In11 = *ON
               And WKEFLG = 'N';
                   Exsr Delete_Prompt;
              EndIf;




           When DSHTRP <> HTRIP And FRMLIS <> 'Y';

                HTRIP = DSHTRP;
                Beg_Date7 = TMBDAT;

                If TMBDAT > 0;
                  Wk_Date10 = %Date(TMBDAT:*CYMD);
                  DsBDat = %Dec(Wk_Date10:*MDY);
                Else;
                  Wk_Date10 = %Date('0001-01-01');
                  DsBDat = 0;
                Endif;

                HBDAT = DSBDAT;


                If MODE = 'CHANGE' And FRMLIS = 'N';
                   REDISP = 'Y';
                EndIf;
                Eval HKYU = TMKYU;
           EndSl;


           If MODE = 'CHANGE' and REDISP <> 'Y';

              EXSR Valid_Unit;

              If DSBDAT <> HBDAT or DSBDAT <> HBDAT1;
                 HBDAT1 = DSBDAT;
                 Wk_DATE6 = DSBDAT;
                 EXSR Validate_Date;
                 Beg_Date7 = Wk_BegDat7;
              EndIf;
           EndIf;
        EndSr;
        BegSr Add_Validation;
          Clear DkeYdt;
          Clear DsSeq;

          If Full = 'Y';
            *In40 = *On;
            $Msgid = '0054';
            Exsr Err_Message;
            LeaveSr;
          EndIf;

          Exsr Edit_Trip;
          If *In41 = *Off;


             Exec Sql Select (1) into :Data_Fnd from HdrCsr_A
                       Where TmhTrp = :DshTrp
                       Fetch First row only;

             If SqlCode <> 0;
                Exec Sql Select (1) into :Data_Fnd from MileCsr_A
                         Where TmsTrp = :DshTrp
                               Fetch First row only;
                If SqlCode <> 0;
                   Exec Sql Select (1) into :Data_Fnd from FuelCsr_A
                            Where TfTrip = :DshTrp
                                  Fetch First row only;
                EndIf;
             EndIf;

             If SqlCode = 0;
               *In41 = *ON;
               $Msgid = '0052';
               Exsr Err_Message;
               LeaveSr;
             EndIf;

             Clear SqlCode;

             Exec Sql Select TM7A08,TMBCNO,TMERR
                        into :TM7A08,:TMBCNO,:TMERR
                        from HdrCsr_A
                       Where TmhTrp = :DshTrp
                       Fetch First row only;

             Select;
             When SqlCode = 0 And (TMERR <> 'R' Or DSBOX = WKBOXT);
                WKBOXT = TM7A08;
                *IN41 = *ON;
                $Msgid = '0052';
                EXSR Err_Message;
             When SqlCode = 0;
                *IN41 = *ON;
                $Msgid = '0030';
                REDISP = 'Y';
                EXSR Err_Message;
             Other;
                Exsr Valid_Unit;
                Wk_DATE6 = DSBDAT;
                Exsr Validate_Date;
                Beg_Date7 = Wk_BegDat7;
                Clear SqlCode;
             EndSl;
          EndIf;

        EndSr;
        BegSr Clear_Dlt_Sf;
          *In(60) = *On;
          *In(61) = *Off;
          *In(62) = *Off;
          *In(63) = *Off;
          *In(64) = *Off;
          *In(65) = *Off;
          *In(66) = *Off;
          *In(67) = *Off;
          *In(68) = *Off;
          *In(69) = *Off;
          Write DelCtl;
          *In(60) = *Off;
          *In(61) = *Off;
          *In(62) = *On;
          *In(63) = *On;
          *In(64) = *Off;
          *In(65) = *Off;
          *In(66) = *Off;
          *In(67) = *Off;
          *In(68) = *On;
          *In(69) = *Off;
        EndSr;
       BegSr Edit_Trip;


         CLEAR TRP;
         WK_COUNT1 = 1;
         Dou WK_COUNT1 > 8;
         TRP(WK_COUNT1) = %subst(DSHTRP:WK_COUNT1:1);
         WK_COUNT1 = WK_COUNT1 + 1;
         EndDo;
         WK_COUNT1 = 1;
         Exit_Match_Fl = 'N';
         BLNKAL = 'Y';
         Dou Exit_Match_Fl = 'Y'
           Or WK_COUNT1 > 8;


           If TRP(WK_COUNT1) <> ' ';
             BLNKAL = 'N';
           ENDIF;

           Select;
           When TRP(WK_COUNT1) >= 'A'
             And TRP(WK_COUNT1) <= 'Z'
             And TRP(WK_COUNT1) <> WKCHAR
             And TRP(WK_COUNT1) <> WKCHAR1
             Or TRP(WK_COUNT1) >= '0'
             And TRP(WK_COUNT1) <= '9';
                           //Do Nothing

           When TRP(WK_COUNT1) = ' '
               And BLNKAL = 'N'
               Or TRP(WK_COUNT1) <> ' ';
               *IN41 = *ON;
               $Msgid = '0029';
               EXSR Err_Message;
               Exit_Match_Fl = 'Y';
           ENDSl;

           WK_COUNT1 = WK_COUNT1 + 1;
         ENDDO;

       EndSr;

       BegSr Delete_Prompt;


         LOOP3 = *ON;
         Dow LOOP3 = *ON;


           WRITE MSGCLR;
           WRITE MSGCTL;


           DEL_RRN = 1;
           WRITE DELFUN;

           *In64 = *On;
           WRITE DELCTL;
           READ DTSTENTD;
           *In67 = %Eof;


           *IN70 = *OFF;



           Select;
           When *INKA = *ON Or *INKD = *ON;
             $Msgid = '0097';
             EXSR Err_Message;

           When *INKB = *ON;
             $Msgid = '0017';
             EXSR Err_Message;
             LeaveSr;

           When *IN90 = *ON;
             EXSR Process_Help;

           Other;
                 LOOP3 = *OFF;
                 WKFLG = 'N';
                 CHAIN DEL_RRN DELSFL;

                 Dow %Found();
                   *IN67 = *OFF;

                   If  #PSFSI = '01218';
                     LOOP3 = *ON;
                     *IN67 = *ON;
                     If WKFLG <> 'Y';
                       $Msgid = '0014';
                       EXSR Err_Message;
                       WKFLG = 'Y';
                     EndIf;

                   EndIf;

                   UPDATE DELSFL;
                   DEL_RRN = DEL_RRN + 1;
                   CHAIN DEL_RRN DELSFL;
                 EndDo;
                 *IN67 = *OFF;

                 DEL_RRN = 1;
                 If LOOP3 = *OFF;
                   CHAIN DEL_RRN DELSFL;
                   Dow %Found();


                     BtBox = Dsbox;
                     BtBat = Dsbcno;

                     Exec Sql Declare Batch_Csr Cursor for
                              Select BTVDTR,BTSDTR,BTDDTR,BTODTR,
                                     BTKDTR,BTMDTR,BTSTS, BTDCLO,
                                     BTDCOM, BTTCLO, BTCCOM
                                From FDTSBAT
                               Where BtBox = :BtBox and BtBat = :BtBat
                               Fetch first row only FOR UPDATE;

                     Exec Sql Open Batch_Csr;

                     If SqlCode = -913;
                       LOOP3 = *OFF;
                       $Msgid = '0002';
                       EXSR Err_Message;
                       Leave;
                     Endif;

                     If SqlCode = 0;
                        Exec Sql Fetch Batch_Csr
                                  into :BTVDTR,:BTSDTR,:BTDDTR,:BTODTR,
                                       :BTKDTR,:BTMDTR,:BTSTS, :BTDCLO,
                                       :BTDCOM,:BTTCLO,:BTCCOM;
                        If SqlCode <> 0;
                          Exec Sql Close Batch_Csr;
                          Leave;
                        Endif;

                       $Msgid = '0018';
                       EXSR Err_Message;

                       Select;
                       When DSERR = 'VALID';
                           BTVDTR = BTVDTR - 1;
                       When DSERR = 'SUSPE';
                           BTSDTR = BTSDTR - 1;
                       Other;
                           BTDDTR = BTDDTR - 1;
                       EndSl;

                       BTKDTR = BTKDTR - 1;





                       Exsr Verify_Trip_cnt;

                       #Time = %Dec(%Time());

                       Exsr Populate_Batch_Cols;

                       Exsr Batch_Sts_Desc;

                    Exec Sql Update FDTSBAT
                             set BTVDTR=:BTVDTR, BTSDTR=:BTSDTR, BTDDTR=:BTDDTR,
                                 BTKDTR = :BTKDTR, BTDFIN = :Today_7,
                                 BTTFIN = :#TIME, BTLCIN = :LDINIT,
                                 BTLCDT = :Today_7, BTLCTM = :#TIME,
                                 BTSTS = :BTSTS, BTDCLO = :BTDCLO,
                                 BTTCLO = :BTTCLO, BTDCOM = 0, BTCCOM = ' '
                              Where Current of Batch_Csr;


                       Exsr Update_Box_File;


                       Exec Sql Set Connection :WkRemote;
                       Exec Sql Update FfuelTkt a
                                   Set FtuDtr = ' ',
                                       FtTrpA = ' ',
                                       FtTrpD = '0001-01-01-00.00.00.000000'
                                 Where FtTrpA = :DSHTRP and FtuDtr in ('C','U');
                       Clear SqlCode;

                       Exec Sql Set Connection :WkMachine;

                       Exec Sql Update FMTTKTF
                                   set FTUDTR = ' ', FTTRPA = ' ',
                                       FTTRPD = '0001-01-01-00.00.00.000000'
                                 Where FTTRPA = :DSHTRP and FtuDtr in ('C','U');

                       Exec Sql Delete From FuelCsr_A
                                      Where TFTRIP = :DshTrp;
                       Clear SqlCode;


                       Exec Sql Delete From MileCsr_A
                                Where TMSTRP = :DshTrp;

                     Exec Sql Select TmErr, TmaFy, TmaFm, (1)
                                into :TmErr, :TmaFy, :TmaFm, :Data_Fnd
                                from HdrCsr_A
                               Where TmhTrp = :DSHTRP
                               Fetch first row only;

                       If SqlCode = 0;
                         If TmErr = 'R';
                           PRCFG = 'D';
                           ExSr Rejected_Trips;
                         EndIf;
                         Exec Sql Delete from HdrCsr_A
                               Where TmhTrp = :DSHTRP;

                         Exec Sql Delete from FDTSCSTSF
                               Where TmhTrp = :DSHTRP;

                         Exec Sql Update FDTSBAT
                                     set BTMDTR = BTMDTR + 1
                                   Where Current of Batch_Csr;
                       EndIf;
                       Exec Sql Delete from FdtsErr
                                 Where OVBOX = :DsBox  and OVBCH = :DsBcno
                                       and OVTRIP = :DshTrp;
                       Clear SqlCode;

                       DEL_RRN = DEL_RRN + 1;
                       CHAIN DEL_RRN DELSFL;
                     EndIf;
                     Exec Sql Close Batch_Csr;
                   EndDo;
                 EndIf;
           EndSl;
         EndDo;

       EndSr;
       BegSr Fetch_Batch_Details;

          Exec Sql Select BTVDTR, BTSDTR, BTDDTR, BTODTR, BTKDTR, BTMDTR,
                          BTSTS, BTDCLO, BTDCOM, BTTCLO, BTCCOM
                     into :BTVDTR,:BTSDTR,:BTDDTR,:BTODTR,:BTKDTR,:BTMDTR,
                          :BTSTS, :BTDCLO,:BTDCOM,:BTTCLO,:BTCCOM
                     FROM FDTSBAT
                    Where BtBox = :BtBox and BtBat = :BtBat
                    Fetch first row only;

       EndSr;
       BegSr Populate_Batch_Cols;

          @CBAT = 0;

          Select;
          When BTODTR = BTKDTR And BTSDTR = 0 And BTSTS = 'O';
                @CBAT = 1;
                BTSTS = 'C';
                BTDCLO = Today_7;
                BTTCLO = #Time;
          When BTODTR = BTKDTR And BTSDTR = 0;
          When BTSTS = 'C';
             @CBAT = -1;
             BTSTS = 'O';
             BTDCLO = 0;
             BTTCLO = 0;
          ENDSl;

       EndSr;
       BegSr Transfer_Batch;

         BtBox = DSBOX;
         BtBat = DSBCNO;
         Exsr Fetch_Batch_Details;

         WK_COUNT2 = 1;

         Dow WK_COUNT2 <= TRFCNT;
           CSSTRP = CSS(WK_COUNT2);
           Exec Sql Select TMPYY,TMPMM,TMPDD,TMEDAT
                      Into :TMPYY ,:TMPMM ,:TMPDD, :TMEDAT
                      From HdrCsr_A
                    Where Tmhtrp = :CSSTRP
                    Fetch first row only;

           If SqlCode = 0;
             SQSEQ# = 0;
             Exec Sql Select Max(TMSEQ#) into :SQSEQ# from HdrCsr_A
                        where TM7A08 = :CSSBOX  and TMBCNO = :CSSBAT and
                              TMPYY  = :TMPYY   and TMPMM  = :TMPMM  and
                              TMPDD  = :TMPDD
                        Fetch first row only;
             Clear SqlCode;


             %Subst(TM7A08:1:7) = CSSBOX;

             Exec Sql Update HdrCsr_A
                         set TMSEQ# = :SQSEQ#+1,TMBCNO = :CSSBAT,
                             TM7A08 = :TM7A08
                       Where TMHTRP = :CSSTRP;
             Clear SqlCode;
             ExSr Mod_VEHMT;
           ENDIF;
           Clear SqlCode;

           BTSDTR = BTSDTR - 1;
           BTKDTR = BTKDTR - 1;

           If DSBOX <> CSSBOX or DSBCNO <> CSSBAT;
             BTMDTR = BTMDTR - 1;
           ENDIF;

           WK_COUNT2 = WK_COUNT2 + 1;
         ENDDO;



         Exsr Verify_Trip_cnt;

         #Time = %Dec(%Time());

         Exsr Populate_Batch_Cols;

         Exsr Batch_Sts_Desc;

         Exec Sql Update FDTSBAT
                  set BTSDTR=:BTSDTR, BTKDTR=:BTKDTR, BTMDTR=:BTMDTR,
                      BTDFIN = :Today_7, BTTFIN = :#TIME,BTLCIN = :LDINIT,
                      BTLCDT = :Today_7, BTLCTM = :#TIME,BTSTS = :BTSTS,
                      BTDCLO = :BTDCLO, BTTCLO = :BTTCLO,
                      BTDCOM = 0, BTCCOM = ' '
                Where BtBox = :Dsbox and BTBAT = :DSBCNO;

         Exsr Update_Box_File;

         Exec Sql Update FDTSBAT
                     set BTSDTR = BTSDTR + :TRFCNT,
                         BTKDTR = BTKDTR + :TRFCNT
                   Where BtBox = :CSSBOX and BTBAT = :CSSBAT;
         Clear SqlCode;
       EndSr;

       BegSr Chg_Mode;
         Select;
         When *InKh = *On and Mode = 'DISPLAY';
             $Msgid = '0098';
             ExSr Err_Message;
         When *InKh = *On;
             Mode = 'DISPLAY';
             FunCln  = FunDsp;
             *In24 = *Off;
             *In25 = *On;
             *In27 = *On;
             Clear Htrip;
             Clear DsUnit;
             Clear DsCorp;
             Clear DsbDat;
         When *InKi = *On and Mode = 'ADD    ';
             $Msgid = '0098';
             Exsr Err_Message;
         When *InKi = *On and BtSts = 'S';
             $Msgid = '0193';
             Exsr Err_Message;
         When *InKi = *On and Full = 'Y';
             *In25 = *On;
             $Msgid = '0054';
             Exsr Err_Message;
         When *InKi = *On;
             Mode = 'ADD    ';
             FunCln = FunAdd;
             *In24 = *On;
             *In25 = *Off;
             *In27 = *Off;
             Clear Htrip;
             Clear DsUnit;
             Clear DsCorp;
             Clear DsbDat;
             Clear DsDpc;
             Clear DsDps;
             Clear DsDsc;
             Clear DsDss;
             Clear HdPc;
             Clear HdPs;
             Clear Hdss;
         When *InKj = *On and Mode = 'CHANGE ';
             $Msgid = '0098';
             ExSr Err_Message;
         When *InKj = *On and BtsTs = 'S';
             $Msgid = '0193';
             ExSr Err_Message;
         When *InKj = *On;
             Mode = 'CHANGE ';
             FunCln = FunChg;
             *In24 = *Off;
             *In25 = *Off;
             *In27 = *Off;
             Clear Htrip;
             Clear DsUnit;
             Clear DsCorp;
             Clear DsBdat;
         When *Inkk = *On and Mode = 'DELETE ';
             $Msgid = '0098';
             ExSr Err_Message;
         When *Inkk = *On and BtsTs = 'S';
             $Msgid = '0193';
             ExSr Err_Message;
         When *Inkk = *On;
             Mode = 'DELETE ';
             FunCln = FunDlt;
             *In24 = *Off;
             *In25 = *On;
             *In27 = *Off;
             Clear Htrip;
             Clear DsUnit;
             Clear DsCorp;
             Clear DsbDat;
         EndSl;

         Funmsg = FUN02;
         If *IN34 = *OFF;
           Funmsg = FUN01;
         EndIf;
       EndSr;
       BegSr Valid_Unit;
         $Oleas = 'N';

         If DsUnit = ' ';
           *IN42 = *ON;
           $Msgid = '0056';
           ExSr Err_Message;
           LeaveSr;
         EndIf;

         EvalR DsUnit = %Trim(DsUnit);

         RecExist = 'Y';

         Reset FvehFil;
         Exec Sql Select VfUnit, VfUse,  VfCat,  VfCusn,  VfCust,  VfCorp,
                         VfFuel, VfAxls, VfDist, VfTank, VfnTnk,  Vf9n72,
                         VfTare, VfVcst, Vfsldt, Vfadmn, Vfclis
                  Into  :VfUnit, :VfUse, :VfCat, :VfCusn, :VfCust, :VfCorp,
                        :VfFuel, :VfAxls,:VfDist,:VfTank, :VfnTnk, :Vf9n72,
                        :VfTare, :VfVcst, :Vfsldt, :Vfadm, :Vfclis
                  From  FvehFil a, FTCXREFDF b
                 Where  VfUnit = :DsUnit and VfCorp not in(Select DXXCOR
                        From FTCXREFDF)
                 Fetch first row only;

         If SqlCode <> 0;
            Clear SqlCode;
            *In42 = *ON;
            $Msgid = '0056';
            ExSr Err_Message;
            RecExist = 'N';
         EndIf;

         If RecExist = 'Y';
            Exsr Acq_Unit;

            ExSr Vecap_Data;
            If RecExist = 'E';
               *In42 = *ON;
               $Msgid = '0056';
               ExSr Err_Message;
               Clear SqlCode;
               RecExist = 'N';
            EndIf;
         EndIf;

         Select;
         When VFUSE <> 'LEASE' And VFUSE <> 'RENTAL' And
              VFUSE <> 'CMAINT' And VFUSE <> 'SERV' And
              VFUSE <> 'FINLS' And VFUSE <> 'POOL' And RecExist = 'Y';
               *IN42 = *ON;
               $Msgid = '0057';
               EXSR Err_Message;
               RecExist = 'N';
               DSCORP = VFCORP;
         When RecExist = 'Y';
               DSCORP = VFCORP;
         EndSl;


         If VFCAT <> 'TRUCK' And VFCAT <> 'TRACTOR' And
            RecExist = 'Y';
            *IN42 = *ON;
            $Msgid = '0058';
            EXSR Err_Message;
         EndIf;

         WKCORP = DSCORP;
         Out LDA;

       EndSr;
       BegSr Validate_Date;

         WkSPer = *Off;

         If Wk_DATE6 < 0;
           *IN43 = *ON;
           $Msgid = '0109';
           EXSR Err_Message;
           LeaveSr;
         EndIf;

         Monitor;
           Wk_Date10 = %Date(Wk_DATE6:*MDY);
         On-Error;
           WkSPer = *On;

           *IN43 = *ON;
           $Msgid = '0110';
           EXSR Err_Message;
           LeaveSr;
         EndMon;

         Wk_Date7P = %Dec(Wk_DATE10:*CYMD);
         Wk_BegDat7 = %Dec(Wk_Date10:*CYMD);

         If Wk_Date10 > Today_10;
           WKSPER = *ON;
           *IN43 = *ON;
           $Msgid = '0111';
           Exsr Err_Message;
         EndIf;

         If Wk_BegDat7 < Today_2Yr;
           WKSPER = *ON;
           *IN43 = *ON;
           $Msgid = '0458';
           MN0458 = LDAUT1;
           $MDATA = DS0458;
           Exsr Err_Message;
         EndIf;


         If VFVCST = 'SOLD' Or VFVCST = 'TERMED';

           If VFSLDT <> 0 And Wk_BegDat7 >= VFSLDT;
             WKSPER = *ON;
             *IN43 = *ON;
             $Msgid = '0113';
             EXSR Err_Message;
           EndIf;
         EndIf;
       EndSr;
       BegSr Process_Cust_Header;

         PANEL = 'CUST';


         *IN26 = *OFF;
         If MODE = 'DISPLAY';
           *IN26 = *ON;
         EndIf;

         AtUnit = DsUnit;
         AtCorp = DsCorp;
         Exsr Fetch_Vehicle_Detail;

         If SqlCode = 0;

           WKEFLG = *BLANKS;
           WKAFLG = *BLANKS;
           WKPRLC = *BLANKS;
           WKFLG1 = *BLANKS;
           WKFLG2 = *BLANKS;

           SPV1CORP ( VFCORP : WKNME : WKAFLG :
           WKFLG1 : WKFLG2 : WKPRSC : WKACSC :
           WKPRLC : WKEFLG : WKUOMC : WKCTRC );

           If WKEFLG <> '1' And WKAFLG = 'Y' And WKPRLC = 'Y';

             $CNTRY = WKCTRC;
             *IN57 = *Off;
             If WKUOMC = 'M';
               *IN57 = *On;
             ENDIF;
           ENDIF;

         EndIf;

         Clear SqlCode;

         Exsr Clear_Cust_ind;


         If *INKB = *OFF;
           Exsr Fill_Cust_Header;
         EndIf;


         Loop2 = *On;
         Dow Loop2 = *ON;


           WRITE MSGCLR;
           WRITE MSGCTL;

           If UPUSE = 'POOL'
             And *IN17 = *ON;
             *IN32 = *ON;
           ENDIF;

           If MCUS = 'Y';
             *IN33 = *ON;
           ENDIF;

           WRITE TITLE;
           WRITE CUSTDAT;

           *In64 = *On;
           WRITE CUST;
           READ DTSTENTD;
           *In67 = %Eof;

           Exsr Clear_Cust_ind;


           Exsr Reset_Err_Acc;


           Select;
           When *INKA = *ON;
             SPVEXIT ( CONFRM );
             If CONFRM = 'Y';
               Leave;
             EndIf;

           When *InKb = *On;
             Leave;

           When *Inkd = *On;
             Exsr Inquiry_Window;

           When *In90 = *On;
             Exsr Process_Help;
           Other;




             EXSR Clear_Cust_Msg;


             CSKEYD = 'Y';
             If DSCUS = *BLANKS;
                CSKEYD = 'N';
             ENDIF;

             If mode <> 'DISPLAY';
                Exsr Validate_Cust;
                ExSr Validate_City;
             EndIf;
             Select;
             When Over = 0 and Susp = 0 and Fatal = 0;
                 Leave;


             Other;
               If FATAL = 0 and SUSP > 0;
                  *IN33 = *ON;
               EndIf;


               Select;
               When *INKE <> *ON And *INKG <> *ON;

               When *INKG = *ON And *IN07 = *ON;

                   Exsr DTS_Sus_Rej;
                   Leave;
               Other;
                   Leave;

               EndSl;
             EndSl;
           EndSl;
         EndDo;


         If MODE = 'ADD';
           SAVCUS = DSCUS;
         EndIf;

       EndSr;
       BegSr Clear_Cust_ind;


         *IN32 = *OFF;
         *IN33 = *OFF;


         *IN45 = *OFF;
         *IN46 = *OFF;
         *IN47 = *OFF;
         *IN48 = *OFF;
         *IN49 = *OFF;


         *IN81 = *OFF;
         *IN82 = *OFF;


         *IN70 = *OFF;

       EndSr;

       BegSr Clear_Cust_Msg;

         For Ctr = 1 To 20;
           %Occur(CUSMSG) = Ctr;
           CLEAR CUSMSG;
         EndFor;


         Reset Cust_Err_Cnt;

       EndSr;
       BegSr Fill_Cust_Header;

         SPV1UNIT ( DSCORP : DSUNIT : UPIND1 :
         UPDIST : UPLOCN : UPCUST : UPBGRP :
         UPUSE : UPCAT : UPTYPE : UPVCST : UPACTG
         : Wk_Date7P : UPOWNR : UPADMN : UPALTN :
         UPAREA : UPREGN : Beg_Date7);

         Wk_Date7P = Beg_Date7;
         ExSr Get_CusAdr;


         If Beg_Date7 > 0;
           Wk_BegDt10 = %DATE(Beg_Date7:*CYMD);
         Else;
           Wk_BegDt10 = %Date('0001-01-01');
         Endif;

         Valid = 'N';
         RESULTSET = RESULTSET1;

         Exsr Compare_Begin_Date;

         If $Resultst <>' ' AND
            ($DateOut = Wk_BegDt10 );
           MCUS = 'N';
         Endif;

         IF (UPIND1 = *OFF AND VALID='Y'
           AND UPUSE ='RENTAL') OR
           (UPIND1 = *OFF AND UPUSE <> 'RENTAL');
           Wk_Cust6 = $ACCOUNT;
           Wk_Cust1 = Wk_Cust6;

           Data_fnd = 0;
           Exec Sql Select Count(1) into :Data_fnd from Vehtabf
                     Where PTPGM ='RENCUST' and PTFID ='OFFLEASE' and
                           PTSDS = :UPCUST;
           Select;
           When MODE = 'ADD'
             Or DSUNIT <> HUNIT
             Or DSBDAT <> HBDAT;

             DSCUST = $ACCOUNT;
             DSCBG = $Custgrp;
             DSCDST = $DIST;
             DSOBR = $DIST;


             Select;
             When  UPUSE <> 'LEASE'
               And UPUSE <> 'RENTAL'
               And UPUSE <> 'CMAINT'
               And UPUSE <> 'SERV'
               And UPUSE <> 'FINLS'
               And UPUSE <> 'POOL';
               *IN42 = *ON;
               $Msgid = '0057';
               EXSR Err_Message;

             When UPUSE = 'LEASE ' and Data_fnd > 0;
                 RNTUNT = 'Y';
             EndSl;

             If MODE = 'CHANGE';
               If DSUNIT <> HUNIT
                 Or DSBDAT <> HBDAT;
                 *IN45 = *ON;
                 $Msgid = '0008';
                 EXSR Err_Message;
               EndIf;
             EndIf;

           When (UPUSE = 'RENTAL' Or UPUSE = 'SERV' Or (UPUSE = 'LEASE '
                and Data_fnd > 0));

               DSCUST = TMCUST;
               DSCBG = TMCBG;
               DSCDST = TMCDST;
               RNTUNT = 'Y';
           Other;

               DSCUST = TMCUST;
               DSCBG = TMCBG;
               DSCDST = TMCDST;

           EndSl;

           If RNTUNT <> 'Y';
             If WK_CustErr = 'M'
               Or WK_CustErr = 'X';
               CLEAR DSCUST;
               CLEAR DSCBG;
               CLEAR DSCDST;
               MCUS = 'Y';
               $Msgid = '0230';
               EXSR Err_Message;
             ENDIF;
           ENDIF;
         EndIf;

         Select;
         When MODE = 'ADD' and HDPC = *BLANKS;


             If *IN45 = *OFF
               And *IN46 = *OFF
               And *IN47 = *OFF
               And *IN48 = *OFF
               And *IN49 = *OFF;
               *IN81 = *ON;
             EndIf;

             CLEAR DSDSC;
             CLEAR DSDSS;

         When MODE = 'ADD' And DSCUS = SAVCUS;


             *IN82 = *ON;
             DSDPC = HDPC;
             DSDPS = HDPS;

             CLEAR DSDSC;
             CLEAR DSDSS;

         When MODE = 'ADD';

             *IN81 = *ON;
             DSDPC = HDPC;
             DSDPS = HDPS;

             CLEAR DSDSC;
             CLEAR DSDSS;

         Other;

             DSDPC = TMDPC;
             DSDPS = TMDPS;
             DSDSC = TMDSC;
             DSDSS = TMDSS;
             HDPC = TMDPC;
             HDPS = TMDPS;
             HDSS = TMDSS;

         EndSl;


         ExSr Validate_Cust;


         Wk_Cust1 = DSCUST;

         Select;
         When UPUSE = 'RENTAL'
             Or UPUSE = 'SERV'
             Or DSCUST = '699999'
             Or Wk_Cust1 = '3'
             Or DSCUST = '999999'
             Or Wk_Cust6 = '699999'
             Or Wk_Cust6 = '999999'
             Or UPUSE = 'POOL'
             Or UPCUST = '699999'
             Or UPCUST =  '699998';
             WKLDF = '2';
         When UPUSE = 'CMAINT';
             WKLDF = '3';
         Other;
             WKLDF = '1';
         EndSl;

       EndSr;
       BegSr Compare_Begin_Date;

         Select;
         When $Resultst <>' ' AND
              ($DateOut = Wk_BegDt10 );
           Valid  = 'Y';

         When $Resultst <>' ' AND
             ($DateOut < Wk_BegDt10 ) AND
             (($DateIn  >= Wk_BegDt10  ) OR
             ($DateIn = *Loval));
           Valid = 'Y';
         EndSl;

       EndSr;
       BegSr Acq_Unit;

         vtcust = *blanks;
         vtcusn = *blanks;
         XXXXXX_sel = *blanks;
         Acq_Sel = *blanks;
         Hld10 = *off;

         Wk_Date10 = %Date() - %Months(6);
         Wk_Date7P  = %Dec(Wk_Date10:*cymd);

         EvalR Acq_Unit_Key = %trim(dsunit);

         Exec Sql Select AtUnit, AtCorp
                  Into  :AtUnit, :AtCorp
                  From VEHACQF
                  Where  AfUnit = :Acq_Unit_Key
                         and AtcvDt >= :Wk_Date7P and AtUnit <> :DsUnit
JP02                     and Atcorp in
JP02                         (SELECT DMCORP FROM FDSTMST a WHERE
JP02                         SUBSTRING(DMMA02,1,1) = 'Y' and DMBA01 = 'Y' )
                  Fetch first row only;
         If SqlCode <> 0;
           Clear SqlCode;
           LeaveSr;
         EndIf;

         Exsr Fetch_Vehicle_Detail;

         If SqlCode = 0;

            If VfUse <> 'LEASE ' And VfUse <> 'RENTAL' And
               VfUse <> 'CMAINT' And VfUse <> 'SERV'   And
               VfUse <> 'FINLS';
               LeaveSr;
            EndIf;

            If VfCat <> 'TRUCK'  And VfCat <> 'TRACTOR';
               LeaveSr;
            EndIf;

            VtCust = VfCust;
            VtCusn = VfCusn;

            Exec Sql Select BrCust Into :BrCust
                     From   BRTXCUSTF
                     Where  CmCust = :VtCust
                     Fetch First Row only;
            If SqlCode <> 0;
               BrCust = *Zeros;
               Clear SqlCode;
            EndIf;

            Dow True;
              Write MSGCLR;
              Write MSGCTL;
              Hld10 = *In10;
              *In10 = *off;
              If LDAUT2 = 'SP';
                 *In10 = *on;
              EndIf;
              *In64 = *on;
              Write Acq_Screen;
              Read DTSTENTD;
              *In10 = Hld10;
              Select;
              When (XXXXXX_sel <> 'S' And Acq_Sel <> 'S') Or
                   (XXXXXX_sel =  'S' And Acq_Sel =  'S');
                   XXXXXX_sel = *blanks;
                   Acq_Sel = *blanks;
                   $Msgid = '0900';
                   Exsr Err_Message;
                   Iter;
              When Acq_Sel = 'S';
                   DsUnit = VfUnit;          //note1 Chain dsunit Fvehfil removed
                   LeaveSr;
              When XXXXXX_sel = 'S';
                   LeaveSr;
              EndSl;
            EndDo;
         EndIf;

         Clear SqlCode;

       EndSr;
       BegSr Fetch_Vehicle_Detail;

          Exec Sql Select VfUnit, VfUse,  VfCat,  VfCusn,  VfCust,  VfCorp,
                          VfFuel, VfAxls, VfDist, VfTank, VfnTnk,  Vf9n72,
                          VfTare, Vfclis
                   Into  :VfUnit, :VfUse, :VfCat, :VfCusn, :VfCust, :VfCorp,
                         :VfFuel, :VfAxls,:VfDist,:VfTank, :VfnTnk, :Vf9n72,
                         :VfTare, :Vfclis
                   From  FvehFil
                   Where  VfUnit = :AtUnit and VfCorp = :AtCorp
                   Fetch first row only;

       EndSr;
       BegSr Validate_Cust;

         If RNTUNT = 'Y' And DSCUS = *BLANKS;
           LeaveSr;
         ENDIF;

         Clear DsCusn;

         Exec Sql Select (1) into :Data_Fnd From DTSCNAF
                  Where CnCust = :DsCust and
                        (CnUse = :UpUse or CnUse = ' ')
                  Fetch First Row Only;
         If SqlCode = 0;
            DsCusn = *All'*';
            *In45 = *On;
            $Msgid = '0300';
            ExSr Err_Message;
         EndIf;
         Clear SqlCode;

         WKAFLG = ' ';
         If (UPUse = 'CMAINT' Or UPUse = 'LEASE') and
            DSCust <> ' ' and DSUnit <> ' ' and RNTUNT <> 'Y';

           Exec Sql Select Count(1) Into :Data_Fnd
                    From FFSQUNT
                    Where (FVCorp = :DSCorp) And
                          (FVCust = :DSCust) And
                          (FVUnit = :DSUnit)
                    Fetch First 1 rows only;

           Select;
           When Sqlcode = 0 and Data_Fnd > 0;
             WKAFLG = 'Y';
           When (Sqlcode <> 0 or Data_Fnd = 0) and Mode <> 'DISPLAY';
             $Msgid = '0502';
             Exsr Err_Message;
           EndSl;
           Clear SqlCode;

         EndIf;



         Wk_Cust1 = DSCUST;

         Select;
         When DSCUST = '999999';
            Eval DsCusn = Rent;


         When DSCUST = '699999' Or DSCUST = '699998';
             DSCUST = *BLANK;
             DSCBG = *BLANK;
             DSCDST = *BLANK;


         When Wk_Cust1 = '6';
             Wk_Cust1 = DSCUST;
             Exsr Validate_CustNum;

         Other;

             Wk_Cust1 = DSCUST;
             Exsr Validate_CustNum;

             If WK_CustErr <> '1' Or MODE = 'DISPLAY';
                 Wk_Date7P = *ZERO;
                 Callp SPV1DST ( DSCORP : DSCDST : WKIND :
                 DMNAME : DMADMN : DMREGN : DMAREA :
                 DMCNTR : DMLOCN : DSACTV : DSAJAR :
                 DSDIVS : Wk_Date7P );

                 If (WKIND = *ON or Wk_Date7P <> *ZERO);
                   *IN45 = *ON;
                   $Msgid = '0069';
                   EXSR Err_Message;
                 EndIf;

             EndIf;

         EndSl;

         If MODE <> 'DISPLAY';

           SPV1UNIT ( DSCORP : DSUNIT : UPIND1 :
           UPDIST : UPLOCN : UPCUST : UPBGRP :
           UPUSE : UPCAT : UPTYPE : UPVCST : UPACTG
           : Wk_Date7P : UPOWNR : UPADMN : UPALTN :
           UPAREA : UPREGN : Beg_Date7);

           Wk_Date7P = Beg_Date7;
           ExSr Get_CusAdr;

           If Beg_Date7 > 0;
             Wk_BegDt10 = %DATE(Beg_Date7:*CYMD);
           Else;
             Wk_BegDt10 = %Date('0001-01-01');
           Endif;

           Valid = 'N';
           RESULTSET = RESULTSET1;

           Exsr Compare_Begin_Date;

           If UpIND1 = *OFF And Valid = 'Y';


             If VFCUST = '699999';
               $OLEAS = 'Y';
             ENDIF;

             If DSCDST <> *BLANKS;
               Callp SPV1DST ( DSCORP : DSCDST : WKIND :
               DMNAME : DMADMN : DMREGN : DMAREA :
               DMCNTR : DMLOCN );

               If WKIND = *ON;
                 *IN45 = *ON;
                 $Msgid = '0069';
                 EXSR Err_Message;
               EndIf;

             ENDIF;
           ENDIF;

           If DSCDST = *BLANKS
             Or DMLOCN <> 'DISTRICT'
             And DMLOCN <> 'BRANCH  '
             And DMLOCN <> 'STATION '
             And UPUSE = 'RENTAL';
             *IN45 = *ON;
             $Msgid = '0069';
             EXSR Err_Message;
           ENDIF;

         ENDIF;
       EndSr;
       BegSr Validate_CustNum;

         WkCAct = DsCust + DsCBg;
         Wk_Cust6 = WkCAct;
         WKCCUS = *BLANKS;
         SPV1CSVR ( WKCACT : WKCCUS : DSCDST :
            Beg_Date7 : WK_CustErr : Wk_CustMst );


         If WK_CustErr = '1' And MODE <> 'DISPLAY';
            DsCusn = *All'*';
            *IN45 = *ON;
            $Msgid = '0062';
            If Wk_Cust1 = '6';
              $Msgid = '0061';
            EndIf;

            EXSR Err_Message;
            LeaveSr;
         EndIf;

         DSCUSN = CMBNAM;

       EndSr;

       BegSr Validate_City;

         If DSDPC = *BLANKS;
           *IN46 = *ON;
           $Msgid = '0065';
           EXSR Err_Message;
         ELSE;
           HDPC = DSDPC;
         EndIf;

         If DSDPS <> *BLANKS;
           Exec Sql Select (1) into :Data_Fnd from FdtSst
                     Where SstCd = :DsdPs
                     Fetch first row only;
         EndIf;

         Select;
         When DSDPS = *BLANKS;
           *IN47 = *ON;
           $Msgid = '0120';
           EXSR Err_Message;
         When DsdPs <> HdPs and SqlCode <> 0;    //DSDPS <> *BLANKS
           *In47 = *On;
           $Msgid = '0120';
           ExSr Err_Message;
         When DsdPs <> HdPs;
           HDPS = DSDPS;
         EndSl;

         Clear SqlCode;

         If DSDSC = *BLANKS;
           *IN48 = *ON;
           $Msgid = '0065';
           EXSR Err_Message;
         EndIf;

         Select;
         When DSDSS = *BLANKS;
           *IN49 = *ON;
           $Msgid = '0120';
           EXSR Err_Message;
         When Dsdss <> Hdss;               //DSDSS <> *BLANKS
           Exec Sql Select (1) into :Data_Fnd from FdtSst
                     Where SstCd = :Dsdss
                     Fetch first row only;
           If SqlCode <> 0;
              *In49 = *On;
              $Msgid = '0120';
              ExSr Err_Message;
              Clear SqlCode;
              LeaveSr;
           EndIf;
           HDsS = DSDsS;
         EndSl;

       EndSr;

       BegSr Process_State_Mileage;

         If Susp_Flg = '0';

           PANEL = 'MILE';

           Exsr Clear_Mile_ind;

           Select;
           When *INKB = *ON and Mile_RRN = 0;

              *IN63 = *OFF;
              MISRN = 1;

           When *INKB = *ON;

              *IN63 = *ON;
              *IN65 = *ON;


              For Ctr = 1 To SAVRRN;
                CHAIN Ctr MILSFL;


                Exsr Protect_TrpDt_St;
                Update MILSFL;

              EndFor;

              MISRN = 1;


           Other;

             *IN35 = *OFF;


             If *IN04 = *On and %Scan('OBC' : DSHTRP) > 0;
                *In35 = *ON;
             ENDIF;


             Exsr Clear_Mileage_Panel;
             CLEAR DSENDS;

             If Mode <> 'ADD    ';
               Exsr Fill_Mileage_Panel;
             Else;
               Exsr Fill_Mileage_Panel_Add;
             EndIf;
           EndSl;

           SCRCHG = 'N';
         Endif;

         Wk_DSRCWT = 0;
         Reset WTAXL_Flg;
         LOOP4 = *ON;
         DoW LOOP4 = *ON;

           Susp_Flg = '0';

           WRITE MSGCLR;
           WRITE MSGCTL;


           WRITE TITLE;
           WRITE CUST;


           If Mile_RRN = 0;
             WRITE MILEOF;
           EndIf;


           If *IN51 = *ON
             And MIERR <> 'Y';
              WRITE MILCTL;
              WRITE ENDSPD;
           ELSE;
              WRITE ENDSPD;
              WRITE MILCTL;
           EndIf;

           READ MILCTL;
           *InLr = %Eof;


           If Mile_RRN = 0;
             READ MILEOF;
           ELSE;
             READ ENDSPD;
           EndIf;
           *InLR = %Eof;

           If *IN23 = *On;
             SCRCHG = 'Y';
           ENDIF;


           *IN70 = *OFF;

           Exsr Clear_Mile_ind;

           *IN65 = *OFF;
           *IN66 = *OFF;



           Select;
           When *Inka = *On;
             SPVEXIT ( CONFRM );
             If CONFRM = 'Y';
                LeaveSr;
             Endif;
             Iter;

           When *InKb = *On;
             LeaveSr;

           When *Inkd = *On;
             ExSr Inquiry_Window;
             Iter;

           When *In90 = *On;
             Exsr Process_Help;
             Iter;



           When *Inkn = *On
             And *In27 = *Off;
             *IN28 = *ON;
             Exsr Underline_Route_Field;
             Iter;


           When *Inkq = *On
             And *IN27 = *Off;
             *IN30 = *ON;
             Exsr Underline_Route_Field;
             Iter;
           EndSl;


           Exsr Reset_Err_Acc;

           MIERR = NO;
           CLEAR SEL#;
           CLEAR INMRN;
           CLEAR DEMRN;
           DSSFND = NO;
           ENDODM = DSENDS;
           PTYMD = 9999999;
           CLEAR $$STAT;
           CLEAR LINFND;

           Exsr Clear_Mil_Msg;

           Select;
           When Mile_RRN > 0;


             Select;
             When MODE <> 'DISPLAY';
               Exsr Validate_Mileage;

               If *INKP = *ON;
                 *IN35 = not *IN35;
               EndIf;

               Exsr Load_Ds_Sfl;

             When *INKP = *ON;

               *IN35 = not *IN35;

               For Ctr = 1 To SAVRRN;
                 CHAIN Ctr MILSFL;

                 Select;
                 When *IN57 = *OFF and *IN35 = *OFF;
                     DSBODM = HMILE;
                     KILOS = 0;
                     If (HMILE * 1.609) <= 9999999 and HMILE > 0;
                       Eval(H) KILOS = HMILE * 1.609;
                     Endif;
                     DSBODM = HODOM;
                 When *IN57 = *OFF;                //*IN35 = *ON
                     DSBODM = HMILE;
                 When *IN35 = *OFF;
                     Eval(H) KILOS = HMILE / 1.609;
                     DSBODM = HODOM;
                 Other;
                     DSBODM = HMILE;
                 EndSl;


                 Exsr Protect_TrpDt_St;

                 UPDATE MILSFL;
               EndFor;

             EndSl;






             Select;
             When *INKP = *ON and *IN35 = *ON and DSENDS = 0;


               $Msgid = '0145';
               EXSR Err_Message;

             When *INKP = *ON and DSENDS = 0;



               $Msgid = '0146';
               EXSR Err_Message;
             EndSl;


             Select;
             When INMRN <> 0;
               *IN43 = *OFF;
               *IN(52) = *Off;
               *IN(53) = *Off;
               *IN56 = *OFF;
               *IN(58) = *Off;
               *IN(59) = *Off;
               Exsr Insert_Mil_Record;


             When DEMRN <> 0;
               *IN43 = *OFF;
               *IN(52) = *Off;
               *IN(53) = *Off;
               *IN56 = *OFF;
               *IN(58) = *Off;
               *IN(59) = *Off;
               Exsr Delete_Mil_Record;


             When MODE <> 'DISPLAY';


               If DSSFND = NO;
                 MiErr = 'Y';
                 MISRN = 1;
                 $Msgid = '0122';
                 EXSR Err_Message;
                 CLEAR MILLIN;
               EndIf;

               Select;
               When BEGODM < 0;
                 $Msgid = '0157';
                 EXSR Err_Message;

               When DSENDS = 0;
                 *IN51 = *ON;
                 $Msgid = '0158';
                 EXSR Err_Message;
               EndSl;
             EndSl;

             If DCUSYN = 'Y';
                Exsr Validate_Cust;
                If $Msgid = '0502';
                   Iter;
                Endif;
             Endif;

             Select;
             When OVER > 0
               Or SUSP > 0
               Or FATAL > 0
               Or INMRN > 0
               Or DEMRN > 0
               Or *INKP = *ON;


               If *IN51 = *ON
                 And MIERR <> 'Y';
                 *IN55 = *ON;
               EndIf;

               Select;
               When FATAL = 0 and SUSP > 0;
                 *IN33 = *ON;
               When FATAL = 0 and OVER > 0;
                 *IN32 = *ON;
               EndSl;

               Select;
               When *INKP = *ON;
                  Iter;

               When *INKE = *OFF And *INKG = *OFF;
                 Iter;

               When *INKG = *ON And *IN07 = *ON;

                 Exsr DTS_Sus_Rej;
               EndSl;

             When *INKG = *OFF;


             When *IN07 = *ON;
               EXSR Err_Message;
               Exsr DTS_Sus_Rej;

             Other;
               EXSR Err_Message;
             EndSl;

           Other;

             Select;
             When INSEOF = 'I';
               *IN63 = *ON;
               CLEAR INMRN;
               Exsr Insert_Mil_Record;

             When INSEOF <> ' ';
               $Msgid = '0100';
               EXSR Err_Message;


             When MODE <> 'DISPLAY';
               $Msgid = '0150';
               EXSR Err_Message;
               Exsr SUSP_OVER_Err;
             EndSl;

             Select;
             When *INKE = *OFF
               And *INKG = *OFF
               And MODE <> 'DISPLAY';
                Iter;

             When *INKG = *ON
               And *IN07 = *ON;

               Exsr DTS_Sus_Rej;

             EndSl;

           EndSl;


           LDA   = Hld_LDA;
           HLD22 = *IN22;
           *IN(01) = LDINDS;
           *IN22 = HLD22;
           Leave;
         EndDo;

       EndSr;
       BegSr Clear_Mile_ind;


         *IN32 = *OFF;
         *IN33 = *OFF;


         *IN43 = *OFF;
         *IN51 = *OFF;
         *IN52 = *OFF;
         *IN56 = *OFF;
         *IN58 = *OFF;
         *IN59 = *OFF;


         *IN53 = *OFF;
         *IN55 = *OFF;
         *IN44 = *OFF;

       EndSr;
       BegSr PROTECT_TRPDT_ST;

         *In29 = *Off;
         If DsLine = '01';
           *In29 = *On;
         EndIf;

       EndSr;
       BegSr SUSP_OVER_Err;

         Select;
         When FATAL = 0 and SUSP > 0;
             *IN33 = *ON;
         When FATAL = 0;               // SUSP <= 0
             *IN32 = *ON;
         EndSl;

       EndSr;


       BegSr Clear_Mileage_Panel;


         *IN26 = *ON;
         *IN28 = *OFF;
         *IN30 = *OFF;


         CLEAR @STM;
         CLEAR @SMC;

         *IN(60) = *On;
         *IN(61) = *Off;
         *IN(62) = *Off;
         *IN(63) = *Off;
         *IN(64) = *Off;
         *IN(65) = *Off;
         *IN(66) = *Off;
         *IN(67) = *Off;
         *IN(68) = *Off;
         *IN(69) = *Off;
         WRITE MILCTL;
         *IN(60) = *Off;
         *IN(61) = *Off;
         *IN(62) = *On;
         *IN(63) = *On;
         *IN(64) = *Off;
         *IN(65) = *Off;
         *IN(66) = *Off;
         *IN(67) = *Off;
         *IN(68) = *Off;
         *IN(69) = *Off;
         *IN(70) = *Off;

         RESET Mile_RRN;

       EndSr;


       BegSr Clear_Mil_Msg;

         For Ctr = 1 To 20;
           %Occur(MILMSG) = Ctr;
           CLEAR MILMSG;
         EndFor;


         CLEAR Mile_Err_Cnt;

       EndSr;

       BegSr Fill_Mileage_Panel;

         Clear WK_COUNT1;
         First = 'N';

         If MODE = 'CHANGE ';
           *IN65 = *ON;
         EndIf;


         Exec Sql Open Entr_Mile_Cursor;
         Dow SqlCode = 0;

           Reset FdtsMile;
           Exec Sql Fetch Entr_Mile_Cursor
                     into :TMLINE,:TMRTES,:TMCODE,:TMBODM,:TMTMIS,:TMTOLL,
                          :TMRCWT,:TMSE,:TMLE,:TMAXLE,:TMEODM,:Wk_MM7,
                          :Wk_DD7,:Wk_CYY7;
           If SqlCode <> 0;
              Leave;
           EndIf;

           MILOPT = *BLANK;
           DSLINE = TMLINE;

           DsTMDY = 0;
           If Wk_Date7 > 0;
             Wk_Date10 = %Date(Wk_Date7:*CYMD);
             DsTMDY = %Dec(Wk_Date10:*MDY);
           Endif;

           DSSE = TMSE;


           Clear DssTnm;
           Exec Sql Select SsTnam into :DssTnm from FdtsSt
                    Where  SstCd = :Dsse
                    Fetch first row only;
           Clear SqlCode;

           DSRTES = TMRTES;
           DSCODE = TMCODE;
           DSBODM = TMTMIS;
           If *IN35 = *Off;
             DSBODM = TMBODM;
           ENDIF;
           DSTOLL = TMTOLL;
           DSRCWT = TMRCWT;

           HODOM = TMBODM;
           HMILE = TMTMIS;

           DSLE = TMLE;
           KILOS = 0;
           Select;
           When *IN57 = *On;
               Eval(H) KILOS = TMTMIS / 1.609;
           When (TMTMIS * 1.609) <= 9999999 and TMTMIS > 0;
               Eval(H) KILOS = TMTMIS * 1.609;
           EndSl;
           DSAXLE = TMAXLE;

           DSKYU = 0;
           If DSSE = 'KY';
             DSKYU = HKYU;
           EndIf;


           Mile_RRN = Mile_RRN + 1;
           Ctr = Mile_RRN;
           @STM(Ctr) = DSSE;
           @SMC(Ctr) = DSCODE;
           WK_COUNT1 = WK_COUNT1 + 1;


           *IN29 = *OFF;
           If Mile_RRN = 1;
             DSTMDY = DSBDAT;
             DSENDS = TMEODM;
             DSSE = DSDPS;
             *IN29 = *ON;
           EndIf;

           WRITE MILSFL;


           *IN62 = *ON;
           *IN63 = *ON;


           If FIRST = 'N';
             MISRN = Mile_RRN;
             FIRST = 'Y';
           EndIf;

         EndDo;
         Exec Sql Close Entr_Mile_Cursor;
         Clear SqlCode;


         SAVRRN = Mile_RRN;
         *IN68 = *ON;


         If Mile_RRN = 0;
           *IN63 = *OFF;
         EndIf;

       EndSr;


       BegSr Fill_Mileage_Panel_Add;

         CLEAR WK_COUNT1;
         FIRST = 'N';


         *IN65 = *ON;


         Dow WK_COUNT1 < 99;
           MILOPT = *BLANK;
           CLEAR DSTMDY;
           CLEAR DSSE;
           CLEAR DSSTNM;
           CLEAR DSRTES;
           CLEAR KILOS;
           CLEAR DSBODM;
           CLEAR DSCODE;
           CLEAR HODOM;
           CLEAR HMILE;
           CLEAR DSLE;
           CLEAR DSTOLL;
           CLEAR DSRCWT;
           CLEAR DSAXLE;
           CLEAR DSKYU;
           Mile_RRN = Mile_RRN + 1;
           EvalR DSLINE = %Editc(Mile_RRN:'X');
           WK_COUNT1 = WK_COUNT1 + 1;


           *IN29 = *OFF;
           If Mile_RRN = 1;
             DSTMDY = DSBDAT;
             DSSE = DSDPS;
             CLEAR DSENDS;
             *IN29 = *ON;
             *IN53 = *ON;
           EndIf;

           WRITE MILSFL;


           *IN62 = *ON;
           *IN63 = *ON;


           If FIRST = 'N';
             MISRN = Mile_RRN;
             FIRST = 'Y';
           EndIf;

         EndDo;


         SAVRRN = Mile_RRN;


         *IN65 = *OFF;
         *IN68 = *ON;

       EndSr;
       BegSr Validate_Mileage;

         Exsr Clr_Multi_Ds;
         Exsr Clr_Multi_Err_Ds;

         Code2_Fnd = ' ';
         If DSENDS < 0;
           DSENDS = 0;
         Endif;

         For Ctr = 1 To SAVRRN;
           CHAIN Ctr MILSFL;

           If DSBODM < 0;
             DSBODM = 0;
           Endif;

           Select;
           When Ctr = 1 and *IN35 = '0';    //Odometer Mode
              Wk_BegDat7P = Wk_BegDat7;
              HBSPD  = DSBODM;
           When Ctr = 1;                    //Mile mode
              Wk_BegDat7P = Wk_BegDat7;
              If (DSENDS - DSBODM) < 0;
                HBSPD = 0;
              Else;
                HBSPD  = DSENDS - DSBODM;
              Endif;
           When *IN35 = '1';
              If (HBSPD - DSBODM) < 0;
                HBSPD = 0;
              Else;
                HBSPD = HBSPD - DSBODM;
              Endif;
           EndSl;

           If *IN23 = *On;
             SCRCHG = 'Y';
           ENDIF;

           Ctr = Mile_RRN;
           @STM(Ctr) = DSSE;
           @SMC(Ctr) = DSCODE;

           If DSCODE = '2';
             Code2_Fnd = 'Y';
           EndIf;

           @ST(Ctr) = '  ';
           @STWGT(Ctr) = 0;
           @STAXL(Ctr) = 0;

           getdtssrq(DSSE: DSCUST: DSCDST: Today_7: srqFound: DTSSRQds);

           Data_fnd = 0;
           If RQWGHT <> 'Y';
              Exec Sql Select RQWGHT, RQAXLE, (1)
                         into :RQWGHT, :RQAXLE, :Data_fnd
                         from FDTSSRQ
                        Where RQST = :DSSE AND RQWGHT = 'Y' AND
                              RQEFDT <= :Today_7 and RQEXDT >= :Today_7
                        Fetch First rows only;
           Endif;

           If (srqFound = '1' and RQWGHT = 'Y') or Data_fnd > 0;
              @ST(Ctr) = DSSE;
              WTAXL_Flg = '1';
           Endif;

           If DSSE <> *BLANK;

             If DSTMDY = 0;
               DSTMDY = PTMDY;
             EndIf;
             PTMDY  = DSTMDY;


             Select;
             When DSLINE = '01' and *IN35 = *OFF;
                 PODOM = DSBODM;
             When DSBODM <> *ZEROS and *IN35 = *OFF;
                 A_OdomZ = DSBODM;
                 B_OdomZ = PODOM;
                 pos = %Check('0' : A_OdomC);
                 pos = pos - 1;
                 if pos > 0;
                   Eval %Subst(A_OdomC:1:pos) = %Subst(B_OdomC:1:pos);
                 endif;
                 DSBODM = A_OdomZ;
                 PODOM = A_OdomZ;
             EndSl;

             LASTDT = DSTMDY;
           EndIf;

           %Occur(D1MILE) = Ctr;
           DSMDY = DSTMDY;
           D1MILE = MILE;
           Update MILSFL;
         EndFor;
         Exsr MXMLVL;

         *IN43 = *OFF;
         *IN52 = *OFF;
         *IN56 = *OFF;
         *IN58 = *OFF;
         *IN59 = *OFF;

         *IN53 = *OFF;

         Ctr = SAVRRN;
         PODOM = DSENDS;

         Dow Ctr <> 0;
           %Occur(D1MILE) = Ctr;

           If *IN35 = *OFF;
              D1HODM = D1BODM;
           else;
              D1HMIL = D1BODM;
           Endif;

           Select;
           When D1HODM <> 0
            And DSENDS <> 0
            And *IN35 = *OFF;
                D1HMIL = ENDODM - D1HODM;
                If *INKP = *ON;
                  D1BODM = D1HMIL;
                Endif;
                ENDODM = D1HODM;

           When *IN35 = *OFF AND *INKP = *ON;
                CLEAR D1BODM;

           When D1HMIL <> 0
            And DSENDS <> 0
            And *IN35 = *ON;
                D1HODM = ENDODM - D1HMIL;
                If D1HODM < 0;
                  D1HODM = 0;
                Endif;
                If *INKP = *ON;
                  D1BODM = D1HODM;
                Endif;
                ENDODM = D1HODM;

           When *INKP = *ON
            And *IN35 = *ON;
                CLEAR D1BODM;

           EndSl;

           If D1TMDY <> 0;

             Wk_MDY = D1TMDY;
             Exsr Validate_MDY;
             If %Error();
               Wk_Date7 = 0;
             Else;
               Wk_Date10 = %Date(D1TMDY:*MDY);
               Wk_Date7 = %Dec(Wk_Date10:*CYMD);
             Endif;

             If Wk_Date7 > PTYMD;
               %Occur(DEMILE) = Ctr + 1;
               MiErr = 'Y';
               MISRN = Ctr + 1;
               DETMDY = 'Y';
               $Msgid = '0114';
               EXSR Err_Message;
             EndIf;
             PTYMD = Wk_Date7;
           EndIf;

           If D1HODM <> 0;
             Select;
             When D1HODM >= PODOM and PODOM = DSENDS;

                 *IN51 = *ON;
                 $Msgid = '0147';
                 EXSR Err_Message;
             When D1HODM >= PODOM;        //indicates that PODOM <> DSENDS
                 %Occur(DEMILE) = Ctr + 1;
                 MiErr = 'Y';
                 MISRN = Ctr + 1;
                 DEBODM = 'Y';
                 $Msgid = '0147';
                 EXSR Err_Message;
             When D1LINE = '01';
                 BEGODM = D1HODM;
                 WK_BEGDAT7 = Wk_Date7;
             EndSl;
             PODOM = D1HODM;
           EndIf;

           %Occur(DEMILE) = Ctr;

           Select;
           When D1SOPT = 'I' and Ctr = 99;
               DESOPT = 'Y';
               MiErr = 'Y';
               $Msgid = '0103';
               EXSR Err_Message;
           When D1SOPT = 'I';           //indicates that X <> 99
               If SEL# = 0;
                 INMRN = Ctr;
               EndIf;
               SEL# = SEL# + 1;

           When D1SOPT = 'D';
               If SEL# = 0;
                 DEMRN = Ctr;
               EndIf;
               SEL# = SEL# + 1;
           When D1SOPT <> ' ';
               DESOPT = 'Y';
               MISRN = Ctr;
               $Msgid = '0100';
               EXSR Err_Message;

           When MODE = 'ADD    '
               And D1SOPT = *BLANK
               And D1TMDY = 0
               And D1SE = *BLANKS
               And D1RTES = *BLANKS
               And D1BODM = 0
               And D1CODE = *BLANKS
               And LINFND = *BLANKS;

           Other;

               LINFND = 'Y';

               Wk_DATE6 = D1TMDY;
               EXSR Validate_Date;
               If WKSPER = *ON;
                 MiErr = 'Y';
                 MISRN = Ctr;
                 DETMDY = 'Y';
               EndIf;

               If WKSPER = *OFF;

                 Wk_Date10 = %Date(DsbDat:*mdy);
                 Beg_Date7 = %Dec(Wk_Date10:*cymd);

                 If Wk_BegDat7 < Beg_Date7;
                   MiErr = 'Y';
                   MISRN = Ctr;
                   DETMDY = 'Y';
                   $Msgid = '0112';
                   EXSR Err_Message;
                 EndIf;

                 If D1LINE = '01'
                   And Wk_BegDat7 <> Beg_Date7;
                   *IN29 = *OFF;
                   MiErr = 'Y';
                   MISRN = Ctr;
                   DETMDY = 'Y';
                   $Msgid = '0116';
                   EXSR Err_Message;
                 EndIf;
               EndIf;

               If WKAFLG = 'Y' and D1SE <> *Blanks;

                 If VFCUST <> '699999' AND VFCUST <> '699998' AND
                   VFCUST <> 'RENTAL' AND VFCUST <> 'T1W'    AND
                   VFCUST <> 'POOL'   AND VFCUST <> 'SERV';

                   Exec Sql Select(1) Into :Data_Fnd
                            From FFSQUST
                            Where (FQCorp = :DSCorp) And
                                  (FQCust = :DSCust) And
                                  (FQUnit = :DSUnit) And
                                  (FQStvl = :D1Se)
                            Fetch First rows only;

                   If SQLCode <> 0;
                     MiErr = 'Y';
                     MISRN = Ctr;
                     DESE = 'Y';
                     $Msgid = '0503';
                     EXSR Err_Message;
                   Endif;

                   If MiErr <> 'Y' and Susp = 0 and TMERR = 'Y';
                     TmErr = ' ';
                   Endif;

                   Clear SqlCode;
                 EndIf;
               Endif;


               If D1SE <> *BLANK;
                 Exec Sql Select SSTNAM into :D1STNM  from FDTSST
                          Where  SSTCD = :D1SE
                          Fetch first row only;
               EndIf;

               Select;
               When D1SE = *BLANK;
                   MiErr = 'Y';
                   MISRN = Ctr;
                   DESE = 'Y';
                   $Msgid = '0120';
                   EXSR Err_Message;
               When SqlCode <> 0 ;
                   MiErr = 'Y';
                   MISRN = Ctr;
                   DESE = 'Y';
                   $Msgid = '0120';
                   EXSR Err_Message;
                   $$STAT = D1SE;
               Other;


                   If D1LINE = '01'
                     And D1SE <> DSDPS;
                     *IN29 = *OFF;
                     MiErr = 'Y';
                     MISRN = Ctr;
                     DESE = 'Y';
                     $Msgid = '0121';
                     EXSR Err_Message;
                   EndIf;


                   If D1SE = DSDSS;
                      DSSFND = YES;
                   EndIf;


                   Exec Sql Select (1) into :Data_Fnd
                            from FDTSST
                           Where SSTCD = :D1SE  and SAJSC1 <> :$$STAT and
                                 SAJSC2 <> :$$STAT and SAJSC3 <> :$$STAT and
                                 SAJSC4 <> :$$STAT and SAJSC5 <> :$$STAT and
                                 SAJSC6 <> :$$STAT and SAJSC7 <> :$$STAT and
                                 SAJSC8 <> :$$STAT
                           Fetch first row only;
                   If SqlCode = 0 ;


                     If D1SE <> $$STAT
                      and *IN04 = *Off
                      and *IN35 = *Off
                      and $$STAT <> *BLANKS;
                          %Occur(DEMILE) = Ctr + 1;
                          MiErr = 'Y';
                          MISRN = Ctr + 1;
                          DESE = 'Y';
                          $Msgid = '0123';
                          EXSR Err_Message;
                     EndIf;
                   ENDIF;
                   $$STAT = D1SE;
               EndSl;
               Clear SqlCode;

               %Occur(DEMILE) = Ctr;

                 If D1BODM = 0;
                   MiErr = 'Y';
                   MISRN = Ctr;
                   DEBODM = 'Y';
                   $Msgid = '0152';
                   If *IN35 = *OFF;
                     $Msgid = '0151';
                   Endif;

                   EXSR Err_Message;
                 EndIf;

                 if D1TMDY <> 0;
                    Wk_MDY = D1TMDY;
                    Exsr Validate_MDY;
                    If %Error();
                      Wk_Date7 = 0;
                    Else;
                      Wk_Date10 = %Date(D1TMDY:*MDY);
                      Wk_Date7 = %Dec(Wk_Date10:*CYMD);
                    Endif;
                 EndIf;
                 POS1 = %LOOKUP(Wk_Date7:TRDAY);
                 IF POS1 <> 0 and Wk_Date7 <> 0;
                   Clear TRPMIL;
                   TRPMIL =  TRMIL(POS1);
                   If WKUOMC = 'M';
                     TRPMIL = %DecH((TRMIL(POS1)  / 1.609):7:0);
                   EndIf;

                   If VTDSC >= 0 and VTDSC < TRPMIL;
                       MiErr = 'Y';
                       MISRN = Ctr;
                       DEBODM = 'Y';
                       $Msgid = '0504';
                       EXSR Err_Message;
                   ENDIF;
                 ENDIF;

                 Select;
                 When D1CODE <> ' '
                   And D1CODE <> '1'
                   And D1CODE <> '2'
                   And D1CODE <> '3';
                     MiErr = 'Y';
                     MISRN = Ctr;
                     DECODE = 'Y';
                     $Msgid = '0160';
                     EXSR Err_Message;


                 When Code2_Fnd = 'Y' and D1CODE = ' ';
                     D1CODE = '2';
                     @SMC(Ctr) = D1CODE;
                 When Code2_Fnd = 'Y' and D1CODE <> '2';
                     MiErr = 'Y';
                     MISRN = Ctr;
                     DECODE = 'Y';
                     $Msgid = '0167';
                     EXSR Err_Message;
                 When Code2_Fnd <> 'Y';


                     Fnd_Flg = 1;
                     Fnd_Flg = %Lookup(D1SE:@STM:Fnd_Flg);
                     Select;
                     When Fnd_Flg > 0 and D1CODE <> @SMC(Fnd_Flg);
                        MiErr = 'Y';
                        MISRN = Ctr;
                        DECODE = 'Y';
                        $Msgid = '0159';
                        EXSR Err_Message;
                     Other;
                        Fnd_Flg = 1;
                     EndSl;


                     If D1CODE = '3'
                       And UPUSE <> 'RENTAL'
                       And $OLEAS = 'N'
                       Or D1CODE = '3'
                       And D1SE <> 'KY';
                       MiErr = 'Y';
                       MISRN = Ctr;
                       DECODE = 'Y';
                       $Msgid = '0160';
                       EXSR Err_Message;
                     EndIf;
                 EndSl;
           EndSl;

           Ctr = Ctr - 1;
         EndDo;


         Days_Diff = 1;
         Wk_MDY = LastDt;
         Exsr Validate_MDY;
         If not %Error();
           Wk_Date10 = %Date(LastDt:*MDY);
           WK_ENDDAT7 = %Dec(Wk_Date10:*CYMD);
           Days_Diff = %DIFF(Wk_Date10:%date(Beg_Date7:*CYMD):*DAYS);  //note date calc
         Endif;

         If Days_Diff > 92;
           MiErr = 'Y';
           $Msgid = '0115';
           EXSR Err_Message;
           CLEAR MILLIN;
         EndIf;

         If UPUSE ='RENTAL';
           If MiErr <> 'Y';

             ExSr Getdates;

             Wk_Date7P = Wk_EndDat7P;
             ExSr Get_CusAdr;

             Select;
             When WK_CustErr = 'N';
               Valid = 'N';
               Wk_BegDt10 = %DATE(Beg_Date7:*CYMD);

               ResultSet    = ResultSet1;

               Exsr Compare_Begin_Date;

             When WK_CustErr = 'M' OR WK_CustErr = 'X';
               ExSr Mlti_Cust;

             EndSl;

             If Valid = 'N';
               Wk_Date7P = Wk_BegDat7P;
               Wk_EndDat7 = Wk_EndDat7P;
               ExSr GetNxtTrpdt;
             EndIf;

             If Valid = 'N';

               If Wk_BegDat7P <> 0;
                  Wk_Date10 = %Date(Wk_BegDat7P:*Cymd) - %Days(10);
                  Wk_Date7P = %Dec(Wk_Date10:*cymd);
               Endif;
               Wk_EndDat7 = Wk_BegDat7P;
               ExSr GetNxtTrpdt;
             EndIf;

             If Valid = 'N';
               Wk_Date7P = Wk_EndDat7P;
               If Wk_EndDat7P <> 0;
                  Wk_Date10 = %Date(Wk_EndDat7P:*Cymd) + %Days(10);
                  Wk_EndDat7 = %Dec(Wk_Date10:*cymd);
               Endif;
               ExSr GetNxtTrpdt;
             EndIf;

           EndIf;
         EndIf;

         If Valid = 'Y';
           If *INKP = *OFF;
             If DSCUST <> $Custnum;
               *IN64 = *ON;
               WCUST = $ACCOUNT;
               WBGRP = $Custgrp;
               WDIST = $DIST;
               WCSNM = $Customer;
               Write CNFWND;
               Read DTSTENTD;

               If DCUSYN = 'Y';
                 *IN45 = *OFF;
                 DSCUST = $ACCOUNT;
                 DSCBG = $Custgrp;
                 DSCDST = $DIST;
                 DSCUSN = $Customer;
                 CSKEYD = 'Y';
                 GoAhead = 'Y';
                 ExSr ChkErrs;
                 If GoAhead = 'Y';
                   TMERR = ' ';
                 EndIf;

               EndIf;
             EndIf;
           EndIf;
         EndIf;

       EndSr;


       BegSr Load_Ds_Sfl;


         *IN(60) = *On;
         *IN(61) = *Off;
         *IN(62) = *Off;
         *IN(63) = *Off;
         *IN(64) = *Off;
         *IN(65) = *Off;
         *IN(66) = *Off;
         *IN(67) = *Off;
         *IN(68) = *Off;
         *IN(69) = *Off;
         WRITE MILCTL;
         *IN(60) = *Off;
         *IN(61) = *Off;
         *IN(62) = *On;
         *IN(63) = *On;
         *IN(64) = *Off;
         *IN(65) = *Off;
         *IN(66) = *Off;
         *IN(67) = *Off;
         *IN(68) = *Off;
         *IN(69) = *Off;


         If MIERR = 'Y';
           *IN44 = *ON;
         ENDIF;


         *IN65 = *ON;

         CLEAR MRRN;
         DORRN = SAVRRN;
         CLEAR SAVRRN;
         For Ctr = 1 To DORRN;
           %Occur(D1MILE) = Ctr;
           MRRN = MRRN + 1;
           MILE   = D1MILE;
           DSTMDY = D1TMDY;
           Mile_RRN = MRRN;
           EvalR DSLINE = %Editc(MRRN:'X');
           SAVRRN = SAVRRN + 1;

           Select;
           When *IN57 = *OFF and *IN35 = *ON;
             KILOS = 0;
             If (HMILE * 1.609) <= 9999999 and HMILE > 0;
               Eval(H) KILOS = HMILE * 1.609;
             Endif;
           When *IN35 = *ON;
             KILOS = 0;
             Eval(H) KILOS = HMILE / 1.609;
           EndSl;


           EXSR Protect_TrpDt_St;

           %Occur(DEMILE) = Ctr;
           *In56 = (DESOPT = 'Y');
           *In43 = (DETMDY = 'Y');
           *In52 = (DESE = 'Y');
           *In58 = (DEBODM = 'Y');
           *In59 = (DECODE = 'Y');
           WRITE MILSFL;
         EndFor;

         *IN68 = *ON;

       EndSr;

       BegSr Underline_Route_Field;


         *IN65 = *ON;

         For Ctr = 1 To SAVRRN;
           CHAIN Ctr MILSFL;


           *IN29 = *OFF;
           If Ctr = 1;
             *IN29 = *ON;
           EndIf;

           UPDATE MILSFL;
         EndFor;

       EndSr;

       BegSr Insert_Mil_Record;

         Exsr Clr_Multi_Ds;
         Exsr Load_Multi_Ds;


         If SAVRRN = 99
           And DSTMDY <> 0;
           *IN56 = *ON;
           $Msgid = '0103';
           EXSR Err_Message;
           LeaveSr;
         EndIf;

           SAV28 = *IN28;
           SAV30 = *IN30;
           Exsr Clear_Mileage_Panel;
           *IN28 = SAV28;
           *IN30 = SAV30;
           *IN65 = *ON;
           CLEAR Ctr;
           CLEAR MRRN;

           Select;
           When INSEOF = 'I';
             DORRN = 1;
             MISRN = 1;


           When SAVRRN = 99;
               DORRN = 98;
           Other;
               DORRN = SAVRRN;
           EndSl;

           CLEAR SAVRRN;
           For Ctr = 1 To DORRN;
             %Occur(D1MILE) = Ctr;
             MRRN = MRRN + 1;
             MILE  = D1MILE;
             CLEAR MILOPT;
             DSTMDY = D1TMDY;
             Mile_RRN = MRRN;
             EvalR DSLINE = %Editc(MRRN:'X');
             SAVRRN = SAVRRN + 1;


             Exsr Protect_TrpDt_St;


             Select;
             When INSEOF = 'I';
               DSTMDY = DSBDAT;
               DSSE = DSDPS;
               WRITE MILSFL;


             When D1SOPT = 'I';                //indicates  INSEOF <> 'I'
               WRITE MILSFL;


                 *IN29 = *OFF;
                 CLEAR MILOPT;
                 CLEAR DSTMDY;
                 CLEAR DSSE;
                 CLEAR DSSTNM;
                 CLEAR DSRTES;
                 CLEAR DSBODM;
                 CLEAR DSCODE;
                 CLEAR DSLE;
                 CLEAR DSTOLL;
                 CLEAR KILOS;
                 CLEAR DSRCWT;
                 CLEAR DSAXLE;
                 CLEAR DSKYU;
                 CLEAR HODOM;
                 CLEAR HMILE;
                 MRRN = MRRN + 1;
                 Mile_RRN = MRRN;
                 EvalR DSLINE = %Editc(MRRN:'X');
                 SAVRRN = SAVRRN + 1;
                 MISRN = Mile_RRN;
                 WRITE MILSFL;

             When INSEOF <> 'I';
                 WRITE MILSFL;

             EndSl;
           EndFor;

           *IN68 = *ON;
           INSEOF = ' ';

       EndSr;


       BegSr Delete_Mil_Record;

         MISRN = 1;
         EXSR Clr_Multi_Ds;
         Exsr Load_Multi_Ds;

         SAV28 = *IN28;
         SAV30 = *IN30;
         Exsr Clear_Mileage_Panel;
         *IN28 = SAV28;
         *IN30 = SAV30;
         *IN65 = *ON;
         CLEAR Ctr;
         CLEAR MRRN;
         DORRN = SAVRRN;
         CLEAR SAVRRN;
         For Ctr = 1 To DORRN;
           %Occur(D1MILE) = Ctr;
           If D1SOPT <> 'D';
             MRRN = MRRN + 1;
             MILE = D1MILE;
             DSTMDY = D1TMDY;
             Mile_RRN = MRRN;
             EvalR DSLINE = %Editc(MRRN:'X');
             SAVRRN = SAVRRN + 1;

             Exsr Protect_TrpDt_St;

             WRITE MILSFL;
           EndIf;
         EndFor;

         If Mile_RRN = 0;
           *IN63 = *OFF;
         EndIf;

         *IN68 = *ON;

       EndSr;


       BegSr Clr_Multi_Ds;

         If SAVRRN = 0;
           CLEAR D1MILE;
         ENDIF;
         For Ctr = 1 To SAVRRN;
           %Occur(D1MILE) = Ctr;
           CLEAR D1MILE;
         EndFor;

       EndSr;


       BegSr Clr_Multi_Err_Ds;

         For Ctr = 1 To 99;
           %Occur(DEMILE) = Ctr;
           CLEAR DEMILE;
         EndFor;

       EndSr;


       BegSr Load_Multi_Ds;

         For Ctr = 1 To SAVRRN;
           CHAIN Ctr MILSFL;
           If %Found();
             %Occur(D1MILE) = Ctr;
             DSMDY = DSTMDY;
             D1MILE = MILE;
           EndIf;
         EndFor;

       EndSr;


       BegSr Prc_Add_State_Mil_Req;
         PANEL = 'ASR ';


         *IN32 = *OFF;
         *IN33 = *OFF;


         *IN63 = *INKB;      //Turn On SFLDSP & SFLEND if *INKB is *ON (F2 pressed)
         *IN68 = *INKB;

         If *INKB = *OFF;


           EXSR Clr_Add_St_Mil_Req;

           CHAIN 1 MILSFL;


           EXSR Fill_Add_St_Mil_Req;
         EndIf;

         Loop4 = *ON;
         DoW Loop4 = *ON;


         WRITE MSGCLR;
         WRITE MSGCTL;

         If AState_Req_Fnd = 'Y';


           *In36 = (LEFND = 'Y');
           *In37 = (TOLFND = 'Y');
           *In38 = (WGTFND = 'Y');
           *In39 = (AXLFND = 'Y');


           WRITE TITLE;
           WRITE CUST;
           WRITE ASRFUN;

           *In64 = *On;
           WRITE ASRCTL;
           READ DTSTENTD;
           *In67 = %Eof;


           *IN70 = *OFF;


           *IN32 = *OFF;
           *IN33 = *OFF;


           *IN65 = *OFF;
           *IN66 = *OFF;


           *IN71 = *OFF;
           *IN72 = *OFF;
           *IN73 = *OFF;
           *IN74 = *OFF;



           Select;
           When *INKA = *ON;
             SPVEXIT ( CONFRM );
             If CONFRM = 'Y';
                LeaveSr;
             Endif;
             Iter;

           When *INKB = *ON;
             LeaveSr;

           When *INKD = *ON;
              EXSR Inquiry_Window;
              Iter;

           When *IN90 = *ON;
              EXSR Process_Help;
              Iter;

           Endsl;


           Exsr Reset_Err_Acc;


           Exsr Clear_Asr_Mult_Ds;

           Wk_DSRCWT = 0;
           Ad_Mile_RRN = 1;

           READC ASRSFL;
           Dow Not %Eof();
             *IN(71) = *Off;
             *IN(72) = *Off;
             *IN(73) = *Off;
             *IN(74) = *Off;

             If Wk_DSRCWT = 0;
               Wk_DSRCWT = DSRCWT;
               Wk_DSAXLE = DSAXLE;
             Endif;

             If Wk_DSRCWT = 0 and #DSRCWT > 0;
               Wk_DSRCWT = #DSRCWT;
               Wk_DSAXLE = #DSAXLE;
             Endif;


             EXSR Vali_Addi_st_Mil_req;
             UPDATE ASRSFL;
             READC ASRSFL;
           EndDo;


           If OVER > 0
             Or SUSP > 0
             Or FATAL > 0;


             Exsr SUSP_OVER_Err;


             Select;
             When *INKE = *OFF
               And *INKG = *OFF;
               Iter;

             When *INKG = *ON
                 And *IN07 = *ON;

                 Exsr DTS_Sus_Rej;

             EndSl;
           EndIf;
         EndIf;
         Loop4 = *OFF;
         Enddo;

        EndSr;


       BegSr Clr_Add_St_Mil_Req;

         *IN(60) = *On;
         *IN(61) = *Off;
         *IN(62) = *Off;
         *IN(63) = *Off;
         *IN(64) = *Off;
         *IN(65) = *Off;
         *IN(66) = *Off;
         *IN(67) = *Off;
         *IN(68) = *Off;
         *IN(69) = *Off;
         WRITE ASRCTL;
         *IN(60) = *Off;
         *IN(61) = *Off;
         *IN(62) = *On;
         *IN(63) = *On;
         *IN(64) = *Off;
         *IN(65) = *Off;
         *IN(66) = *Off;
         *IN(67) = *Off;
         *IN(68) = *Off;
         *IN(69) = *Off;
         *IN(70) = *Off;

         CLEAR Ad_Mile_RRN;

       EndSr;

       BegSr Clear_Asr_Mult_Ds;

         For Ctr = 1 To 20;
           %Occur(ASRMSG) = Ctr;
           CLEAR ASRMSG;
         EndFor;


         CLEAR AState_Err_Cnt;

       EndSr;
       BegSr Fill_Add_St_Mil_Req;


         AState_Req_Fnd = NO;
         TOLFND = NO;
         LEFND  = NO;
         WGTFND = NO;
         AXLFND = NO;
         FIRST =  NO;


         Dow True;
           Wk_MDY = DstMDY;
           Exsr Validate_MDY;
           If %Error();
             Wk_EndDat7 = 0;
           Else;
             Wk_Date10 = %Date(DstMDY:*MDY);
             Wk_EndDat7 = %Dec(Wk_Date10:*CYMD);
           Endif;

           If %Found();

             getdtssrq(DSSE: DSCUST: DSCDST: Today_7 :
             srqFound: DTSSRQds);

             *IN36 = *OFF;
             *IN37 = *OFF;
             *IN38 = *OFF;
             *IN39 = *OFF;
             *IN84 = *OFF;
             *IN85 = *OFF;
             *IN86 = *OFF;

             If MODE = 'DISPLAY';
               AState_Req_Fnd = YES;
               WGTFND = YES;
               *IN38 = *ON;
             EndIf;

             If RQWGHT <> 'Y';
                Exec Sql Select RQWGHT, RQAXLE
                           into :RQWGHT, :RQAXLE
                           from FDTSSRQ
                          Where RQST = :DSSE AND RQWGHT = 'Y' AND
                                RQEFDT <= :Today_7 and RQEXDT >= :Today_7
                          Fetch First rows only;
             Endif;

             If srqFound = *ON or SqlCode = 0;
               If MODE <> 'DISPLAY';
                 *IN65 = *ON;
               EndIf;

JP01           Exec Sql Select (1)
JP01                      into :Data_Fnd
JP01                      from FDTSSRQ
JP01                     Where RQST = :DSSE AND RCUST = ' ' AND RQLE = 'Y' AND
JP01                           RQEFDT <= :Today_7 and RQEXDT >= :Today_7
JP01                     Fetch First rows only;
JP01
JP01           If RQLE = 'Y' or SqlCode = 0;
                  AState_Req_Fnd = YES;
                  LEFND  = YES;
                 *IN36 = *ON;
               Else;
JP01              DSLE = 'L';
               EndIf;

               If RQTOLL = 'Y';
                  AState_Req_Fnd = YES;
                  TOLFND = YES;
                 *IN37 = *ON;
               Else;
                  DSTOLL = 0;
               EndIf;

               Exsr Weight_Axle_Req;

             EndIf;

             Ad_Mile_RRN = Ad_Mile_RRN + 1;
             WRITE ASRSFL;
JP01         UPDATE MILSFL;
             *IN(62) = *On;
             *IN(63) = *On;
           EndIf;


           If FIRST = 'N';
             ASSRN = Ad_Mile_RRN;
             FIRST = 'Y';
           EndIf;

           MRRN = Ad_Mile_RRN + 1;
           CHAIN MRRN MILSFL;
           If Not %Found();
             Leave;
           EndIf;

           If DSTMDY = 0;
             Leave;
           EndIf;
         EndDo;
         *IN68 = *ON;
       EndSr;

       BegSr Weight_Axle_Req;

          If RQWGHT = 'Y' or RQKYU = 'Y';
            AState_Req_Fnd = YES;
            WGTFND = YES;
            *IN38 = *ON;
          EndIf;

          If RQAXLE = 'Y' or RQKYU = 'Y';
            AState_Req_Fnd = YES;
            AXLFND = YES;
            *IN39 = *ON;
          EndIf;

          IF RQKYU = YES AND AState_Req_Fnd = YES;
            DSASRTXT ='Taxable';
            *IN85 = *ON;
          EndIf;

          IF *IN84 = *ON AND *IN85 = *ON;
            DSASRTXT ='Tax/KYU#';
          ENDIF;

       EndSr;

       BegSr Vali_Addi_st_Mil_req;


         *IN36 = *OFF;
         *IN37 = *OFF;
         *IN38 = *OFF;
         *IN39 = *OFF;
         *IN84 = *OFF;
         *IN85 = *OFF;
         *IN86 = *OFF;
         WKFLG = ' ';

         #DSRCWT = 0;
         #DSAXLE = 0;

         Reset DTSSRQds;

         getdtssrq(DSSE: DSCUST: DSCDST: Today_7 :
         srqFound: DTSSRQds);

         If RQLE = 'Y';
            WKFLG = 'Y';
         Endif;

         If RQWGHT <> 'Y';
            Exec Sql Select RQWGHT, RQAXLE
                       into :RQWGHT, :RQAXLE
                       from FDTSSRQ
                      Where RQST = :DSSE AND RQWGHT = 'Y' AND
                            RQEFDT <= :Today_7 and RQEXDT >= :Today_7
                      Fetch First rows only;
         Endif;

         IF (RQWGHT ='Y' AND RQAXLE ='Y');
           Exsr Addtnl_WgtAxl_Vldr;
         ENDIF;

         Exsr Weight_Axle_Req;

         Select;
         When RQWGHT ='Y' AND RQAXLE ='Y' AND PError <> *Blanks;
             *IN73 = *ON;
             *IN74 = *ON;

             $Msgid = '0916';
             EXSR Err_Message;
             *IN38 = *ON;
             *IN39 = *ON;
             LEAVESR;
         When RQWGHT ='Y' AND RQAXLE ='Y';
             *IN73 = *OFF;
             *IN74 = *OFF;

             If PLicWgt <> *Blanks;
               #DSRCWT = %Dec(PLicWgt:7:0);
             EndIf;

             If PAxles <> *Blanks;
               #DSAXLE = %Dec(PAxles:2:0);
             EndIf;

             TMERR   = '  ';
         ENDSL;


         IF DSTAX <> '1' AND DSTAX <>'2' AND
           DSTAX <> ' ';
           *IN86 = *ON;
           AState_Err_Cnt = AState_Err_Cnt + 1;
           $Msgid = '0919';
           $MDATA = DSTAX;
           EXSR Err_Message;
           LEAVESR;
         ENDIF;
         *IN86 = *OFF;
         DSCODE = DSTAX;

         If srqFound = *ON;


           If WKFLG = 'Y'
             And DSLE = ' ';
             DSLE = 'L';
           ENDIF;
           If RQLE = 'Y';
             *IN36 = *ON;
             Select;
             When DSLE = ' ';
               DSLE = 'L';
             When DSLE <> 'L'
                 And DSLE <> 'E';
                 *IN71 = *ON;
                 ASSRN = Ad_Mile_RRN;
                 $Msgid = '0161';
                 EXSR Err_Message;
             EndSl;
           EndIf;


           If RQTOLL = 'Y';
             *IN37 = *ON;

             If DSTOLL > HMILE;
               *IN72 = *ON;
               ASSRN = Ad_Mile_RRN;
               $Msgid = '0162';
               EXSR Err_Message;
             EndIf;
           EndIf;



           If *IN71 = *OFF
            and DSRCWT = 0;

              DSRCWT = 0;
              If PLicWgt <> *Blanks;
               DSRCWT = %Dec(PLicWgt:7:0);
              Endif;

              DSAXLE = 0;
              If PAxles <> *Blanks;
               DSAXLE = %Dec(PAxles:2:0);
              Endif;

               If DSLE = 'E'
                 And RQWGHT <> 'Y';
                 DSRCWT = WKTARE;
               EndIf;

           EndIf;
         EndIf;


         If RQAXLE = 'Y';
           *IN39 = *ON;

           If RQWGHT = 'Y';

             TSTWT = DSRCWT;
             If *IN57 = *On;
               Eval(H) TSTWT = DSRCWT * 2.2;
             EndIf;
             If DSAXLE = 0;
               SELECT;

               When TSTWT > 102001;
                 DSAXLE = 8;

               When TSTWT > 92001;
                 DSAXLE = 7;

               When TSTWT > 80001;
                 DSAXLE = 6;


               ENDSL;

             ENDIF;

           ENDIF;

         EndIf;
       EndSr;
       BegSr Addtnl_WgtAxl_Vldr;

         PState  = DSSE;
         PLicWgt = %Char(DSRCWT);
         PAxles  = %Char(DSAXLE);
         PError  = *Blanks;
         #DSRCWT = *Zeros;
         #DSAXLE = *Zeros;
         PBegDate = %Date(DSTMDY:*MDY);

         FMTAXLVLDR(DsCorp:DsCust:DsUnit:PBegDate:
                    PState:PLicWgt:PAxles:PError);
       EndSr;
       BegSr WgtAxl_Vldr;

        WKFCtr = 1;
        DoW WKFCtr <= SAVRRN;
         If @ST(WKFCtr) <> ' ';
         PState  = @ST(WKFCtr);
         PLicWgt = *Blanks;
         PAxles  = *Blanks;
         PError  = *Blanks;
         #DSRCWT = *Zeros;
         #DSAXLE = *Zeros;
         PBegDate = %Date(Beg_Date7:*CYMD);
         FMTAXLVLDR(DsCorp:DsCust:DsUnit:PBegDate:
                    PState:PLicWgt:PAxles:PError);

         Lwieght_Susp = '0';

         If PError = *Blanks;

           If PLicWgt <> *Blanks;
             #DSRCWT = %Dec(PLicWgt:7:0);
           EndIf;

           If PAxles <> *Blanks;
             #DSAXLE = %Dec(PAxles:2:0);
           EndIf;

         Else;
           TMERR = 'Y';
           $Msgid = '0916';
           EXSR Err_Message;
           Lwieght_Susp = '1';
           #DSRCWT = *ZEROS;
           #DSAXLE = *ZEROS;
         Endif;

         @STWGT(WKFCtr) = #DSRCWT;
         @STAXL(WKFCtr) = #DSAXLE;

         If Wk_DSRCWT = 0;
           Wk_DSRCWT = #DSRCWT;
           Wk_DSAXLE = #DSAXLE;
         Endif;
         Endif;
         WKFCtr = WKFCtr + 1;
        EndDo;

       EndSr;
       BegSr Proc_Bill_Fuel;

         PANEL = 'BILL';
         *IN33 = *OFF;

         Select;
         When *INKB = *ON and Bill_RRN > 0;

           If Bill_RRN > 0;
             *IN63 = *ON;
           EndIf;
           BISRN = 1;

         When *INKB = *ON;

           *IN63 = *OFF;
           BISRN = 1;
         Other;

           Exsr Clr_Bill_Fuel_Panel;
           CLEAR DSSTDT;


           If Beg_Date7 > 0;
             Wk_Date10 = %Date(Beg_Date7:*CYMD) - %Days(3);
             Wk_Date7  = %Dec(Wk_Date10:*CYMD);
             Wk_Date7P = Wk_Date7;
           Else;
             Wk_Date10 = %Date('0001-01-01');
             Wk_Date7 = 0;
             Wk_Date7P = 0;
           Endif;

         EndSl;


        If *in68 = *On;
           Exsr Clr_Bill_Fuel_Panel;
           CLEAR DSSTDT;
        Endif;

        Exec Sql Set Connection :WkRemote;
        Exec Sql Open Entr_Tkt_Cursor;

        Exsr @FLBIL;

        Loop4 = *ON;
        DoW Loop4 = *ON;


         WRITE MSGCLR;
         WRITE MSGCTL;


         WRITE TITLE;
         WRITE CUST;
         If Bill_RRN = 0;
           WRITE BILEOF;
         EndIf;
         WRITE BILFUN;

         *In64 = *On;
         WRITE BILCTL;
         READ DTSTENTD;
         *In67 = %Eof;

         *IN70 = *OFF;
         *IN33 = *OFF;

         *IN43 = *OFF;
         *IN56 = *OFF;

         *IN65 = *OFF;
         *IN66 = *OFF;

         If *IN61 = *ON;
           Bill_RRN = SAVBRN;
           Exsr @FLBIL;
           Iter;
         Endif;


         Select;
         When *INKA = *ON;
           SPVEXIT ( CONFRM );
           If ConFrm = 'Y';
              Leave;
           EndIf;
           Iter;

         When *InKb = *On;
            Leave;

         When *INKD = *ON;
            EXSR Inquiry_Window;
            Iter;

         When *IN90 = *ON;
            EXSR Process_Help;
            Iter;

         EndSl;


         If DSSTDT <> 0;
           Wk_DATE6 = DSSTDT;
           EXSR Validate_Date;

           If WKSPER = *OFF;
             EXSR Clr_Bill_Fuel_Panel;
             Exec Sql Close Entr_Tkt_Cursor;

             Exec Sql Open Entr_Tkt_Cursor;

             Exsr @FLBIL;
             CLEAR DSSTDT;
           EndIf;
           Iter;
         EndIf;


         Exsr Reset_Err_Acc;

         CLEAR @BRN;
         CLEAR Ctr;

         If Bill_RRN > 0;
           Bill_RRN = 1;
           READC BILSFL;


           Dow Not %Eof();


             *IN43 = *OFF;
             *IN56 = *OFF;


             If MODE <> 'DISPLAY';
               EXSR Validate_Bill_Panel;
             EndIf;

             UPDATE BILSFL;

             READC BILSFL;
           EndDo;

           If OVER > 0
             Or SUSP > 0
             Or FATAL > 0;
             If FATAL = 0  and SUSP > 0;
                 *IN33 = *ON;
             EndIf;

             Select;
             When *INKG = *OFF;
                Iter;
             When *INKG = *ON
                 And *IN07 = *ON;

                 Exsr DTS_Sus_Rej;
             EndSl;
           EndIf;
         EndIf;
         Leave;
        EndDo;
        Exec Sql Close Entr_Tkt_Cursor;

          Exec Sql Set Connection :WkMachine;

       EndSr;
       BegSr @FLBIL;

         Select;
         When *IN68 = *OFF;
           Exsr Fill_Bill_Fuel_Panel;
         When *IN61 = *ON;
             *IN66 = *ON;
         EndSl;

       EndSr;

       BegSr Clr_Bill_Fuel_Panel;

         *IN(60) = *On;
         *IN(61) = *Off;
         *IN(62) = *Off;
         *IN(63) = *Off;
         *IN(64) = *Off;
         *IN(65) = *Off;
         *IN(66) = *Off;
         *IN(67) = *Off;
         *IN(68) = *Off;
         *IN(69) = *Off;
         WRITE BILCTL;
         *IN(60) = *Off;
         *IN(61) = *Off;
         *IN(62) = *On;
         *IN(63) = *On;
         *IN(64) = *Off;
         *IN(65) = *Off;
         *IN(66) = *Off;
         *IN(67) = *Off;
         *IN(68) = *Off;
         *IN(69) = *Off;
         *IN(70) = *Off;

         CLEAR Bill_RRN;

         Wk_Cust8 = DSCUST + DSCBG;

       EndSr;

       BegSr Fill_Bill_Fuel_Panel;

         CLEAR WK_COUNT1;
         FIRST = 'N';

         Exec Sql Select (1) into :Data_fnd
                             from FFUELTKTV4 a Join FLTFUETL1 b
                          on a.FtFTyp = b.FlFTyp and b.FlFSrF = 'Y'
                         and FTIUNI = :DSUNIT and FTCORP = :DSCORP
                         and FTPSTS = 'V' and FTICUS = :Wk_Cust8
                         and FTUDTR <> 'U' and FTGALN <> 0  and FTFUSE <> 'R'
                         and FTPDAT between :Wk_Date7P and :Wk_EndDat7
                         and a.FTFTYP = b.FLFTYP
                       Fetch first row only;
         If SqlCode <> 0;
            Exec Sql Select FTCORP,FTSRC into :HSCORP,:HSFSRC
                       from FFUELTKTV4 a, FLTFUETL1 b
                      Where FTIUNI = :DSUNIT and FTCORP = :DSCORP
                        and FTPSTS = 'V' and FTICUS = :Wk_Cust8
                        and FTGALN <> 0  and FTFUSE <> 'R'
                        and FTPDAT between :Wk_Date7P and :Wk_EndDat7
                        and a.FTFTYP = b.FLFTYP
                      Fetch first row only;
         Endif;

         Dow WK_COUNT1 < 10 and SqlCode = 0;

            Clear Ffueltkt;
            Exec Sql Fetch from Entr_Tkt_Cursor
                           into :FTUDTR,:FTGALN,:FTFUSE,:FTSTST,:FTTKNO,
                                :FTICUS,:FTODIS,:FTVEND,:FTSTNA,:FTSTCT,
                                :FTPDAT,:FTSRC,:FTCORP;

            Select;
            When SqlCode <> 0;
               Leave;
            When DSSTDT > 0 AND WKSPER <> '1';          //Entered Start Date
               if %Dec(%Date(DSSTDT:*MDY):*CYMD) > FTPDAT;
                 iter;
               Endif;
            EndSl;



            If %LOOKUP(FTSTST:@STM) <> 0;                     //condition added in -
                                                           //Cursor Entr_Tkt_Cursor
               BILOPT = *BLANK;

               Wk_Date10 = %Date(FTPDAT:*CYMD);
               DsPDat = %Dec(Wk_Date10:*MDY);

               DSSTST = FTSTST;
               DSTKNO = FTTKNO;
               DSGALN = FTGALN;
               DSSCUS = FTICUS;
               DSSDST = FTODIS;

               HSFSRC = FTSRC;              //Move Corp and Source to Hidden Fields
               HSCORP = FTCORP;             //to update FFUELTKT file

               DSVEND = FTVEND;
               DSSTNA = FTSTNA;
               If FTVEND = *BLANKS And FTSRC <> 'F';
                  Ds_FDIST = FTPDIS;
                  DS_FLoc = FTPLOC;
                  Eval DSSTNA = XXXXXX;
               EndIf;

               DSSTCT = FTSTCT;
               Bill_RRN = Bill_RRN + 1;
               WK_COUNT1 = WK_COUNT1 + 1;


               *IN30 = *OFF;
               If FTPDAT >= Beg_Date7 And FTPDAT <= Wk_EndDat7
                  And MODE = 'ADD    ';
                    *IN30 = *ON;
               EndIf;

               WRITE BILSFL;
               *IN(62) = *On;
               *IN(63) = *On;

               If FIRST = 'N';
                  BISRN = Bill_RRN;
                  FIRST = 'Y';
               EndIf;
            EndIf;


            If Bill_RRN = 99;
               WK_COUNT1 = 10;
               *IN68 = *ON;
            EndIf;
         EndDo;

         Select;
         When SqlCode <> 0
           And Bill_RRN > 0;
             *IN68 = *ON;

         When Bill_RRN = 0;
           *IN63 = *OFF;
         EndSl;

         SAVBRN = Bill_RRN;
       EndSr;


       BegSr Validate_Bill_Panel;


           Select;
           When BILOPT <> 'X' And BILOPT <> ' ';
             *IN56 = *ON;
             BISRN = Bill_RRN;
             $Msgid = '0100';
             EXSR Err_Message;
           When BILOPT = 'X';
             Ctr = Ctr + 1;
             @BRN(Ctr) = Bill_RRN;
             CLEAR BILOPT;
           EndSl;

       EndSr;

       BegSr Proc_Fuel_Purchase;

         PANEL = 'FUEL';

         Exsr Clear_Fuel_ind;


         Select;
         When *INKB = *ON;
             FUSRN = 1;
                        // Load Subfile with records from file if DISPLAY or CHANGE mode
         When MODE <> 'ADD    ';
             Exsr Clr_Fuel_Pur_Panel;        // Clear Purchase Fuel screen.
             Exsr Fill_Fuel_Pur_Panel;
         Other;
             Exsr Clr_Fuel_Pur_Panel;        // Clear Purchase Fuel screen.
             Exsr Fill_Fuel_Pur_Panel_Add;
         EndSl;

         WK_COUNT1 = 0;
         Loop4 = *ON;
         DoW Loop4 = *ON;


         WRITE MSGCLR;
         WRITE MSGCTL;


         WRITE TITLE;
         WRITE CUST;

         If Fuel_RRN = 0;
           WRITE FULEOF;
         EndIf;

         WRITE FULFUN;

         *In64 = *On;
         WRITE FULCTL;
         READ DTSTENTD;
         *In67 = %Eof;

         If Fuel_RRN = 0;
           READ FULEOF;
           *InLR = %Eof;
         EndIf;


         *IN70 = *OFF;

         Exsr Clear_Fuel_ind;


         *IN66 = *OFF;


         Select;
         When *INKA = *ON;
           SPVEXIT ( CONFRM );
           If Confrm = 'Y';
              LeaveSr;
           EndIf;
           Iter;

         When *InKb = *On;
            LeaveSr;

         When *INKD = *ON;
           EXSR Inquiry_Window;
           Iter;

         When *IN90 = *ON;
           EXSR Process_Help;
           Iter;


         When *INKN = *ON And *IN27 = *OFF;
           Exsr Qty_Mer_Field;
           Iter;
         EndSl;


         Exsr Reset_Err_Acc;

         CLEAR SEL#;
         CLEAR INFRN;
         CLEAR DEFRN;


         EXSR Clr_Fuel_Msg_Ds;


         Select;
         When Fuel_RRN > 0;
           Fuel_RRN = 1;
           DFL = *BLANKS;
           WK_COUNT2 = 1;
           If MODE <> 'DISPLAY';
             CHAIN Fuel_RRN FULSFL;


             Wk_Fuel_Err = 0;
             WKFCtr = 0;
             EmFlag = 'N';
             If Fuel_Ds(1).Fuel_tkt = '         ';
               EmFlag = 'Y';
             Endif;

             Dow %Found();
               *IN43 = *OFF;
               *IN(52) = *Off;
               *IN(53) = *Off;
               *IN56 = *OFF;
               *IN(74) = *Off;
               *IN(75) = *Off;
               *IN(76) = *Off;
               *IN(77) = *Off;
               *IN(78) = *Off;
               *IN(79) = *Off;


               ExSr Validate_Fuel_Pur;

               If EmFlag = 'Y';
                 WKFCtr += 1;
                 Fuel_Ds(WKFCtr).Fuel_tkt = DSTKNO;
                 Fuel_Ds(WKFCtr).Fuel_src = HSFSRC;
               Endif;


               If MODE <> 'DISPLAY' And DSDPUR <> 0;
                 Wk_MDY = DSDPUR;
                 Exsr Validate_MDY;
                 If %Error();
                   Wk_Date7 = 0;
                 Else;
                   Wk_Date10 = %Date(DSDPUR:*MDY);
                   Wk_Date7 = %Dec(Wk_Date10:*CYMD);
                 Endif;
                 DUPFLY = Wk_CYY7;
                 DUPFLM = DSDPMM;
                 DUPFLD = DSDPDD;
                 DUPFLS = DSSPUR;
                 DUPFLT = DSTKNO;
                 Fnd_Flg = 1;
                 Fnd_Flg = %Lookup(DUPFL:DFL:Fnd_Flg);

                 If Fnd_Flg > 0;
                    WRKQTY = QTY(Fnd_Flg);
                    WKFPG1 = WRKQTY - 1;
                    WKFPG2 = WRKQTY + 1;
                    Select;
                    When DSFPG >= WKFPG1 and DSFPG <= WKFPG2;
                       FUSRN = Fuel_RRN;
                       *IN56 = *ON;
                       *IN43 = *ON;
                       *IN52 = *ON;
                       *IN74 = *ON;
                       $Msgid = '0177';
                       EXSR Err_Message;
                       *IN54 = *ON;
                    Other;
                       Fnd_Flg= 1;
                       DFL(WK_COUNT2) = DUPFL;
                       QTY(WK_COUNT2) = DSFPG;
                       WK_COUNT2 = WK_COUNT2 + 1;
                    EndSl;
                 Else;
                    Fnd_Flg= 1;
                    DFL(WK_COUNT2) = DUPFL;
                    QTY(WK_COUNT2) = DSFPG;
                    WK_COUNT2 = WK_COUNT2 + 1;
                 EndIf;
               EndIf;



               *IN31 = *OFF;
               If DSSRC = 'Y';
                 *IN31 = *ON;
               EndIf;

               UPDATE FULSFL;

               Fuel_RRN = Fuel_RRN + 1;
               Chain Fuel_RRN FULSFL;
             EndDo;
           ENDIF;


           Select;
           When INFRN <> 0;
             *IN43 = *OFF;
             *IN(52) = *Off;
             *IN(53) = *Off;
             *IN56 = *OFF;
             *IN(74) = *Off;
             *IN(75) = *Off;
             *IN(76) = *Off;
             *IN(77) = *Off;
             *IN(78) = *Off;
             *IN(79) = *Off;
             Exsr Insert_Fuel_Rec;

           When DEFRN <> 0;
               *IN43 = *OFF;
               *IN(52) = *Off;
               *IN(53) = *Off;
               *IN56 = *OFF;
               *IN(74) = *Off;
               *IN(75) = *Off;
               *IN(76) = *Off;
               *IN(77) = *Off;
               *IN(78) = *Off;
               *IN(79) = *Off;
               Exsr Delete_Fuel_Rec;
           EndSl;


           If OVER > 0
             Or SUSP > 0
             Or FATAL > 0
             Or INFRN > 0
             Or DEFRN > 0;


             Exsr SUSP_OVER_Err;


             Select;
             When *INKE = *OFF
               And *INKG = *OFF;
               Iter;

             When *INKG = *ON
                 And *IN07 = *ON;

                 Exsr DTS_Sus_Rej;

             EndSl;
           EndIf;

         When INSEOF = 'I';
             *IN63 = *ON;
             CLEAR INFRN;
             Exsr Insert_Fuel_Rec;
             Iter;
         When INSEOF <> ' ';
             $Msgid = '0100';
             EXSR Err_Message;
             Iter;
         EndSl;

         Select;
         When WK_COUNT1 = 0 And WARN > 0;
           WK_COUNT1 = 1;
           Iter;

         When WARN > 0;
           RecExist = 'N';
           READC FULSFL;
           DOW NOT %EOF(DTSTENTD);
             *IN65 = *ON;                                                       // SFLNXTCHG IS ON
             UPDATE FULSFL;
             RecExist = 'Y';
             WK_COUNT1 = 0;
             LEAVE;
           ENDDO;
           If RecExist = 'Y';
              Iter;
           ENDIF;
         EndSl;
         LeaveSr;
         EndDo;

       EndSr;


       BegSr Clear_Fuel_ind;


         *IN32 = *OFF;
         *IN33 = *OFF;
         *IN35 = *OFF;


         *IN43 = *OFF;
         *IN52 = *OFF;
         *IN56 = *OFF;
         *IN74 = *OFF;
         *IN75 = *OFF;
         *IN76 = *OFF;
         *IN77 = *OFF;
         *IN78 = *OFF;
         *IN79 = *OFF;


         *IN53 = *OFF;

       EndSr;

       BegSr Clr_Fuel_Pur_Panel;

         *IN28 = *OFF;

         *IN(60) = *On;
         *IN(61) = *Off;
         *IN(62) = *Off;
         *IN(63) = *Off;
         *IN(64) = *Off;
         *IN(65) = *Off;
         *IN(66) = *Off;
         *IN(67) = *Off;
         *IN(68) = *Off;
         *IN(69) = *Off;
         WRITE FULCTL;
         *IN(60) = *Off;
         *IN(61) = *Off;
         *IN(62) = *On;
         *IN(63) = *On;
         *IN(64) = *Off;
         *IN(65) = *Off;
         *IN(66) = *Off;
         *IN(67) = *Off;
         *IN(68) = *Off;
         *IN(69) = *Off;
         *IN(70) = *Off;

         CLEAR Fuel_RRN;

       EndSr;


       BegSr Clr_Fuel_Msg_Ds;

         For Ctr = 1 To 20;
           %Occur(FULMSG) = Ctr;
           CLEAR FULMSG;
         EndFor;


         CLEAR Fuel_Err_Cnt;

       EndSr;


       BegSr Fill_Fuel_Pur_Panel;

         CLEAR WK_COUNT1;
         FIRST = 'N';
         If MODE = 'CHANGE ';
           *IN65 = *ON;
         EndIf;

         Exec Sql Open Entr_Fuel_Cursor;
         Dow WK_COUNT1 < 99 and SqlCode = 0;
           Reset FdtsFuel;
           Exec Sql Fetch Entr_Fuel_Cursor
                     Into :TFLINE,:TFSRC,:LinDatMM,:LinDatDD,
                          :LinDatYY,:TFSPUR,:TFTKNO,:TFFKEY,
                          :TFQTM,:TFVEND,:TFVNDN,:TFVNDC,
                          :TFTAXP,:TFORIG,:TFFX,:TF2A01,:TFINV,:TFFSRC;
           If SqlCode <> 0;
              RemCnt = 99 - WK_COUNT1;
              Leave;
           EndIf;
           FULOPT = *BLANK;
           DSLINE = TFLINE;  //Note line no
           DSSRC = TFSRC;
           HSRC = TFSRC;
           HSINVC = TFINV;
           HSSRCF = TFFSRC;

           if Line_Date > 0;
             Wk_Date10 = %Date(Line_Date:*CYMD);
             DSDPUR = %Dec(Wk_Date10:*MDY);
           else;
             DSDPUR = 0;
           endif;

           DSSPUR = TFSPUR;
           DSTKNO = TFTKNO;


           DSFPG = TFFKEY;


           DSQTM = TFQTM;
           DSVEND = TFVEND;
           DSVNDN = TFVNDN;
           DSVNDC = TFVNDC;
           DSTAXP = TFTAXP;
           DSORIG = TFORIG;
           DSFX = TFFX;
           DSTKTRCVD = TF2A01;
           Fuel_RRN = Fuel_RRN + 1;
           WK_COUNT1 = WK_COUNT1 + 1;


           *IN31 = *OFF;
           If DSSRC = 'Y';
             *IN31 = *ON;
           EndIf;

           WRITE FULSFL;
           *IN(62) = *On;
           *IN(63) = *On;
           If FIRST = 'N';
             FUSRN = Fuel_RRN;
             FIRST = 'Y';
           EndIf;

         EndDo;
         Exec Sql Close Entr_Fuel_Cursor;
         Clear SqlCode;

         CLEAR Ctr;
         CLEAR WK_COUNT1;
         If MODE = 'CHANGE '
           And Fuel_RRN < 99;
           Dow WK_COUNT1 < REMCNT;
             Ctr = Ctr + 1;
             If @BRN(Ctr) <> 0;
               CHAIN @BRN(Ctr) BILSFL;
               If %Found();
                 DSTKTRCVD = 'Y';
                 Exsr Load_Fuel_screen;

                 Fuel_RRN = Fuel_RRN + 1;
                 EvalR DSLINE = %Editc(Fuel_RRN:'X');
                 WK_COUNT1 = WK_COUNT1 + 1;


                 *IN31 = *ON;

                 WRITE FULSFL;
                 *IN(62) = *On;
                 *IN(63) = *On;
                 If FIRST = 'N';
                   FUSRN = Fuel_RRN;
                   FIRST = 'Y';
                 EndIf;
               EndIf;
             EndIf;

             If @BRN(Ctr) = 0
               Or Not %Found();
               WK_COUNT1 = REMCNT;
             EndIf;

           EndDo;
         EndIf;

         SAVFRN = Fuel_RRN;
         *IN68 = *ON;
         If Fuel_RRN = 0;
           *IN63 = *OFF;
         EndIf;
       EndSr;

       BegSr Fill_Fuel_Pur_Panel_Add;

         CLEAR DSLINE;
         CLEAR WK_COUNT1;
         FIRST = 'N';
         *IN65 = *ON;

         CLEAR SqlCode;

         Exec Sql Set Connection :WkRemote;
         Exec Sql Open Entr_Tkt_Cursor;

         Dow SqlCode = 0 and WK_COUNT1 < 99 ;

           Clear FfuelTkt;
           Exec Sql Fetch from Entr_Tkt_Cursor
                          into :FTUDTR,:FTGALN,:FTFUSE,:FTSTST,:FTTKNO,
                               :FTICUS,:FTODIS,:FTVEND,:FTSTNA,:FTSTCT,
                               :FTPDAT,:FTSRC,:FTCORP;
           If SqlCode <> 0;
              Leave;
           EndIf;

           DSTKTRCVD = ' ';
                                         //added the remaining condition in Entr_Tkt_Cursor
           If FTPDAT < Beg_Date7 Or FTPDAT > Wk_EndDat7;
              Iter;
           EndIf;

           Fnd_Flg = 1;
           Fnd_Flg = %Lookup(FTSTST:@STM:Fnd_Flg);

           If Fnd_Flg > 0;
              DSFX = @SMC(Fnd_Flg);
              CLEAR FULOPT;
              DSSRC = 'Y';
              HSRC = 'X';

              Wk_Date10 = %Date(FTPDAT:*CYMD);
              DSDPUR = %Dec(Wk_Date10:*MDY);

              DSSPUR = FTSTST;
              DSTKNO = FTTKNO;
              DSTKTRCVD = 'Y';
              DSFPG = FTGALN;
              HSFSRC = FTSRC;
              CLEAR DSQTM;

              DSVEND = FTVEND;
              DSVNDN = FTSTNA;
              If FTVEND = *BLANKS And FTSRC <> 'F';
                 Ds_FDIST = FTPDIS;
                 DS_FLoc = FTPLOC;
                 DSVNDN = XXXXXX;
              EndIf;
              DSVNDC = FTSTCT;
              CLEAR DSTAXP;
              CLEAR DSORIG;
              Fuel_RRN = Fuel_RRN + 1;
              WK_COUNT1 = WK_COUNT1 + 1;
              EvalR DSLINE = %Editc(Fuel_RRN:'X');


              *IN31 = *ON;

              WRITE FULSFL;
              *IN(62) = *On;
              *IN(63) = *On;
              If FIRST = 'N';
                 FUSRN = Fuel_RRN;
                 FIRST = 'Y';
              EndIf;
              Iter;
           Endif;
             Fnd_Flg = 1;
         EndDo;

         Exec Sql Close Entr_Tkt_Cursor;
         Exec Sql Set Connection :WkMachine;
         Clear SqlCode;

         CLEAR Ctr;
         Dow WK_COUNT1 < 99;
           Ctr = Ctr + 1;
           If @BRN(Ctr) <> 0;
             CHAIN @BRN(Ctr) BILSFL;
             If %Found();
               Exsr Load_Fuel_screen;
             EndIf;
           EndIf;
           If @BRN(Ctr) = 0
             Or Not %Found();
             Exsr Clear_Fuel_Req_Columns;
             CLEAR HSRC;
             *IN31 = *OFF;
             *IN53 = *ON;
           EndIf;

           Fuel_RRN = Fuel_RRN + 1;
           EvalR DSLINE = %Editc(Fuel_RRN:'X');
           WK_COUNT1 = WK_COUNT1 + 1;
           DSTKTRCVD = 'N';
           If DSTKNO <> *Blanks and
             DSVNDN <> *Blanks;
             DSTKTRCVD = 'Y';
           EndIf;
           WRITE FULSFL;
           *IN(62) = *On;
           *IN(63) = *On;
           If FIRST = 'N';
             FUSRN = Fuel_RRN;
             FIRST = 'Y';
           EndIf;

         EndDo;

         SAVFRN = Fuel_RRN;
         *IN65 = *OFF;
         *IN68 = *ON;
       EndSr;

       BegSr Load_Fuel_screen;

             FULOPT = *BLANK;
             DSSRC = 'Y';
             HSRC = 'X';
             DSDPUR = DSPDAT;
             DSSPUR = DSSTST;
             DSFPG = DSGALN;
             CLEAR DSQTM;
             DSVEND = DSVEND;
             DSVNDN = DSSTNA;
             DSVNDC = DSSTCT;
             CLEAR DSTAXP;
             CLEAR DSORIG;
             Clear HSINVC;
             Clear HSSRCF;
             Fnd_Flg = 1;
             Fnd_Flg = %Lookup(DSSTST:@STM:Fnd_Flg);
             If Fnd_Flg > 0;
               DSFX = @SMC(Fnd_Flg);
               LeaveSr;
             EndIf;
             Fnd_Flg = 1;
       EndSr;
       BegSr Clear_Fuel_Req_Columns;

             CLEAR FULOPT;
             CLEAR DSSRC;
             CLEAR HSRC;
             CLEAR DSDPUR;
             CLEAR DSSPUR;
             CLEAR DSTKNO;
             CLEAR DSFPG;
             CLEAR DSQTM;
             CLEAR DSVEND;
             CLEAR DSVNDN;
             CLEAR DSVNDC;
             CLEAR DSTAXP;
             CLEAR DSORIG;
             CLEAR DSFX;

       EndSr;
       BegSr Validate_Fuel_Pur;


         If DSSPUR <> *BLANK;

           If DSLINE <> '01' And DSDPUR = 0;
              DSDPUR = PTMDY;
           Endif;

           PTMDY = DSDPUR;
           Wk_MDY = DSDPUR;
           Exsr Validate_MDY;
           If %Error();
             Wk_Fuel_Err = 1;
           Else;
             Wk_Date10 = %Date(DSDPUR:*MDY);
           Endif;
         EndIf;

         *IN35 = *OFF;


         IF DSTKTRCVD <> 'Y' And DSTKTRCVD <> 'N';
           *IN35 = *ON;
           $Msgid = '0100';
           EXSR Err_Message;
         ENDIF;

        Select;
        When FULOPT = 'I' and Fuel_RRN = 99;
               *IN56 = *ON;
               $Msgid = '0103';
               EXSR Err_Message;

        When FULOPT = 'I';
               If SEL# = 0;
                 INFRN = Fuel_RRN;
               EndIf;
               SEL# = SEL# + 1;

        When FULOPT = 'D';
               If SEL# = 0;
                 DEFRN = Fuel_RRN;
               EndIf;
               SEL# = SEL# + 1;

        When FULOPT <> ' ';
               *IN56 = *ON;
               FUSRN = Fuel_RRN;
               $Msgid = '0100';
               EXSR Err_Message;

        When MODE = 'ADD    '
             And FULOPT = *BLANK And DSDPUR = 0 And DSSPUR = *BLANKS
             And DSTKNO = *BLANKS And DSFPG = 0 And DSQTM = *BLANKS
             And DSVEND = *BLANKS And DSVNDN = *BLANKS And DSVNDC = *BLANKS;
        When FULOPT = ' ';

             EvalR DsTkNo = %Trim(DsTkNo);
             Eval DsTkNo = %xlate(' ':'0':DsTkNo);
             Wk_MDY = DSDPUR;
             Exsr Validate_MDY;
             If %Error();
               Wk_Date7 = 0;
             Else;
               Wk_Date10 = %date(DsDPur:*MDY);
               Wk_Date7 =  %DEC(Wk_Date10:*CYMD);
             Endif;

             If MODE <> 'DISPLAY';
               Exec Sql Declare Entr_Fuel_Dis Cursor for
                        Select TfTrip, TfFpg from FuelCsr_A
                        Where TFINVY = :Wk_CYY7 and TFINVM = :DSDPMM
                          and TFINVD = :DSDPDD  and TFSPUR = :DSSPUR
                          and TFTKNO = :DSTKNO
                        Order By TFINVY,TFINVM,TFINVD,TFSPUR,TFTKNO,TFFPG;

               Exec Sql Open Entr_Fuel_Dis;
               Dow SqlCode = 0;
                 Clear TfTrip;
                 Clear TfFpg;
                 Exec Sql Fetch from Entr_Fuel_Dis into :TfTrip, :TfFpg;
                 If SqlCode <> 0 or DSTKNO = '000000000' or
                    DSTKNO = '         ';
                    Leave;
                 EndIf;
                 WkFpg1 = TfFpg - 1;
                 WkFpg2 = TfFpg + 1;
                 If DshTrp <> TfTrip and DsFpg >= WkFpg1 And DsFpg <= WkFpg2;
                   FuSrn = Fuel_RRN;
                   *IN56 = *ON;
                   *IN43 = *ON;
                   *IN52 = *ON;
                   *IN74 = *ON;
                   $Msgid = '0177';
                   Exsr Err_Message;
                 EndIf;
               EndDo;
               Exec Sql Close Entr_Fuel_Dis;
               Clear SqlCode;
             EndIf;


             If DSSRC = 'Y';
                Ctr = 1;
                Ctr = %Lookup(DSSPUR:@STM:Ctr);
             EndIf;

             Select;
             When DSSRC = 'Y' and Ctr > 0;
                 DSFX = @SMC(Ctr);

             When DSSRC = 'Y';
                 Ctr = 1;
                 *IN52 = *ON;
                 $Msgid = '0125';
                 EXSR Err_Message;

             Other;


               Wk_DATE6 = DSDPUR;
               EXSR Validate_Date;


               If DSSPUR <> *BLANK;
                  Exsr Fetch_State_Num;

                  Ctr = 1;
                  Ctr = %Lookup(DSSPUR:@STM:Ctr);
               Endif;

               Select;
               When DSSPUR <> *BLANK and SqlCode <> 0;        //Fetch State Number
                 Clear WkStno;
                 *IN52 = *ON;
                 $Msgid = '0120';
                 EXSR Err_Message;
                 Clear SqlCode;

               When DSSPUR <> *BLANK and Ctr > 0;
                 WKSTNO = Wk_STNUM;
                 DSFX = @SMC(Ctr);

               When DSSPUR <> *BLANK;
                 WKSTNO = Wk_STNUM;
                 Ctr = 1;
                 *IN52 = *ON;
                 $Msgid = '0125';
                 EXSR Err_Message;

               Other;
                 FUSRN = Fuel_RRN;
                 *IN52 = *ON;
                 $Msgid = '0120';
                 EXSR Err_Message;
               EndSl;


               If DSTKNO = *BLANKS;
                 *IN74 = *ON;
                 $Msgid = '0171';
                 EXSR Err_Message;
               EndIf;

               IF DSFPG < 0;
                 *IN75 = *ON;
                 $Msgid = '0917';
                 EXSR Err_Message;
               ENDIF;


               Select;
               When DSFPG = 0;
                 *IN75 = *ON;
                 $Msgid = '0172';
                 EXSR Err_Message;

               When *IN57 = *Off
                  And DSQTM = ' '
                   Or DSQTM = 'G';
                   TOTCAP = DSTANK * DSNTNK;
                   If DSFPG > TOTCAP;
                     *IN75 = *ON;
                     $Msgid = '0173';
                     EXSR Err_Message;
                   EndIf;


               When *IN57 = *On
                  And DSQTM = ' '
                   Or DSQTM = 'L';
                     TOTCAP = DSTANK * DSNTNK;
                     Eval(H) WKTLTR = TOTCAP * 3.785;
                     If DSFPG > WKTLTR;
                       *IN75 = *ON;
                       $Msgid = '0173';
                       EXSR Err_Message;
                     ENDIF;
               EndSl;


               If DSQTM <> ' '
                 And DSQTM <> 'G'
                 And DSQTM <> 'L';
                 *IN76 = *ON;
                 $Msgid = '0174';
                 EXSR Err_Message;
               EndIf;


               Exsr Fetch_State_Num;
               Clear SqlCode;

               Select;
               When DSCORP = 'HPTL';
                 Select;
                 When DSQTM = 'L';
                   *IN76 = *ON;
                   $Msgid = '0902';
                   EXSR Err_Message;

                 When Wk_STNUM <= 51
                   And DSQTM = 'G';
                   *IN76 = *OFF;
                   $Msgid = '0903';
                   EXSR Err_Message;

                 When Wk_STNUM > 51
                   And DSQTM = ' ';
                   *IN76 = *OFF;
                   $Msgid = '0904';
                   EXSR Err_Message;

                 Other;
                   *IN76 = *OFF;
                 ENDSl;

               When DSCORP = '2000';
                 Select;
                 When DSQTM = 'G';
                   *IN76 = *ON;
                   $Msgid = '0902';
                   EXSR Err_Message;

                 When Wk_STNUM > 51
                   And DSQTM = 'L';
                   $Msgid = '0905';
                   EXSR Err_Message;

                 When Wk_STNUM <= 51
                   And DSQTM = ' ';
                   $Msgid = '0906';
                   EXSR Err_Message;
                 EndSl;

               ENDSl;

               Select;
               When DSVEND = *BLANKS
                 And DSVNDN = *BLANKS
                 And DSVNDC = *BLANKS;
                 *IN77 = *ON;
                 *IN78 = *ON;
                 $Msgid = '0175';
                 EXSR Err_Message;

               When DSVEND = *BLANKS;
                 If DSVNDN = *BLANKS
                   Or DSVNDC = *BLANKS;
                   *IN78 = *ON;
                   $Msgid = '0179';
                   EXSR Err_Message;
                 EndIf;

               Other;

                 Exec Sql Select MCFVNA, MCFVCT
                          into :DSVNDN,:DSVNDC
                          From FDTSVEND
                          Where MCFVST = :WKSTNO and MCFVNO = :DSVEND
                                and MCDEL <> 'Y'
                          Fetch first row only;

                 If SqlCode <> 0;
                   *IN77 = *ON;
                   $Msgid = '0176';
                   EXSR Err_Message;
                   Clear SqlCode;
                 EndIf;
               EndSl;


               If DSSRC = ' ';

                 Wk_MDY = DSDPUR;
                 Exsr Validate_MDY;
                 If %Error();
                   Wk_Date7 = 0;
                 Else;
                   Wk_Date10 = %Date(DsDPur:*MDY);
                   Wk_Date7 = %Dec(Wk_Date10:*CYMD);
                 Endif;

                 Exec Sql Set Connection :WkRemote;

                 Exec Sql Select (1) into :Data_Fnd from FFUELTKTV4
                          Where FTIUNI = :DSUNIT and FTCORP = :DSCORP
                            and FTPDAT between :Wk_BegDat7 and :Wk_EndDat7
                            and FTVEND = :DSVEND
                            and FTUDTR <> 'U' and FTFUSE <> 'R'
                            and FTGALN = :DSFPG
                            Fetch first row only;
                 If SqlCode = 0;
                    DSSRC = 'Y';
                    HSRC = 'X';
                 EndIf;
                 Clear SqlCode;

                 Exec Sql Set Connection :WkMachine;
               EndIf;

             EndSl;

         EndSl;

         If DSSRC = 'Y';

           Wk_MDY = DSDPUR;
           Exsr Validate_MDY;
           If %Error();
             WK_Date7P = 0;
           Else;
             Wk_Date10 = %Date(DSDPUR:*MDY);
             WK_Date7P = %Dec(Wk_Date10:*CYMD);
           Endif;

           Exec Sql Set Connection :WkRemote;

           Exec Sql
            Select(1) Into :Data_Fnd From FFUELTKT
                         Where FTCORP = :DSCorp And
                               FTTKNO = :DSTkno And
                               FTSTST = :DSSPUR And
                               FTPDAT = :WK_Date7P And
                               FTICUS = :DSACCN And
                               FTIUNI = :DSUNIT
                         Fetch first row only;

           If Sqlcode <> 0;
             *IN35 = *ON;
             $Msgid = '0478';
             EXSR Err_Message;
             Clear SqlCode;
           ENDIF;

           Exec Sql Set Connection :WkMachine;
         ENDIF;

       EndSr;
       BegSr Fetch_State_Num;

            Reset Wk_StNum;
            Exec Sql Select SstNum Into :Wk_StNum from FdtSst
                     Where SstCd = :DssPur
                     Fetch first row only;
       EndSr;
       BegSr Qty_Mer_Field;

         *IN28 = *ON;
         *IN65 = *ON;

         For Ctr = 1 To SAVFRN;
           CHAIN Ctr FULSFL;


           *IN31 = *OFF;
           If DSSRC = 'Y';
             *IN31 = *ON;
           EndIf;
           UPDATE FULSFL;
         EndFor;

       EndSr;
       BegSr Insert_Fuel_Rec;

         Exsr Clear_Multi_Occ_Ds;
         For Ctr = 1 To SAVFRN;
           CHAIN Ctr FULSFL;
           If %Found();
             %Occur(D2FUEL) = Ctr;
             DSFMDY = DSDPUR;
             DSFPGX = DSFPG0;
             DSINVC = HSINVC;
             DSSRCF = HSSRCF;
             DSFLIN = DSLINE;
             D2Fuel = Fuel;
           EndIf;
         EndFor;


         If SAVFRN = 99
           And DSDPUR <> 0;
           *IN56 = *ON;
           $Msgid = '0103';
           EXSR Err_Message;
           LeaveSr;
         EndIf;

           SAV28 = *IN28;
           ExSr Clr_Fuel_Pur_Panel;
           *IN28 = SAV28;
           *IN65 = *ON;
           CLEAR Ctr;
           CLEAR MRRN;

           Select;
           When INSEOF = 'I';
             DORRN = 1;
             FUSRN = 1;
             %Occur(D2FUEL) = 1;
             CLEAR D2FUEL;
             INSEOF = ' ';


           When SAVFRN = 99;
               DORRN = 98;
           Other;
               DORRN = SAVFRN;
           EndSl;

           CLEAR SAVFRN;
           For Ctr = 1 To DORRN;
             %Occur(D2FUEL) = Ctr;
             MRRN = MRRN + 1;
             If DORRN = 1
               And D2FUEL = *BLANKS;
               CLEAR D2DPUR;
               CLEAR D2FPG;
             ENDIF;
             Fuel = D2Fuel;
             If DSTKTRCVD = *Blanks;
               DSTKTRCVD = 'N';
             EndIf;
             CLEAR FULOPT;
             DSDPUR = D2DPUR;
             DSFPG0 = D2FPG;
             HSINVC = D2INVC;
             HSSRCF = D2SRCF;
             Fuel_RRN = MRRN;
             EvalR DSLINE = %Editc(MRRN:'X');
             SAVFRN = SAVFRN + 1;
             *IN31 = *OFF;
             If DSSRC = 'Y';
               *IN31 = *ON;
             EndIf;
             WRITE FULSFL;
             If D2FOPT = 'I';

               Clear HSINVC;
               Clear HSSRCF;
               Exsr Clear_Fuel_Req_Columns;
               DSTKTRCVD = 'N';
               MRRN = MRRN + 1;
               Fuel_RRN = MRRN;
               EvalR DSLINE = %Editc(MRRN:'X');
               SAVFRN = SAVFRN + 1;
               FUSRN = Fuel_RRN;
               *IN31 = *OFF;
               WRITE FULSFL;
             EndIf;
           EndFor;

           *IN68 = *ON;

       EndSr;


       BegSr Delete_Fuel_Rec;

         FUSRN = 1;
         EXSR Clear_Multi_Occ_Ds;
         For Ctr = 1 To SAVFRN;
           CHAIN Ctr FULSFL;
           If %Found();
             %Occur(D2FUEL) = Ctr;
             DSFMDY = DSDPUR;
             DSFPGX = DSFPG0;
             DSINVC = HSINVC;
             DSSRCF = HSSRCF;
             D2Fuel = Fuel;
           EndIf;
         EndFor;

         EXSR Clr_Fuel_Pur_Panel;
         *IN65 = *ON;
         CLEAR Ctr;
         CLEAR MRRN;
         DORRN = SAVFRN;
         CLEAR SAVFRN;
         For Ctr = 1 To DORRN;
           %Occur(D2FUEL) = Ctr;
           If D2FOPT <> 'D';
             MRRN = MRRN + 1;
             Fuel   = D2FUEL;
             HSINVC = D2INVC;
             HSSRCF = D2SRCF;
             DSDPUR = D2DPUR;
             DSFPG0 = D2FPG;
             Fuel_RRN = MRRN;
             EvalR DSLINE = %Editc(MRRN:'X');
             SAVFRN = SAVFRN + 1;

         *IN31 = *OFF;
             If DSSRC = 'Y';
               *IN31 = *ON;
             EndIf;
             WRITE FULSFL;
           EndIf;
         EndFor;

         If Fuel_RRN = 0;
           *IN63 = *OFF;
         EndIf;

         *IN68 = *ON;

       EndSr;

       BegSr Clear_Multi_Occ_Ds;

         For Ctr = 1 To SAVFRN;
           %Occur(D2FUEL) = Ctr;
           CLEAR D2FUEL;
         EndFor;

         D2TKTRCVD = ' ';
         *IN35 = *OFF;

       EndSr;

       BegSr Proc_Add_Fuel_Req;
         PANEL = 'AFR ';

         *IN(32) = *Off;
         *IN(33) = *Off;

         Exsr Clear_Add_Fuel_Req;

         CHAIN 1 FULSFL;

         Exsr Fill_Add_Fuel_Mil_req;

         Loop4 = *ON;
         DoW Loop4 = *ON;

         WRITE MSGCLR;
         WRITE MSGCTL;


         If AFuel_Req_Fnd = 'Y';


           *In36 = (Tax_Fnd = 'Y');
           *In37 = (Org_Tickt_Fnd = 'Y');
           *In38 = (Grn_Tickt_Fnd = 'Y');

           WRITE TITLE;
           WRITE CUST;
           WRITE AFRFUN;

           *In64 = *On;

           WRITE AFRCTL;
           READ DTSTENTD;
           *InLR = %Eof;

           *IN70 = *OFF;
           *IN(32) = *Off;
           *IN(33) = *Off;
           *IN(65) = *Off;
           *IN(66) = *Off;
           *IN(71) = *Off;
           *IN(72) = *Off;
           *IN(73) = *Off;



           Select;
           When *INKA = *ON;
             SPVEXIT ( CONFRM );
             If ConFrm = 'Y';
                LeaveSr;
             EndIf;
             Iter;

           When *InKb = *On;
             LeaveSr;

           When *INKD = *ON;
             EXSR Inquiry_Window;
             Iter;

           When *IN90 = *ON;
             EXSR Process_Help;
             Iter;

           EndSl;

           Exsr Reset_Err_Acc;

           Exsr Clear_Afr_Msg;

           Ad_Fuel_RRN = 1;

           READC AFRSFL;

           Dow Not %Eof();
             *IN(71) = *Off;
             *IN(72) = *Off;
             *IN(73) = *Off;

             EXSR Validate_add_fuel_req;

             UPDATE AFRSFL;

             READC AFRSFL;
           EndDo;

           If OVER > 0
             Or SUSP > 0
             Or FATAL > 0;

             Exsr SUSP_OVER_Err;

             Select;
             When *INKE = *OFF
               And *INKG = *OFF;
               Iter;

             When *INKG = *ON
                 And *IN07 = *ON;

                 Exsr DTS_Sus_Rej;
             EndSl;
           EndIf;

         EndIf;
         Loop4 = *OFF;
         Enddo;
       EndSr;

       BegSr Clear_Add_Fuel_Req;

         *IN(60) = *On;
         *IN(61) = *Off;
         *IN(62) = *Off;
         *IN(63) = *Off;
         *IN(64) = *Off;
         *IN(65) = *Off;
         *IN(66) = *Off;
         *IN(67) = *Off;
         *IN(68) = *Off;
         *IN(69) = *Off;
         WRITE AFRCTL;
         *IN(60) = *Off;
         *IN(61) = *Off;
         *IN(62) = *On;
         *IN(63) = *On;
         *IN(64) = *Off;
         *IN(65) = *Off;
         *IN(66) = *Off;
         *IN(67) = *Off;
         *IN(68) = *Off;
         *IN(69) = *Off;
         *IN(70) = *Off;

         CLEAR Ad_Fuel_RRN;
       EndSr;
       BegSr Clear_Afr_Msg;
         For Ctr = 1 To 20;
           %Occur(AFRMSG) = Ctr;
           CLEAR AFRMSG;
         EndFor;

         CLEAR AFuel_Err_Cnt;
       EndSr;
       BegSr Fill_Add_Fuel_Mil_req;

         AFuel_Req_Fnd = NO;
         Tax_Fnd = NO;
         Org_Tickt_Fnd = NO;
         Grn_Tickt_Fnd = NO;
         FIRST = 'N';

         Dow True;
           If %Found();

             getdtssrq(DSSPUR: DSCUST: DSCDST: Today_7:
             srqFound: DTSSRQds);

             *IN(36) = *Off;
             *IN(37) = *Off;
             *IN(38) = *Off;
             If SrqFound = *On;
               If MODE <> 'DISPLAY';
                 *IN65 = *ON;
               EndIf;
               If RQTAXP = 'Y';
                 AFuel_Req_Fnd = 'Y';
                 Tax_Fnd = 'Y';
                 *IN36 = *ON;
               EndIf;
               If RQORIG = 'Y';
                 AFuel_Req_Fnd = 'Y';
                 Org_Tickt_Fnd = 'Y';
                 *IN37 = *ON;
               EndIf;
               If RQGRNT = 'Y';
                 AFuel_Req_Fnd = 'Y';
                 Grn_Tickt_Fnd = 'Y';
                 *IN38 = *ON;
               EndIf;
             EndIf;

             Ad_Fuel_RRN = Ad_Fuel_RRN + 1;
             WRITE AFRSFL;
             *IN(62) = *On;
             *IN(63) = *On;
           EndIf;
           If FIRST = 'N';
             AFSRN = Ad_Fuel_RRN;
             FIRST = 'Y';
           EndIf;

           MRRN = Ad_Fuel_RRN + 1;
           CHAIN MRRN FULSFL;
           If Not %found();
              Leave;
           EndIf;


           If DSDPUR = 0;
             Leave;
           EndIf;

         EndDo;

         *IN68 = *ON;

       EndSr;
       BegSr Validate_add_fuel_req;

         *IN(36) = *Off;
         *IN(37) = *Off;
         *IN(38) = *Off;

         getdtssrq(DSSPUR: DSCUST: DSCDST: Today_7:
         srqFound: DTSSRQds);

         If SrqFound = *On;


           If RQTAXP = 'Y';
             *IN36 = *ON;
             If DSTAXP <> 'Y'
               And DSTAXP <> 'N';
               *IN71 = *ON;
               AFSRN = Ad_Fuel_RRN;
               $Msgid = '0164';
               EXSR Err_Message;
             EndIf;
           EndIf;


           If RQORIG = 'Y';
             *IN37 = *ON;
             If DSORIG <> 'Y'
               And DSORIG <> 'N';
               *IN72 = *ON;
               AFSRN = Ad_Fuel_RRN;
               $Msgid = '0165';
               EXSR Err_Message;
             EndIf;
           EndIf;


           If RQGRNT = 'Y';
             *IN38 = *ON;
             If DSORIG = *BLANKS;
               *IN73 = *ON;
               AFSRN = Ad_Fuel_RRN;
               $Msgid = '0166';
               EXSR Err_Message;
             EndIf;
           EndIf;

         EndIf;

       EndSr;
        BegSr Insert_Err_Rec;
           Exec Sql Insert Into FdtsErr
                           (OvsCrn, OvLine, OvMid,  OvSev, OvBox, OvBrn,
                            OvBch,  OvTrip, OvOdat, OvOtim)
                    Values (:OvsCrn, :OvLine, :OvMid, :OvSev, :OvBox,
                            ' ', :OvBch, :DshTrp, :Today_7, :OvOtim);

           Exec Sql Select (1) into :Data_Fnd from FDTSERHST
                    Where EhBox = :OvBox  and EhBch = :OvBch
                      and EhTrip= :DshTrp and Ehscrn= :OvsCrn
                      and EhLine= :OvLine and EhMid = :OvMid
                    Fetch first row only;
           If SqlCode <> 0;
              Exec Sql Insert into FDTSERHST
                              (EhScrn, EhLine, EhMid, EhSev, EhBox, EhBrn,
                               EhBch,  EhTrip, EhOdat,EhOtim,EhUnit,
                               EhInit, EhCust, EhBgRp,EhDist)
                       Values (:OvsCrn, :OvLine, :OvMid, :OvSev, :OvBox,
                               ' ', :OvBch, :DshTrp, :Today_7,
                               :OvOtim, :Dsunit, :Ldinit, :Dscust, :Dscbg,
                               :Dscdst);
              Clear SqlCode;
           EndIf;
        EndSr;

       BegSr Write_Err_Rec;
         Clear Susp;
         Clear FdtsErr;
         OvOtim = %Dec(%Time);
         OvBox = DsBox;
         OvBch = DsBcno;
         For WK_COUNT1 = 1 To Prompt_Err_cnt;
           %Occur(PrmMsg) = WK_COUNT1;
           OvScrn = 'PRMT';
           OvLine = PrmLin;
           OvMid = PrmMid;
           OvSev = PrmSev;

           ExSr Write_OvrSus_Err;
         EndFor;

         For WK_COUNT1 = 1 To Cust_Err_Cnt;
           %Occur(CUSMSG) = WK_COUNT1;
           If CusMid <> ' ';
              OvScrn = 'CUST';
              OvLine = CusLin;
              OvMid  = CusMid;
              OvSev  = CusSev;
              ExSr Insert_Err_Rec;
              If OvSev = 20;
                 Susp = 1;
              EndIf;
           EndIf;
         EndFor;

         For WK_COUNT1 = 1 To Mile_Err_Cnt;
           %Occur(MilMsg) = WK_COUNT1;
           OvsCrn = 'MILE';
           OvLine = MilLin;
           OvMid = MilMid;
           OvSev = MilSev;

           ExSr Write_OvrSus_Err;
         EndFor;

         For WK_COUNT1 = 1 To AState_Err_Cnt;
           %Occur(AsrMsg) = WK_COUNT1;
           OvsCrn = 'ASR ';
           OvLine = AsrLin;
           OvMid = AsrMid;
           OvSev = AsrSev;

           ExSr Write_OvrSus_Err;
         EndFor;

         For WK_COUNT1 = 1 To Fuel_Err_Cnt;
           %Occur(FULMSG) = WK_COUNT1;
           OvScrn = 'FUEL';
           OvLine = FulLin;
           OvMid = FulMid;
           OvSev = FUlSev;

           ExSr Write_OvrSus_Err;
         EndFor;
         For WK_COUNT1 = 1 To AFuel_Err_Cnt;
           %Occur(AFRMSG) = WK_COUNT1;
           OvScrn = 'AFR ';
           OvLine = AfRlin;
           OvMid = AfRmid;
           OvSev = AfrSev;

           ExSr Write_OvrSus_Err;
         EndFor;


         OVBCH = TMPBCH;

         Exsr Clear_DS;
         EXSR Clear_Cust_Msg;
         EXSR Clear_Mil_Msg;
         EXSR Clear_Asr_Mult_Ds;
         EXSR Clr_Fuel_Msg_Ds;

         IF DSCUST  = *blanks;
           SUSP += 1;
         EndIf;

       EndSr;
       BegSr Write_OvrSus_Err;

          If OvSev = 20;
            If *In07 = *Off or SusRej <> 'R';
              OvBox = TmpBox;
              OvBch = TmpBch;
            EndIf;
            Susp = 1;
          EndIf;
          ExSr Insert_Err_Rec;

       EndSr;
       BegSr Write_Dts_File;

         If *In06 = *On and Mode = 'ADD    ';
            DTSTCTNR ( DsHtrp : DsBox : DsBcno );
         EndIf;

         Exsr Write_Err_Rec;

         ExSr Load_HDr;
         ExSr Wrt_HDR;

         Reset Wk_EndDat7;
         Reset Ctr;
         Reset HKYU;

         Dow True;
           Ctr = Ctr + 1;
           ExSr Load_Mile;

           If Sfl_End = 'Y';   //  Eof
             Leave;
           EndIf;

           Exsr Insert_Mile_File;

         EndDo;

         Select;
         When SUSP > 0 or TMERR <> ' ';
              OPDis = 0;
         When TMMOM = 'U';
              OPDis = Tot_Miles * 1.609;
         Other;
              OPDis = Tot_Miles / 1.609;
         Endsl;

         If WTAXL_Flg = '0';
           Wk_DSRCWT = 0;
           Wk_DSAXLE = 0;
         Endif;

         Exec Sql Update HdrCsr_A
                     set TMBSPD=:HBSPD, TMTPML=:Tot_Miles, TMODIS = :OPDis,
                         TMRCWT=:Wk_DSRCWT, TMAXLS = :Wk_DSAXLE
                   Where TMHTRP = :DSHTRP;

         Reset Ctr;

         Dow True;
           Ctr = Ctr + 1;
           ExSr Load_Fuel;
           If Hsrc = 'X';
             ExSr Mov_Hidden_col;
             ExSr Update_FFUELTKT;
           EndIf;

           If Sfl_End = 'Y';   //  Eof
             Leave;
           EndIf;

           If SUSREJ <> 'R' or (DSSRC <> 'Y' and DSTKNO <> '000000000');
             Exsr Insert_Fuel_File;
           Endif;
         EndDo;

         ExSr Upd_Dts_Hdr;


         ExSr Mod_VEHMT;

         Select;
         When Susp = 0;
             BTVDTR = BTVDTR + 1;
             BTKDTR = BTKDTR + 1;
             BTMDTR = BTMDTR - 1;
         When SusRej = 'R' And *IN07 = *On ;
             BTDDTR = BTDDTR + 1;
             BTKDTR = BTKDTR + 1;
             BTMDTR = BTMDTR - 1;
         Other;
             BTMDTR = BTMDTR - 1;
             BTSDTR = BTSDTR + 1;
             BTKDTR = BTKDTR + 1;
         EndSl;

         DSTCNT = BTVDTR + BTSDTR;
         DSLNTR = BTMDTR;


         If BTDCOM <> *ZEROS
           Or BTDCOM = 0
           And BTCCOM <> 'ADD';
           BTDCOM = *ZEROS;
           BTCCOM = ' ';
         EndIf;


         Exsr Verify_Trip_cnt;

         #Time = %Dec(%Time());

         If BTDSTR = 0;
           BTDSTR = Today_7;
           BTTSTR = #TIME;
           BTCLKK = LDINIT;
         EndIf;

         BTDFIN = Today_7;
         BTTFIN = #TIME;

         Exsr Populate_Batch_Cols;

         BTLCIN = LDINIT;
         BTLCDT = Today_7;
         BTLCTM = #TIME;

         Exec Sql Update FDTSBAT
                  set BTVDTR=:BTVDTR, BTKDTR=:BTKDTR, BTMDTR=:BTMDTR,
                      BTDDTR=:BTDDTR, BTSDTR=:BTSDTR, BTDCOM=:BTDCOM,
                      BTCCOM=:BTCCOM, BTDSTR=:BTDSTR, BTTSTR=:BTTSTR,
                      BTCLKK=:BTCLKK, BTDFIN=:BTDFIN, BTTFIN=:BTTFIN,
                      BTSTS =:BTSTS,  BTDCLO=:BTDCLO, BTTCLO=:BTTCLO,
                      BTLCIN=:BTLCIN, BTLCDT=:BTLCDT, BTLCTM=:BTLCTM
                Where BtBox = :DsBox and BtBat = :DsBcno;

         Exsr Batch_Sts_Desc;

         DSBOX = BTBOX;

         EXSR Update_Box_File;

       EndSr;
       BegSr Insert_Mile_File;

           Wk_MDY = DSTMDY;
           Exsr Validate_MDY;
           If %Error();
             Line_Date = 0;
           else;
             Wk_Date10 = %Date(DSTMDY:*MDY);
             Line_Date = %Dec(Wk_Date10:*CYMD);
           Endif;

           WKFCtr = %LOOKUP(TMSE:@ST);
           Select;
           When WKFCtr = 0;
             TMRCWT = 0;
             TMAXLE = 0;
           When AState_Req_Fnd = 'N';
             TMRCWT = @STWGT(WKFCtr);
             TMAXLE = @STAXL(WKFCtr);
           Other;
             TMRCWT = DSRCWT;
             TMAXLE = DSAXLE;
           EndSl;

           Exec Sql Insert Into MileCsr_A
                (TMSTRP, TMLINE, TMMAFY, TMMAFM,
                 TMTPMM, TMTPDD, TMTPYY, TMBODM, TMEODM,
                 TMCODE, TMSE, TMTMIS, TMTOLL, TMRTES, TMTTM,
                 TMLE, TMMERR, TMMEX, TM1A01, TMAXLE, TMRCWT,
                 TMNHML, TMFUSE, TMRDTY, TM2A01,
                 TM3A01, TM4N70)
                Values
                (:TMSTRP, :TMLINE, :TMMAFY, :TMMAFM,
                 :LinDatMM,:LinDatDD,:LinDatYY,:TMBODM, :TMEODM,
                 :TMCODE, :TMSE, :TMTMIS, :TMTOLL, :TMRTES, :TMTTM,
                 :TMLE, :TMMERR, :TMMEX, :TM1A01, :TMAXLE, :TMRCWT,
                 :TMNHML, :TMFUSE, :TMRDTY, :TM2A01,
                 :TM3A01, :TM4N70);
           Clear Line_Date;
       EndSr;
       BegSr Insert_Fuel_File;
           Exec Sql Insert Into FuelCsr_A
                  (TFTRIP, TFLINE, TFAFY, TFAFM,  TFSPUR, TFINV,
                   TFINVM, TFINVD, TFINVY, TFFPG, TFVEND, TFVNDN, TFVNDC,
                   TFFX,   TFORIG, TFTKNO, TFFKEY, TFSRC, TFFSRC, TF2A01,
                   TF4N70)
           Values (:TmHTrp, :TfLine, :TfafY, :TfafM, :TfsPur,
                 :TfInv,  :LinDatMM, :LinDatDD, :LinDatYY, :TFFPG, :TFVEND,
                 :TFVNDN, :TFVNDC,:TFFX, :TFORIG, :TFTKNO, :TffKey, :TFSRC,
                 :TFFSRC, :TF2A01,:TF4N70);
       EndSr;
       BegSr Update_Box_File;
         Exec Sql Update FDTSBOX
                     set BXCBAT = BXCBAT + :@CBAT,BXLCIN = :LDINIT,
                         BXLCDT = :Today_7, BXLCTM = :#TIME,
                         (BXSTS,BXDCLO,BXTCLO,BXCLKC)=
                   (Case When BXMBAT = BXCBAT+:@CBAT Then 'C' Else 'O' End,
                    Case When BXMBAT = BXCBAT+:@CBAT Then :Today_7 Else 0 End,
                    Case When BXMBAT = BXCBAT+:@CBAT Then :#TIME Else 0 End,
                    Case When BXMBAT = BXCBAT+:@CBAT Then :LDINIT Else ' ' End),
                         BXDCOM = 0, BXCCOM = ' '
                   Where BxBox = :Dsbox;
         Clear SqlCode;

       EndSr;

        BegSr Rmv_Prv_FuelTkt;


            Exec Sql Set Connection :WkRemote;

            Exec Sql Close Entr_Fueltkt_Cursor;

            Exec Sql Open Entr_Fueltkt_Cursor;

            WKFCtr = 1;
            Dou SqlCode <> 0;
              Exec Sql Fetch Entr_Fueltkt_Cursor into :FTTKNO,:FTSRC;
              If SqlCode = 0;
                Fuel_Ds(WKFCtr).Fuel_tkt = FTTKNO;
                Fuel_Ds(WKFCtr).Fuel_src = FTSRC;
                WKFCtr = WKFCtr + 1;
              Endif;
            Enddo;

            Exec Sql Update FfuelTkt a
                        Set FtuDtr = ' ',
                            FtTrpA = ' ',
                            FtTrpD = '0001-01-01-00.00.00.000000'
                      Where FtTrpA = :DSHTRP and FtuDtr in ('C','U');
            Clear SqlCode;

            Exec Sql Set Connection :WkMachine;

            Exec Sql Update FMTTKTF
                        set FTUDTR = ' ', FTTRPA = ' ',
                            FTTRPD = '0001-01-01-00.00.00.000000'
                      Where FTTRPA = :DSHTRP and FtuDtr in ('C','U');

        EndSr;
        BegSr Update_Mile_File;

          Exec Sql Declare Entr_Mile1_Cursor Cursor for
                   Select TMLINE
                     From MileCsr_A
                     Where TMSTRP = :DshTrp
                  Order by TMLINE;
          Exec Sql Open Entr_Mile1_Cursor;

          RecFnd = 'N';
          If SqlCode = 0;
            RecFnd = 'Y';
          Endif;

          DoW RecFnd = 'Y';
            Clear TFLIN;
            Exec Sql Fetch Entr_Mile1_Cursor
                      into :TFLIN;
            Select;
            When SqlCode = 0;
              Ctr = Ctr + 1;
              ExSr Load_Mile;

              If Sfl_End = 'N';

               WKFCtr = %LOOKUP(TMSE:@ST);
               Select;
               When WKFCtr = 0;
                 TMRCWT = 0;
                 TMAXLE = 0;
               When AState_Req_Fnd = 'Y';
                 TMRCWT = DSRCWT;
                 TMAXLE = DSAXLE;
               When WKFCtr > 0;
                 TMRCWT = @STWGT(WKFCtr);
                 TMAXLE = @STAXL(WKFCtr);
               Other;
                 TMRCWT = 0;
                 TMAXLE = 0;
               EndSl;

                 Exec Sql Update MileCsr_A
                             Set TMLINE = :TMLINE, TmmAfm = :TmmAfm,
                                 TmmAfY = :TmmAfY, TMBODM = :TMBODM,
                                 TMEODM = :TMEODM, TMCODE = :TMCODE,
                                 TMSE   = :TMSE,   TMTMIS = :TMTMIS,
                                 TMTOLL = :TMTOLL, TMRTES = :TMRTES,
                                 TMTTM  = :TMTTM,  TMLE   = :TMLE,
                                 TMMERR = :TMMERR, TM1A01 = :TM1A01,
                                 TMAXLE = :TMAXLE, TMRCWT = :TMRCWT,
                                 TMTPMM = :LinDatMM, TMTPDD = :LinDatDD,
                                 TMTPYY = :LinDatYY
                           Where TMSTRP = :DshTrp and TMLINE = :TFLIN;
                 Iter;
              Endif;
              Exec Sql Delete From MileCsr_A
                       Where TMSTRP = :DshTrp and TMLINE = :TFLIN;

            When SqlCode <> 0;
              RecFnd = 'N';
              Dow True And Mile_RRN > 0;
                Ctr = Ctr + 1;
                ExSr Load_Mile;
                If Sfl_End = 'Y';
                  Leave;
                EndIf;
                Exsr Insert_Mile_File;

              EndDo;

            EndSl;
          EndDo;

          Exec Sql Close Entr_Mile1_Cursor;
          Clear SqlCode;
        EndSr;
        BegSr Update_Fuel_File;

          Exec Sql Declare Entr_Fuel1_Cursor Cursor for
                   Select TFLINE
                     From FuelCsr_A
                     Where TFTRIP = :DSHTRP
                     Order by TFAFY,TFAFM,TFLINE;

          Exec Sql Open Entr_Fuel1_Cursor;

          RecFnd = 'N';
          If SqlCode = 0;
            RecFnd = 'Y';
          Endif;

          Rls_Cnt = 0;
          DoW RecFnd = 'Y';
            Clear TFLIN;
            Clear TFINV;
            Exec Sql Fetch Entr_Fuel1_Cursor
                      into :TFLIN;
            Select;
            When SqlCode = 0;
              Ctr = Ctr + 1;
              ExSr Load_Fuel;

              If Sfl_End = 'N';

                 Exsr Mov_Hidden_col;
                 If Rls_Cnt > 0;
                    EvalR TfLine = %Editc((%Dec(TfLine:2:0) - Rls_Cnt):'X');
                 Endif;
                 ExSr Update_FFUELTKT;
                 If Rls_Flg = 'Y';
                   Exsr Rel_Fuel;
                 Endif;

               If Sfl_End = 'N';
                 Exec Sql Update FuelCsr_A
                        Set TfLine = :TfLine, TfAfM = :TfAfM, TfAfY = :TfAfY,
                            TfsPur = :TfsPur, TfFx = :TfFx, TFORIG = :TFORIG,
                            TfQtm  = :TfQtm,  TffPg =:TffPg,  TffKey = :TffKey,
                            TfVend = :TfVend, TfvNdn=:TfvNdn, TfvNdc = :TfvNdc,
                            Tf2A01 = :TF2A01, TfErr = :TfErr, Tf1A01 = :Tf1A01,
                            TfTaxp = :TfTaxp, TftKno= :TftKno,TfSrc  = :TfSrc,
                            TFINVM = :LinDatMM, TFINVD = :LinDatDD,
                            TFINVY = :LinDatYY, TFINV = :TFINV,TFFSRC = :TFFSRC
                        Where TFTRIP = :DSHTRP and TFLINE = :TFLIN;

                 If TFFSRC = 'M' and SusRej <> 'R';
                    Exec Sql Update FMTTKTF
                                set FtuDtr = 'U', FtTrpA = :DSHTRP,
                                    FtTrpD = Current TIMESTAMP
                              Where Char(FTSEQ) = :TFINV;
                 Endif;
                 Iter;
               Endif;
              Endif;
                  Exec Sql Delete From FuelCsr_A
                       Where TFTRIP = :DSHTRP and TFLINE = :TFLIN;

            When SqlCode = 100;
              RecFnd = 'N';
              Dow True And Fuel_RRN > 0;
                Ctr = Ctr + 1;
                ExSr Load_Fuel;
                If Sfl_End = 'Y';
                  Leave;
                EndIf;

                Exsr Mov_Hidden_col;
                If Rls_Cnt > 0;
                   EvalR TfLine = %Editc((%Dec(TfLine:2:0) - Rls_Cnt):'X');
                Endif;
                ExSr Update_FFUELTKT;
                If SUSREJ <> 'R' or DSSRC <> 'Y';
                  Exsr Insert_Fuel_File;
                Endif;

              EndDo;

            EndSl;
          EndDo;
          Exec Sql Close Entr_Fuel1_Cursor;
          Clear SqlCode;
        EndSr;
       BegSr Rel_Fuel;

          DoU Rls_Flg = 'N' or Sfl_End <> 'N';

            Ctr = Ctr + 1;
            ExSr Load_Fuel;

            If Sfl_End = 'N';

              Exsr Mov_Hidden_col;
              If Rls_Cnt > 0;
                 EvalR TfLine = %Editc((%Dec(TfLine:2:0) - Rls_Cnt):'X');
              Endif;
              ExSr Update_FFUELTKT;

            Endif;

          EndDo;

       Endsr;
       BegSr Mov_Hidden_col;

         HsCorp = DsCorp;
         HsTkNo = DsTkNo;
         HsVend = DsVend;

       Endsr;
       BegSr Update_Dts_File;

         Exec Sql Delete from FdtsErr
                   Where OVBOX = :TMPBOX and OVBCH = :TMPBCH
                     and OVTRIP = :DSHTRP;

         Exec sql Select Tmerr,Tmerr,TmeDat,TM1N70,TM2N70,TM3N70
                    Into :Tmerr,:Perr,:Tmedat,:TM1N70,:TM2N70,:TM3N70
                    from HdrCsr_A
                   Where TmhTrp = :DshTrp
                   Fetch first row only;

         If SqlCode = 0;
            ExSr Write_Err_Rec;
            ExSr Load_HDR;

            If Lwieght_Susp = '1';
               Susp += 1;
            Endif;

            Select;
            When Susp = 0 and PErr <> ' ';
              TMERR = ' ';
            When SusRej = 'R' and *In07 = *On  and PErr <> 'R';
              TMERR = 'R';
              TM3N70 = Today_7;
            When Susp <> 0 and *In07 = *On and PErr <> 'Y' and SusRej <> 'R';
              TMERR = 'Y';
              TM1N70 = Today_7;
              Eval Tm7A08 = %Trim(TmpBox);
              TMBCNO = TMPBCH;
            EndSl;

            TMLCIN = LDINIT;
            TMLCDT = Today_7;
            TMSEQ# = DSSEQ;
            TMRCWT = Wk_DSRCWT;
            TMAXLS = Wk_DSAXLE;

            If WTAXL_Flg = '0';
              TMRCWT = 0;
              TMAXLS = 0;
            Endif;

            TMTPML = DSENDS - TMBSPD;
            If TMTPML < 0;
              TMTPML = 0;
            Endif;

            Select;
            When SUSP > 0 or TMERR <> ' ';
                 TMODIS = 0;
            When TMMOM = 'U';
                 TMODIS = TMTPML * 1.609;
            Other;
                 TMODIS = TMTPML / 1.609;
            Endsl;

            Select;
            When TMERR = 'Y' and (PERR = ' ' or PERR = 'R');
                 TM1N70 = Today_7;
            When TMERR = ' ' and (PERR = 'Y' or PERR = 'R');
                 TM2N70 = Today_7;
            When TMERR = 'R' and (PERR = ' ' or PERR = 'Y');
                 TM3N70 = Today_7;
            Endsl;

            Exec Sql Update HdrCsr_A
                     Set TmaFy  = :TmaFy, TmaFm = :TmaFm, TmbCno = :TmbCno,
                         Tm7A08 = :Tm7A08,TmCust= :TmCust,TmCbg = :TmCbg,
                         TmcDst = :TmcDst,TmObr = :TmObr, TmtKtr = :TmtKtr,
                         TmbDat = :TmbDat, TMDPC = :TMDPC, TMDPS = :TMDPS,
                         TMDSC  = :TmDSC,TMDSS = :TmDSS, TMBSPD = :TMBSPD,
                         TMESPD = :TMESPD, TMTPML = :TMTPML, TMCTRC = :TMCTRC,
                         TMMOM  = :TMMOM, TMODIS = :TMODIS, TMLDF = :TMLDF,
                         TMGD   = :TMGD, TMKADM = :TMKADM, TMLCDT = :TMLCDT,
                         TMLCIN = :TMLCIN, TMEDAT = :Wk_EndDat7, TMERR = :Tmerr,
                         TMUNIT = :TMUNIT, TMCORP = :TMCORP, TMRCWT=:TMRCWT,
                         TMAXLS = :TMAXLS, TM1N70 = :TM1N70, TM2N70 = :TM2N70,
                         TM3N70 = :TM3N70
                   Where TmhTrp = :DshTrp;
         EndIf;

         Exsr Get_RANumber;
         Exsr Val_DatTime;
         Exsr Get_UntClas;

         If TMCUST = ' ';
           $BegOdo = 0;
           $EndOdo = 0;
         Endif;

         Exec Sql Update FDTSCSTSF
                     set TMRCNO = :TMRCNO, TMINVN = :TMINVN,
                         TMUNCL = :TMUNCL, TMVUSE = :VFUSE,
                         TMRANUM = :TMRANUM, TMBGOD = :$BegOdo,
                         TMENOD = :$EndOdo, TMDTOT = :TMDTOT,
                         TMTMOT = :TMTMOT, TMDTIN = :TMDTIN,
                         TMTMIN = :TMTMIN, TMUPBY = :LDNAME,
                         TMUPDT = CURRENT TIMESTAMP
                   Where TMHTRP = :DSHTRP;

         Clear SqlCode;


         Exsr Mov_Hidden_col;
         ExSr Rmv_Prv_FuelTkt;

         Reset Ctr;
         ExSr Update_Fuel_File;

         Reset Wk_EndDat7;
         Reset Ctr;
         ExSr Update_Mile_File;

         Reset FDtsBat;
         Exec Sql Select BTSDTR,BTVDTR,BTDDTR,BTDCOM,BTCCOM,BTODTR,BTKDTR,
                         BTDSTR,BTTSTR,BTCLKK,BTDFIN,BTTFIN,BTSTS ,BTDCLO,
                         BTTCLO
                  Into  :BTSDTR,:BTVDTR,:BTDDTR,:BTDCOM,:BTCCOM,:BTODTR,:BTKDTR,
                        :BTDSTR,:BTTSTR,:BTCLKK,:BTDFIN,:BTTFIN,:BTSTS ,:BTDCLO,
                        :BTTCLO
                  From   Fdtsbat
                  Where  BtBox = :TmpBox and BtBat = :TmpBch
                  Order By BtBox,BtBat
                  Fetch first row only;
         If SqlCode = 0;

             Select;
             When PERR = 'Y' and TMERR = ' ';
               BTSDTR = BTSDTR - 1;
               BTVDTR = BTVDTR + 1;
               TM2N70 = Today_7;

             When PERR = 'R' and TMERR = ' ';
               BTDDTR = BTDDTR - 1;
               BTVDTR = BTVDTR + 1;
               TM2N70 = Today_7;

             When PERR = ' ' and TMERR = 'Y';
               BTVDTR = BTVDTR - 1;
               BTSDTR = BTSDTR + 1;
               TM1N70 = Today_7;

             When PERR = ' ' and TMERR = 'R';
               BTVDTR = BTVDTR - 1;
               BTDDTR = BTDDTR + 1;
               TM3N70 = Today_7;

             When PERR = 'R' And TMERR = 'Y';
               BTSDTR = BTSDTR + 1;
               BTDDTR = BTDDTR - 1;
               TM1N70 = Today_7;

             When PERR = 'Y' And TMERR = 'R';
               BTSDTR = BTSDTR - 1;
               BTDDTR = BTDDTR + 1;
               TM3N70 = Today_7;
             EndSl;

           If BTDCOM <> *ZEROS Or BTDCOM = 0 And BTCCOM <> 'ADD';
             BTDCOM = *ZEROS;
             BTCCOM = ' ';
           EndIf;


           Exsr Verify_Trip_cnt;

           #Time = %Dec(%Time());

           If BTDSTR = 0;
             BTDSTR = Today_7;
             BTTSTR = #Time;
             BTCLKK = LDINIT;
           EndIf;

           BTDFIN = Today_7;
           BTTFIN = #Time;

           Exsr Populate_Batch_Cols;

           Exec Sql Update FdtsBat Set BTSDTR=:BTSDTR, BTVDTR=:BTVDTR,
                                       BTDDTR=:BTDDTR,
                                       BTDCOM=:BTDCOM, BTCCOM=:BTCCOM,
                                       BTDSTR=:BTDSTR, BTTSTR=:BTTSTR,
                                       BTCLKK=:BTCLKK, BTDFIN=:BTDFIN,
                                       BTTFIN=:BTTFIN, BTSTS =:BTSTS ,
                                       BTDCLO=:BTDCLO, BTTCLO=:BTTCLO,
                                       BTLCIN=:LDINIT, BTLCDT=:Today_7,
                                       BTLCTM=:#Time
                                 Where BtBox = :TmpBox and BtBat = :TmpBch;

           Exsr Batch_Sts_Desc;

           DSBOX = TMPBOX;
           EXSR Update_Box_File;
         EndIf;
         Clear SqlCode;

         Select;
         When PERR = 'R' And TMERR = 'Y';
           PRCFG = 'D';
           ExSr Rejected_Trips;
         When TMERR = 'R';
           PRCFG = 'U';
           ExSr Rejected_Trips;
         EndSl;

         ExSr Mod_VEHMT;
         Clear SqlCode;
       EndSr;
       BegSr Rejected_Trips;

         Select;
         When PrcFg = 'A' Or PrcFg = 'U';
           Exec Sql Update FDTSREJ
                       Set RJBOX=:TM7A08,RJBAT=:TMBCNO, RJTRIP=:TMHTRP,
                           RJTSEQ=0, RJPYY=:TMPYY, RJPMM=:TMPMM,
                           RJPDD=:TMPDD, RJMESG=' ' , RJMSID=:$MID,
                           RJSUSD=:TM1N70,RJCORD=:TM2N70,RJREJD=:TM3N70,
                           RJLCDT = :Today_7, RJLCIN=:TMLCIN,
                           (RJCYMD,RJCUPD) =
                           (Case When (RJCYMD >= 0 And
                                       RJCUPD <> 'ADD') Then 0 End,
                            Case When (RJCYMD > 0 Or RJCYMD = 0 And
                                       RJCUPD <> 'ADD') Then 'UPD' End)
                    Where  RjBox = :DsBox and RjBat = :DsBcno and
                           RjTrip =:DshTrp;
            If SqlCode = 100;
              Exec Sql Insert Into FDTSREJ
                              (RjBox, RjBat, RjTrip, RjtSeq, RjpYY, RjpMM,
                               RjpDD, RjResn, RjMesg, RjMsid, RjSusd,
                               RjCord, RjRejd, RjLcin, RjLcdt, RjCymd,
                               RjCtim, RjCupd, Rj1n70, Rj2a01, Rj3a08)
                       Values (:TM7A08, :TMBCNO, :TMHTRP, 0, :TMPYY,
                               :TMPMM,  :TMPDD,  0, ' ', :$MID,
                               :TM1N70, :TM2N70, :TM3N70, :TMCLK, :Today_7,
                               0, 0, 'ADD', 0,' ',0);
             EndIf;
         Other;
           Exec Sql Delete from FDTSREJ
                    Where  RjBox = :DsBox and RjBat = :DsBcno and
                           RjTrip = :DshTrp;
         EndSl;
         Clear SqlCode;
       EndSr;

       BegSr Batch_List;

         If DshTrp = *Blanks;

          Exsr Clear_Sf_List;

          Exsr Load_Sf_Batch_List;

          Loop4 = *ON;
          DoW Loop4 = *ON;

           *IN01 = '1';
           If Bch_Flg1 = 'Y';
             *IN01 = '0';
           Endif;

           WRITE MsgClr;
           WRITE MsgCtl;

           If List_RRN = 0;
             Write LstEof;
           EndIf;
           Write LstFun;

           *In64 = *On;
           Write LstCtl;
           Read DTSTENTD;
           *In67 = %Eof;

           *In70 = *Off;
           *In(65) = *Off;
           *In(66) = *Off;
           *In83 = *Off;

           Select;
           When *Inka = *On;
             SPVEXIT ( CONFRM );
             Select;
             When CONFRM = 'Y' and *INKA = *OFF;
                EXSR Clear_Prompt;
                LeaveSr;
             When CONFRM = 'Y';
                LeaveSr;
             EndSl;
                Iter;
           When *Inkd = *On;
             Exsr Inquiry_Window;
             Iter;
           When *Inki = *On and Mode <> 'ADD    ' and Bch_Flg1 = 'Y';
               Exsr Chg_Mode;
               If Mode = 'ADD    ';
                 EXSR Clear_Prompt;
                 LeaveSr;
               Endif;
               Iter;
           When *Inki = *On and *INKA = *OFF and Bch_Flg1 = 'Y';
               EXSR Clear_Prompt;
               LeaveSr;
           When *Inki = *On and Bch_Flg1 = 'Y';
               LeaveSr;

           When *Inks = *On;
             *In18 = not *In18;
             Exsr Clear_Sf_List;
             Exsr Load_Sf_Batch_List;
             Iter;

           When *In90 = *On;
             Exsr Process_Help;
             Iter;
           EndSl;

           If List_RRN > 0;


             LSEL = ' ';
             SAV68 = *IN68;

             Exsr Clear_Dlt_Sf;
             *In(68) = *Off;
             Clear DEL_RRN;

             READC LSTSFL;
             WKFLG = 'N';
             LstFlg = 'N';
             DspFlg = 'Y';
             Dow Not %Eof();
               *IN83 = *OFF;

              Select;
              When LstOpt <> ' ' And LstOpt <> '5';
                 If #PsFsi = '01218';
                   *IN83 = *ON;

                   If WkFlg <> 'Y';
                     LssRn = List_RRN;
                     $Msgid = '0014';
                     Exsr Err_Message;
                     WkFlg = 'Y';
                   EndIf;
                 EndIf;
                 *In65 = *On;
                 LstFlg = 'Y';

              When LstOpt <> ' ';
                 *In65 = *On;
                 LstFlg = 'Y';

              EndSl;

               Update LSTSFL;
               Readc LSTSFL;
             EndDo;

             *In83 = *Off;
             If WKFLG = 'Y';
                Iter;
             EndIf;

             List_RRN = 1;
             Readc LSTSFL;

             Dow Not %Eof();
               *IN83 = *OFF;
               Exit_Match_Fl = '0';
               Batch_lst = *On;

               If LstOpt <> ' ';

                 LSEL = 'Y';

                 Select;
                 When LSTOPT = '5' Or
                     (LSTOPT = '2' And *IN02 = *ON And BTSTS <> 'S' And
                     (WPRMO = 0 Or (WPRMO >= Pr_MM And WPRYR >= Pr_CYY) Or
                     (WPRMO < Pr_MM And WPRYR > Pr_CYY)));

                   Select;
                   When LSTOPT = '2' And MODE <> 'CHANGE ';
                     *INKJ = *ON;

                   When LSTOPT = '5' And MODE <> 'DISPLAY';
                     *INKH = *ON;
                   EndSl;

                   EXSR Chg_Mode;

                   DSCORP = WCORP;
                   DSHTRP = WHTRP;
                   DSUNIT = WUNIT;
                   HUNIT = WUNIT;
                   DSBDAT = WBDAT;

                   Wk_MDY = DsbDat;
                   Exsr Validate_MDY;
                   If %Error();
                     Wk_Date10 = %Date('0001-01-01');
                     Beg_Date7 = 0;
                   Else;
                     Wk_Date10 = %Date(DsbDat:*mdy);
                     Beg_Date7 = %Dec(Wk_Date10:*cymd);
                   Endif;

                   HBDAT = WBDAT;


                   Reset Wk_Hdr;
                   Exec Sql Select TMCUST, TMCDST, TMCBG, TMSEQ#, TMDPC,
                                   TMDPS, TMDSC, TMDSS, TMERR, TMPMM, TMPDD,
                                   TMPYY
                              into :TMCUST, :TMCDST, :TMCBG, :DSSEQ, :TMDPC,
                                   :TMDPS, :TMDSC, :TMDSS, :TMERR, :Wk_MM7,
                                   :Wk_DD7, :Wk_CYY7
                              from HdrCsr_A
                             Where TM7A08 = :DSBOX8 And TMBCNO = :DSBCNO
                               and TMHTRP = :DSHTRP
                             Fetch first row only;

                   If Wk_Date7 > 0;
                     Wk_Date10 = %Date(Wk_Date7:*CYMD);
                     DKeyDt = %Dec(Wk_Date10:*MDY);
                   Else;
                     Wk_Date10 = %Date('0001-01-01');
                     DKeyDt = 0;
                   Endif;

                   Select;
                   When TMERR = 'Y';
                       STATUS = 'SUSPENDED';
                   When TMERR = 'R';
                       CLEAR STATUS;
                       STATUS = 'REJECTED';
                   Other;
                       STATUS = 'VALID   ';
                   EndSl;


                   AtUnit = DsUnit;
                   AtCorp = DsCorp;
                   Exsr Fetch_Vehicle_Detail;

                   If SqlCode = 0;
                      ExSr Vecap_Data;
                   EndIf;
                   Clear SqlCode;

                   No_Trp# = '1';
                   Exsr Dts_Process;
                   Select;
                   When Batch_lst = *On;
                     Batch_lst = *Off;
                   When Batch_lst = *Off;
                     LeaveSr;
                   Endsl;
                   Exit_Match_Fl = *INKA;
                   Exit_Match_Fl = *INKB;


                   *IN63 = *ON;

                 When (WPRMO < Pr_MM And WPRMO <> 0
                       And WPRYR <= Pr_CYY)
                     Or (WPRYR < Pr_CYY And WPRYR <> 0)
                     Or (BTSTS = 'S');
                     *IN83 = *ON;
                     $Msgid = '0193';
                     EXSR Err_Message;

                 When *IN03 = *ON And LSTOPT = '4';
                     DSCORP = WCORP;
                     DSHTRP = WHTRP;
                     DSCUST = WCUST;
                     DSCBG = WCBG;
                     DSCDST = WCDST;
                     DSUNIT = WUNIT;
                     DSBDAT = WBDAT;

                     Wk_MDY = DsbDat;
                     Exsr Validate_MDY;
                     If %Error();
                       Wk_Date10 = %Date('0001-01-01');
                       Beg_Date7 = 0;
                     Else;
                       Wk_Date10 = %Date(DsbDat:*mdy);
                       Beg_Date7 = %Dec(Wk_Date10:*cymd);
                     Endif;

                     DSDPC = WDPC;
                     DSDPS = WDPS;
                     DSDSC = WDSC;
                     DSDSS = WDSS;
                     DSERR = WERR;
                     DEL_RRN = DEL_RRN + 1;
                     WRITE DELSFL;

                 When WERR = 'SUSPE' And WCUST = *BLANKS
                      And LSTOPT = '3' and Bch_Flg1 <> 'Y';
                     TRFCNT = TRFCNT + 1;
                     WK_COUNT2 = WK_COUNT2 + 1;
                     CSS(WK_COUNT2) = WHTRP;

                 When LSTOPT = '3' and Bch_Flg1 <> 'Y';
                     *IN83 = *ON;
                     $Msgid = '0461';
                     EXSR Err_Message;
                 EndSl;

                 If *IN83 <> *ON;
                   CLEAR LSTOPT;
                 ENDIF;
               EndIf;

               UPDATE LSTSFL;

               If Exit_Match_Fl = '0' or Not %Eof();
                 READC LSTSFL;
               EndIf;

             EndDo;

             If *INKA = *OFF And DEL_RRN > 0;
               EXSR Delete_Prompt;

               If *INKB = *OFF;

                 Exsr Clear_Sf_List;

                 If $Msgid <> '0002';
                   $Msgid = '0018';
                 Endif;

                 EXSR Err_Message;
                 Exsr Load_Sf_Batch_List;
                 Iter;
               EndIf;
             EndIf;

             If *INKA = *OFF And TRFCNT > 0;
               CSSBOX = *BLANKS;
               CSSBAT = *BLANKS;
               DTSTTRFR ( CSSBOX : CSSBAT : TRFCNT :
               DSBOX : DSBCNO );

               If CSSBOX <> *BLANKS And CSSBAT <> *BLANKS;
                 EXSR Transfer_Batch;

                 Exsr Clear_Sf_List;


                 $Msgid = '0462';
                 EXSR Err_Message;
                 Exsr Load_Sf_Batch_List;
                 Iter;
               EndIf;
             EndIf;

             TRFCNT = 0;
             CSS = *BLANKS;
             WK_COUNT2 = 0;

             *IN68 = SAV68;

             If *INKA <> *ON
              And (*INKB = *ON or LSEL  = 'Y');
                   Loop4 = *ON;
                   Iter;
             Endif;

           EndIf;
           Loop4 = *OFF;
          EndDo;

         If *INKA = *OFF;
           EXSR Clear_Prompt;
         EndIf;

         ENDIF;

       EndSr;

       BegSr Clear_Sf_List;

         *IN(60) = *On;
         *IN(61) = *Off;
         *IN(62) = *Off;
         *IN(63) = *Off;
         *IN(64) = *Off;
         *IN(65) = *Off;
         *IN(66) = *Off;
         *IN(67) = *Off;
         *IN(68) = *Off;
         *IN(69) = *Off;
         WRITE LSTCTL;
         *IN(60) = *Off;
         *IN(61) = *Off;
         *IN(62) = *On;
         *IN(63) = *On;
         *IN(64) = *Off;
         *IN(65) = *Off;
         *IN(66) = *Off;
         *IN(67) = *Off;
         *IN(68) = *Off;
         *IN(69) = *Off;
         *IN(70) = *Off;

         Clear List_RRN;
         Clear Wk_Hdr;
       EndSr;
       BegSr Load_Sf_Batch_List;

         WK_COUNT2 = 0;
         TrfCnt = 0;
         Css = *Blanks;


         Exec Sql Select Bx01a1 Into :BcssBx from FdtsBox
                   Where BxBox = :DsBox
                   Fetch first row only;
         Clear SqlCode;

         WkBox = DsBox;
         WKBCNO = DsBcno;
         WkLntr = DslNtr;

         Clear WK_COUNT1;
         First = 'N';
         TmpBox = %trim(Dsbox8);
         Exec Sql Open Entr_Batch_Header;
         Dow SqlCode = 0 And List_RRN < 9999;

            Reset Wk_Hdr;
            Exec Sql Fetch Next from Entr_Batch_Header
                           Into :TMCORP,:TMHTRP,:TMCUST,:TMCDST,:TMUNIT,
                                :TMBDAT,:TMSEQ#,:TMAFY,:TMAFM,:TMCBG,
                                :TMDPC,:TMDPS,:TMDSC,:TMDSS,:TMPMM,
                                :TMPDD,:TMPYY,:TMERR;
            If SqlCode <> 0;
               Leave;
            EndIf;

             If *In18 = *Off Or (*In18 = *On And TmErr = 'Y')
               Or (*In18 = *On And TmErr = 'R');

               CLEAR LSTOPT;
               WPRYR = TMAFY;
               WPRMO = TMAFM;
               WCORP = TMCORP;
               WHTRP = TMHTRP;
               WCUST = TMCUST;
               WCBG = TMCBG;
               WCDST = TMCDST;
               WUNIT = TMUNIT;

               If TMBDAT > 0;
                 Wk_Date10 = %Date(TMBDAT:*CYMD);
                 WBDat = %Dec(Wk_Date10:*MDY);
               Else;
                 Wk_Date10 = %Date('0001-01-01');
                 WBDat = 0;
               Endif;

               WDPC = TMDPC;
               WDPS = TMDPS;
               WDSC = TMDSC;
               WDSS = TMDSS;

               Wk_MM7 = TMPMM;
               Wk_DD7 = TMPDD;
               Wk_CYY7 = TMPYY;

               Wk_Date10 = %Date(Wk_Date7:*CYMD);
               WKeyDt = %Dec(Wk_Date10:*MDY);

               WSEQ = TMSEQ#;

               Select;
               When TMERR = 'Y';
                 WERR = 'SUSPE';
               When TMERR = 'R';
                 WERR = 'REJEC';
               Other;
                 WERR = 'VALID';
               EndSl;

               List_RRN = List_RRN + 1;
               WK_COUNT1 = WK_COUNT1 + 1;
               WRITE LSTSFL;


               *IN62 = *ON;
               *IN63 = *ON;

               If FIRST = 'N';
                 LSSRN = List_RRN;
                 FIRST = 'Y';
               EndIf;

             ENDIF;


         EndDo;

         Exec Sql Close Entr_Batch_Header;
         Clear SqlCode;


         *IN68 = *ON;


         If List_RRN = 0;
           *IN63 = *OFF;
         EndIf;

       EndSr;


       BegSr Inquiry_Window;

         Select;
         When PANEL = 'FUEL' And
              ##COL >= 33 And ##COL <= 77 And
              ##ROW >= 12 And ##ROW <= 21;

             EXSR Dtm_Cur_Pos;
             DTSTWVNR ( $RTNCD : $$VEND : $$STAT :
             $$VNAM : $$VCTY );


             If $RTNCD <> '1'
               And MODE <> 'DISPLAY';
                 CHAIN FUSRN FULSFL;
                 If %Found();
                   DSVEND = $$VEND;
                   DSVNDN = $$VNAM;
                   DSVNDC = $$VCTY;
                   *IN53 = *On;
                   *IN65 = *ON;
                   UPDATE FULSFL;
                 ENDIF;
             ENDIF;

         When PANEL = 'FUEL';
             EXSR Dtm_Cur_Pos;
             DTSTWINR();

         Other;
             DTSTWINR();
         ENDSl;

         WKCORP = ' ';
         OUT LDA;
       EndSr;


       BegSr Dtm_Cur_Pos;


         CLEAR #CROW;
         %Subst(#CROWA:2:1) = #IROW;
         ##ROW = #CROW;


         CLEAR #CCOL;
         %Subst(#CCOLA:2:1) = #ICOL;
         ##COL = #CCOL;



         FUSRN = INFRRN;

         If ##ROW > 11
           And ##ROW < 22;
           FUSRN = ##ROW - 12;
           FUSRN = FUSRN + INFRRN;
         ENDIF;



         $RTNCD = '0';
         CLEAR $$VEND;
         CLEAR $$STAT;
         CLEAR $$VNAM;
         CLEAR $$VCTY;

       EndSr;


       BegSr Process_Help;

         SPHELP ( HELPDS );

       EndSr;

       BegSr @ConnectSr;


         wkFlag = *Blanks;
         wkOption = 'C';
         Rmt_Conn(wkOption: wkPgmNam: wkFlag: SqlCod: SqlState: SqlErm);

         If wkFlag = 'Y'
           And Mode <> 'DISPLAY';
           MiErr = 'Y';
           $Msgid = '0913';
           Exsr Err_Message;
         Endif;

       EndSr;
       BegSr @DisconnectSr;


         wkOption = 'D';
         Rmt_Conn(wkOption: wkPgmNam: wkFlag);

         If wkFlag = 'Y'
           And Mode <> 'DISPLAY';
           MiErr = 'Y';
           $Msgid = '0914';
           Exsr Err_Message;
         Endif;

       EndSr;
       BegSr *InzSr;

        If LdPgm <> #PsPgm;
           IN Lda;

           If LdPgm <> 'DTSTBCHR';
             Clear LdPgm;
             %Subst(LDPGM:1:8) = 'DTSTBCHR';
             Out Lda;

             Security();
             In Lda;
           EndIf;

           For WK_COUNT1 = 1 to %Len(LdInds);
             *In(WK_COUNT1) = %SubSt(LdInds:WK_COUNT1:1);
           EndFor;
         EndIf;

         In *Dtaara;


         Eval-Corr Hld_Lda.LDA_Data = LdA;

         Today_7 = %Dec(%Date():*CYMD);
         Today_10 = %Date();



         Wk_Date10 = Today_10;
         If %check(NUMRC:%trim(LDAUT1)) = 0 and
            %check(' ':LDAUT1) <> 0;        // Check LDAUT1 is Numeric
           Wk_Date10 = Today_10 - %Months(%dec(LDAUT1:2:0));
         Endif;
         Wk_Date10 = Wk_Date10 - %days(%subdt(Wk_Date10:*D)) + %Days(1);
         Today_2Yr = %Dec(Wk_Date10:*CYMD);

         Wk_CYY7 = Pr_CYY;
         Wk_MM7 = Pr_MM;
         Wk_DD7 = 01;
         Wk_Date10 = %Date(Wk_Date7:*CYMD) + %Months(1) - %Days(1);
         Pr_EOM = %Dec(Wk_Date10:*CYMD);


         Clear $MData;
         CLEAR $Msev;


         Loop = *On;
         Loop1 = *OfF;
         Loop2 = *Off;
         Loop3 = *Off;
         SUSREJ = ' ';
         *IN88 = '1';

         Clear DEL_RRN;

         In JobRun;

         If BchRun = 'Y';
           ExSr ChkDtaRef;

           If Rply = 'Y';
             *IN01 = '0';
             *IN02 = '0';
             *IN03 = '0';
             *IN22 = '0';
             *IN88 = '0';
           EndIf;
           Bch_Flg = 'Y';
           Bch_Flg1 = 'Y';
         EndIf;


         %Subst(HELPDS:1:8) = 'DTSTHLPR';
         %Subst(HELPDS:9:4) = '    ';


         If *IN22 = *ON;
           DSP04 = FUNA(1);
           ADD04 = FUNA(1);
           CHG04 = FUNA(1);
           DLT04 = FUNA(1);
         ENDIF;

         ADD08 = FUNB(1);
         CHG08 = FUNB(1);
         DLT08 = FUNB(1);


         If *IN01 = *ON;
           DSP09 = FUNC(1);
           CHG09 = FUNC(1);
           DLT09 = FUNC(1);
         EndIf;

         If *IN02 = *ON;
           DSP10 = FUND(1);
           ADD10 = FUNH(1);
           DLT10 = FUND(1);
         EndIf;

         If *IN03 = *ON;
           DSP11 = FUNE(1);
           ADD11 = FUNE(1);
           CHG11 = FUNE(1);
         EndIf;



         *Inki = *In01;
         *Inkh = not *In01;
         Exsr Chg_Mode;

         Clear Wk25E;
         Exec Sql Select PTDES into :Wk25E from VEHTABF
                   Where  PtCorp = '*ALL' and PTSYS = 'DTS'
                     and  PtPgm = 'DTSOBC' and PtFid = 'TPDMI'
                   Fetch first row only;
         If SqlCode = 0;
            VTDSC = %DEC(Wk25E:25:0);
         Endif;

         Exec sql select PTSDS into :Lwieght from VEHTABF
                   where PTPGM ='DTSTENTR' and PTFID ='LICWGHT'
                   Fetch first row only;

         If SqlCode <> 0 and SqlCode <> 100;
            ExSr *Pssr;
         ENDIF;
         Clear SqlCode;

       EndSr;
       BegSr GetDates;

         WK_COUNT1 = 1;
         DOU WK_COUNT1 = 99;
           Chain WK_COUNT1 milsfl;
           If Not %found(DTSTENTD) or DSTMDY = *Zeros;
             Leave;
           EndIf;

           Wk_Date10 = %Date(DstMDY:*MDY);
           Wk_Date7 = %Dec(Wk_Date10:*CYMD);

           If Wk_Date7 < Wk_BegDat7P Or Wk_BegDat7P = 0;
             Wk_BegDat7P = Wk_Date7;
           EndIf;

           Wk_EndDat7P = Wk_Date7;
           WK_COUNT1 = WK_COUNT1 + 1;
         EndDo;

         Chain Ctr Milsfl;
       EndSr;
       BegSr Err_Message;


         If *IN70 = *OFF;
           WRITE MSGCTL;
           CLEAR MSG#;
           %Subst(PGMQ:1:1) = '*';
         EndIf;


         $MFile6 = 'DTSMSG';
         If LDAUT2 = 'SP';
           $MFILE8 = 'DTSMSGSP';
         ENDIF;

         $MLIB = '*LIBL';
         SPRTVMSV ( $MID : $MFILE : $MLIB : $MKEY
         : $MDATA : $MSEV );


         Select;
         When $MSEV = 10;
           OVER = OVER + 1;
         When $MSEV = 20;
           SUSP = SUSP + 1;
         When $MSEV = 30;
           FATAL = FATAL + 1;
         When $MSEV = 5;
           WARN = WARN + 1;
         EndSl;

         If OVER <> 0 Or SUSP <> 0 Or FATAL <> 0;
           WK_COUNT1 = 0;
         EndIf;

         If *INKE = *ON And MSG# < 20
           Or *INKG = *ON  And MSG# < 20;

           Select;
           When PANEL = 'PRMT';
             %Occur(PRMMSG) = MSG# + 1;
             Prompt_Err_cnt = Prompt_Err_cnt + 1;
             CLEAR PRMLIN;
             PRMMID = $MID;
             PRMSEV = $MSEV;

           When PANEL = 'CUST';
             %Occur(CUSMSG) = MSG# + 1;
             Cust_Err_Cnt = Cust_Err_Cnt + 1;
             CLEAR CUSLIN;
             CUSMID = $MID;
             CUSSEV = $MSEV;

           When PANEL = 'MILE';
             %Occur(MILMSG) = MSG# + 1;
             Mile_Err_Cnt = Mile_Err_Cnt + 1;
             EvalR MILLIN = %Editc(MISRN:'X');
             MILMID = $MID;
             MILSEV = $MSEV;

           When PANEL = 'ASR ';
             %Occur(ASRMSG) = MSG# + 1;
             AState_Err_Cnt = AState_Err_Cnt + 1;
             ASRLIN = DSLINE;
             ASRMID = $MID;
             ASRSEV = $MSEV;

           When PANEL = 'FUEL';
             %Occur(FULMSG) = MSG# + 1;
             Fuel_Err_Cnt = Fuel_Err_Cnt + 1;
             FULLIN = DSLINE;
             FULMID = $MID;
             FULSEV = $MSEV;

           When PANEL = 'AFR ';
             %Occur(AFRMSG) = MSG# + 1;
             AFuel_Err_Cnt = AFuel_Err_Cnt + 1;
             AFRLIN = DSLINE;
             AFRMID = $MID;
             AFRSEV = $MSEV;
           EndSl;
         EndIf;


         If MSG# < 20;
           MSGKEY = $MKEY;
           MSG# = MSG# + 1;
           WRITE MSGSFL;
           *IN65 = *ON;
           *IN70 = *ON;
         EndIf;

       EndSr;
        BegSr Upd_Dts_Hdr;
          Exec Sql Update HdrCsr_A Set TmeDat = :Wk_EndDat7
                                 Where TMHTRP = :TMHTRP;
          TMEDAT = Wk_EndDat7;

          Clear SqlCode;
        EndSr;
       BegSr Load_Hdr;

         TMHTRP = DSHTRP;
         TMAFY = 0;
         TMAFM = 0;
         TMBCNO = DSBCNO;
         Eval Tm7A08 = %Trim(DsBox);

         TMUNIT = DSUNIT;
         TMCORP = DSCORP;
         TMCUST = DSCUST;
         TMCBG  = DSCBG;
         TMCDST = DSCDST;
         TMOBR  = DSOBR;

         TMTKTR = DSTKTR;

         TMAXLS = #DSAXLE;
         TMBDAT = Beg_Date7;
         TMDPC  = DSDPC;
         TMDPS  = DSDPS;
         TMDSC  = DSDSC;
         TMDSS  = DSDSS;

         CLEAR TMCTRC;
         CLEAR TMMOM;
         CLEAR TMODIS;
         CLEAR TMKADM;
         CLEAR TMDLOC;
         CLEAR TMOCLC;

         CLEAR TRL3AB;
         CLEAR TRL3C;
         TMBSPD = HBSPD;
         TMESPD = DSENDS;

         TMTPML = 0;
         If TMESPD > TMBSPD;
           TMTPML = TMESPD - TMBSPD;
         Endif;

         TRL3A  = $CNTRY;
         If *IN57 = *On;
           TRL3B  = 'M';
           If SUSP > 0 or TMERR <> ' ';
             TRL3C = 0;
           Else;
             Eval(H) TRL3C = TMTPML / 1.609;
           Endif;
         Else;
           TRL3B  = 'U';
           If SUSP > 0 or TMERR <> ' ';
             TRL3C = 0;
           Else;
             Eval(H) TRL3C = TMTPML * 1.609;
           Endif;
         EndIf;

         TMCTRC = TRL3A;
         TMMOM  = TRL3B;
         TMODIS = TRL3C;
         TMLDF  = WKLDF;
         TMGD   = DSFUEL;
         TMKADM = VfAdm;

         Wk_Cust1 = TMCUST;
         If Wk_Cust1 = '3';
           TMLDF = '2';
         EndIf;

         Select;
         When SUSP <> 0 or FATAL <> 0;
           TMAFM = *ZEROS;
           TMAFY = *ZEROS;
         When TMBDAT > Pr_EOM;
           Wk_Date7 = TmBDat;
           TmAfM = Wk_MM7;
           TmAfY = Wk_CYY7;
         Other;
           TMAFM = Pr_Mm;
           TMAFY = Pr_Cyy;
         EndSl;

       EndSr;
       BegSr Wrt_HDR;

         TMPMM = Cur_MM7;
         TMPDD = Cur_DD7;
         TMPYY = Cur_CYY7;

         TMSRC = BTFORM;
         CLEAR TM1N70;
         CLEAR TM2N70;
         CLEAR TM3N70;

         If Lwieght_Susp = '1';
            Susp += 1;
         Endif;

         Select;
         When Susp = 0;
           TMERR = ' ';
         When SusRej = 'R' And *IN07 = *On ;
           TMERR = 'R';
           TM3N70 = Today_7;
         Other;
           TMERR = 'Y';
           TM1N70 = Today_7;
           EvalR Tm7A08 = %Trim(TmpBox);
           TMBCNO = TMPBCH;
         EndSl;

         Eval TM7A08 = TMPBOX;
         TMCYMD = *ZEROS;
         TMCUPD = 'ADD';

         TMCLK = LDINIT;
         CLEAR TMLCIN;
         CLEAR TMLCDT;

         If $HSEQ = 0;
           $HSEQ = 1;
           TMSEQ# = $HSEQ;
         ELSE;
           Exsr Fetch_Seq_Num;
           Clear SqlCode;
         ENDIF;

         If TMERR = 'R';
           PRCFG = 'A';
           ExSr Rejected_Trips;
         ENDIF;

         TMRCWT = Wk_DSRCWT;
         TMAXLS = Wk_DSAXLE;

         If WTAXL_Flg = '0';
           TMRCWT = 0;
           TMAXLS = 0;
         Endif;

         Exec Sql insert into HdrCsr_A
           (TMHTRP, TMAFY, TMAFM, TMBCNO, TMBCBR, TMPMM, TMPDD,
            TMPYY, TMUNIT, TMCORP, TMCUST, TMCBG, TMCDST, TMOBR,
            TMRCWT,TMTKTR,TMAXLS, TMLIC, TMBDAT, TMEDAT,
            TMDPC, TMDPS, TMDSC, TMDSS, TMCTRC,
            TMMOM, TMODIS, TMKADM, TMDLOC, TMOCLC, TMBSPD, TMESPD,
            TMTPML, TMLDF, TMGD, TMERR, TMCUPD, TMCLK,
            TMMMFL, TMSEQ#, TMLCIN, TMLCDT, TMSRC,
            TM1N70, TM2N70, TM3N70,
            TM4A01, TM5A01, TM6A08,  TM7A08)
           Values(:TMHTRP, :TMAFY, :TMAFM, :TMBCNO, :TMBCBR, :TMPMM,
             :TMPDD, :TMPYY, :TMUNIT, :TMCORP, :TMCUST, :TMCBG, :TMCDST,
             :TMOBR, :TMRCWT, :TMTKTR, :TMAXLS,:DSLIC, :TMBDAT,
             :TMEDAT, :TMDPC, :TMDPS, :TMDSC, :TMDSS,
             :TMCTRC, :TMMOM, :TMODIS, :TMKADM, :TMDLOC, :TMOCLC, :TMBSPD,
             :TMESPD, :TMTPML, :TMLDF, :TMGD, :TMERR, :TMCUPD,
             :TMCLK, :TMMMFL, :TMSEQ#, :TMLCIN, :TMLCDT, :TMSRC,
             :TM1N70,:TM2N70, :TM3N70, :TM4A01, :TM5A01, :TM6A08, :TM7A08);

         Clear SqlCode;

         Exsr Get_RANumber;
         Exsr Val_DatTime;
         Exsr Get_UntClas;

         If TMCUST = ' ';
           $BegOdo = 0;
           $EndOdo = 0;
         Endif;

         Exec Sql insert into FDTSCSTSF
           (TMHTRP, TMRCNO, TMINVN, TMUNCL, TMVUSE, TMRANUM, TMBGOD,
            TMENOD, TMDTOT, TMTMOT, TMDTIN, TMTMIN, TMENBY)
           Values (:DSHTRP, :TMRCNO, :TMINVN, :TMUNCL, :VFUSE, :TMRANUM,
           :$BegOdo, :$EndOdo, :TMDTOT, :TMTMOT, :TMDTIN, :TMTMIN, :LDNAME);

       EndSr;
       BegSr Get_RANumber;

         TMRCNO = 0;
         TMRANUM = $TransNumber;
         If $TransNumber <> *Blanks;
           If %Trim(%Char($ContractKey)) <> '';
             TMRCNO = %Dec($ContractKey);
           Else;
             TMRCNO = 0;
           Endif;
         Endif;

         If TMRCNO = 0;
           TMINVN = $TransNumber;
           TMRANUM = ' ';
         Else;
           TMINVN = ' ';
         Endif;

       EndSr;
       BegSr Val_DatTime;

         If %Char($TimeOut) = '     .00';
            $TimeOut = %Time('00.00.00');
         Endif;

         If %Char($TimeIn)  = '     .00';
            $TimeIn  = %Time('00.00.00');
         Endif;

         TMTMOT = 0;
         if %Trim(%Char($TimeOut)) <> '' and
            %Check(valid_set:%Trim(%Char($TimeOut))) = 0;
           TMTMOT = %Dec($TimeOut);
         endif;

         TMTMIN = 0;
         if %Trim(%Char($TimeIn)) <> '' and
            %Check(valid_set:%Trim(%Char($TimeIn))) = 0;
           TMTMIN = %Dec($TimeIn);
         endif;

         if %Char($DATEOUT) = '0001-     ';
            $DATEOUT = %Date('0001-01-01');
         endif;

         if %Char($DATEIN)  = '0001-     ';
            $DATEIN  = %Date('0001-01-01');
         endif;

         if %Trim(%Char($DATEOUT)) = '' or $DATEOUT = *Loval;
           TMDTOT = Bl_Date;
         else;
           TMDTOT = $DATEOUT;
         Endif;

         if %Trim(%Char($DATEIN)) = '' or $DATEIN = *Loval;
           TMDTIN = Bl_Date;
         else;
           TMDTIN = $DATEIN;
         Endif;

       EndSr;
       BegSr Get_UntClas;

         Exec Sql SELECT MLCLAS
                    into :TMUNCL
                    from FTCLBILLF
                   Where MLUNIT = :DSUNIT
                   Fetch First Rows Only;

         If SqlCode <> 0;
           TMUNCL = ' ';
         Endif;

       EndSr;
       BegSr Load_MILE;
         Reset Sfl_End;

         Select;
         When AState_Req_Fnd = 'Y';
           CHAIN Ctr ASRSFL;
           If Not %Found;
             Sfl_End = 'Y';    //  Eof
             LeaveSr;
           EndIf;
           If Wk_DSRCWT = 0;
             Wk_DSRCWT = DSRCWT;
             Wk_DSAXLE = DSAXLE;
           Endif;
         Other;
           CHAIN Ctr MILSFL;
           If Not %Found;
             Sfl_End = 'Y';   //  Eof
             LeaveSr;
           EndIf;
         EndSl;

         If DSSE = *BLANKS And DSTMDY = *ZEROS And DSBODM = *ZEROS;
           Sfl_End = 'Y';   //  Eof
           LeaveSR;
         EndIf;

         TMSTRP = DSHTRP;
         TMLINE = DSLINE;

         TMMAFM = TMAFM;
         TMMAFY = TMAFY;

         Wk_MDY = DSTMDY;
         Exsr Validate_MDY;
         If %Error();
           Line_Date = 0;
         else;
           Wk_Date10 = %Date(DSTMDY:*MDY);
           Line_Date = %Dec(Wk_Date10:*CYMD);
         Endif;

         TMBODM = HODOM;
         TMEODM = DSENDS;
         TMCODE = DSCODE;
         TMSE   = DSSE;
         TMTMIS = HMILE;

         If TMTMIS < 0;
           TMTMIS = 0;
         Endif;

         TMTOLL = *zeros;
         If not (TMSE = 'NY' and WKLDF = '2');
           TMTOLL = DSTOLL;
         Endif;

         TMRTES = DSRTES;
         If DSLINE = '01';
           HBSPD = HODOM;
           Tot_Miles = DSENDS - HODOM;
           If Tot_Miles < 0;
              Tot_Miles = 0;
           Endif;
         EndIf;

         TMTTM = Tot_Miles;
         TMLE = DSLE;

         Exsr Trip_Error_Cd;
         TMMERR = WK_CustErr;

         CLEAR TM1A01;

         TMAXLE = #DSAXLE;
         TMRCWT = #DSRCWT;

         IF (SUSP <> 0 or FATAL <> 0);
           TMMAFM = *Zeros;
           TMMAFY = *Zeros;
         EndIf;


         Wk_MDY = DstMdy;
         Exsr Validate_MDY;
         If %Error();
           Wk_EndDat7 = 0;
         else;
           Wk_Date10  = %Date(DstMdy:*MDY);
           Wk_EndDat7 = %Dec(Wk_Date10:*CYMD);
         Endif;

       EndSr;
       BegSr Trip_Error_Cd;

         Select;
         When SUSP = 0;
           WK_CustErr = ' ';
         When *IN07 = *On And SUSREJ = 'R';
           WK_CustErr = 'R';
         Other;
           WK_CustErr = 'Y';
         EndSl;

       EndSr;
       BegSr Load_Fuel;
         Reset Sfl_End;

         Select;
         When AFuel_Req_Fnd = 'Y';
           Chain Ctr AFRSFL;
           If Not %Found();
             Sfl_End = 'Y';    //  Eof
             LeaveSr;
           EndIf;
         Other;
           Chain Ctr FULSFL;
           If Not %Found();
             Sfl_End = 'Y';   //  Eof
             LeaveSr;
           EndIf;
         EndSl;

           If    DssPur = *Blanks And DsdPur = 0
             And DstKno = *Blanks And DsFpg  = 0
             And DsqTm  = *Blanks And DsvEnd = *Blanks
             And DsvNdn = *Blanks And DsvNdc = *Blanks;
             Sfl_End = 'Y';
             LeaveSr;
           EndIf;

           TfTrip = DshTrp;
           TfLine = DsLine;    //note line no

           TFAFM  = TMAFM;
           TFAFY  = TMAFY;

           TFSPUR = DSSPUR;
           Wk_MDY = DSDPUR;
           Exsr Validate_MDY;
           If %Error();
             Line_Date = 0;
           Else;
             Wk_Date10 = %Date(DsDPur:*MDY);
             Line_Date = %Dec(Wk_Date10:*cymd);
           Endif;

           TFFX = DSFX;
           TFQTM = DSQTM;


           Select;
           When DSQTM = 'L';
               Eval(H) TFFPG = DSFPG * 3.785;
           When DSQTM = 'G';
               Eval(H) TFFPG = DSFPG / 3.785;
           Other;
               TFFPG = DSFPG;
           EndSl;

           Eval TFFKEY = DSFPG0 * 0.1;
           TFVEND = DSVEND;
           TFVNDN = DSVNDN;
           TFVNDC = DSVNDC;
           TF2A01 = DSTKTRCVD;

           Exsr Trip_Error_Cd;

           TFERR = WK_CustErr;

           Clear TF1A01;
           TFTAXP = DSTAXP;
           TFORIG = DSORIG;
           TFTKNO = DSTKNO;
           TFSRC  = DSSRC;
           TFINV  = HSINVC;
           TFFSRC = HSSRCF;

       EndSr;
        BegSr Update_FFUELTKT;

           WKFCtr = %Lookup(HsTkNo:Fuel_Ds(*).Fuel_tkt);
           If WKFCtr > 0;
             HSFSRC = Fuel_Ds(WKFCtr).Fuel_src;
           Endif;

           Select;
           When SusRej = ' ' or SusRej = 'S';
             FtuDtr = 'U';
             FtTrpA = TmHTrp;
             FtTrpD = %TIMESTAMP();
           Other;
             FtuDtr = ' ';
             FtTrpA = ' ';
             FtTrpD = %Timestamp('0001-01-01-00.00.00.000000');
           EndSl;

           Exec Sql Set Connection :WkRemote;

           Exec Sql Update FfuelTkt
                       Set FtuDtr = :FtuDtr,
                           FtTrpA = :FtTrpA,
                           FtTrpD = :FtTrpD
                     Where FtCorp = :HsCorp and FtTkNo = :HsTkNo and
                           FtVend = :HsVend and FtSrc = :HsfSrc;
           Clear SqlCode;

           Exec Sql Set Connection :WkMachine;

           Rls_Flg = 'N';
           If SusRej = 'R';
              Exec Sql Update FMTTKTF
                          set FTUDTR = :FtuDtr, FTTRPA = :FtTrpA,
                              FTTRPD = :FtTrpD
                        Where FTTRPA = :DSHTRP and FtuDtr in ('C','U');

              If HsTkNo = '000000000' or DSSRC <> ' ';
                Rls_Cnt += 1;
                Rls_Flg = 'Y';
              Endif;
           Endif;

           IF (SUSP <> 0 or FATAL <> 0);
             TFAFM = *Zeros;
             TFAFY = *Zeros;
           EndIf;
        EndSr;
       BegSr MXMLVL;
         PRVDAT = 0;

         Pos = 0;
         Pos1  = 0;
         TRPMIL = 0;
         DSBODM1 = 0;
         WK_COUNT2 = 99;
         Dow WK_COUNT2 <> 0;
           TRDAY(WK_COUNT2) = 0;
           TRMIL(WK_COUNT2) = 0;
           WK_COUNT2 = WK_COUNT2 - 1;
         EndDo;

         WK_COUNT2 = 99;
         LstOdo = DSENDS;
         Wk_Mile_Err = 0;
         Dow WK_COUNT2 <> 0;
           CHAIN WK_COUNT2 MILSFL;
           If %found(DTSTENTD);

             If *In35 = *On;
               TRPMIL = DSBODM;
             Else;
               DSBODM1 = DSBODM;
             EndIf;

             If DSBODM1 <> 0;
               TRPMIL = LstOdo - DSBODM1;
               LstOdo = DSBODM1;
             EndIf;

             If DSTMDY <> 0;

               Wk_MDY = DstMDY;
               Exsr Validate_MDY;
               If %Error();
                 Wk_Date7 = 0;
                 Wk_Mile_Err = 1;
               ELSE;
                 Wk_Date10 = %Date(DstMDY:*MDY);
                 Wk_Date7 = %Dec(Wk_Date10:*CYMD);
               Endif;

               IF Wk_Date7 <> 0;
                 POS1 = 0;
                 POS1 = %LOOKUP(Wk_Date7:TRDAY);
                 Reset Days_Diff;

               Select;
               When POS1 <> 0;
                   TRDAY(Pos1) = Wk_Date7;

                   IF PRVDAT <> 0;
                     Days_Diff = %DIFF(%Date(PRVDAT:*CYMD):Wk_Date10:*DAYS);
                   ENDIF;
                   If Days_Diff = 0;
                      Days_Diff = 1;
                   Endif;

                   If (TRMIL(POS1) + (TRPMIL/Days_Diff)) <= 9999999;
                      TRMIL(POS1) = TRMIL(POS1) + (TRPMIL/Days_Diff);
                   Else;
                      TRMIL(POS1) = 9999999;
                   Endif;

               When PRVDAT <> 0;
                   Days_Diff = %DIFF(%Date(PRVDAT:*CYMD):Wk_Date10:*DAYS);
                   If Days_Diff = 0;
                      Days_Diff = 1;
                   Endif;
                   POS = POS + 1;
                   TRDAY(Pos) = Wk_Date7;
                   TRMIL(POS) =  TRPMIL/Days_Diff;

               Other;                   //PRVDAT = 0
                   If Days_Diff = 0;
                      Days_Diff = 1;
                   Endif;
                   POS = POS + 1;
                   TRDAY(Pos) = Wk_Date7;
                   TRMIL(POS) =  TRPMIL/Days_Diff;
               ENDSl;

                 PRVDAT = Wk_Date7;
               ENDIF;

             ENDIF;

           ENDIF;
           WK_COUNT2 = WK_COUNT2 - 1;
         ENDDO;
       EndSr;
       BegSr *PSSR;

         Select;
         When #PSFSI = '01331';
           ##PSSR = *ON;
           #Time = %Dec(%Time());
           CLOSE DTSTENTD;
           @RETRN = '*CANCL';
           Callp(E) SPCNLRPG ( PSSA );
         Other;
           ##PSSR = *ON;
           #Time = %Dec(%Time());
           CLOSE DTSTENTD;
           @RETRN = '*TERM ';
         EndSl;

        ENDSR    @RETRN;
       BegSr Mlti_Cust;

         Valid = 'N';


         Exit_Match_Fl = 'Y';
         Exsr Cmp_Trp_Date;


         Exit_Match_Fl = 'N';
         Exsr Cmp_Trp_Date;

       EndSr;

       BegSr Cmp_Trp_Date;

         If Valid = 'N';
           OneCust = 'N';
           MltCust = 'N';
           For WK_COUNT1 = 1 To 5;
             Select;
             When WK_COUNT1 = 1 and Exit_Match_Fl = 'Y';
               ResultSet    = ResultSet1;
               If $Resultst <>' ' AND
                 ($DateOut = Wk_BegDt10 );
                 Valid = 'Y';
                 OneCust = 'Y';
                 PResultSet    = ResultSet;
               EndIf;

             When WK_COUNT1 = 1;             //Exit_Match_Fl = 'N'
               ResultSet    = ResultSet1;
               If $Resultst <>' ' AND
                 ($DateOut < Wk_BegDt10 ) AND
                 (($DateIn  >= Wk_BegDt10  ) OR
                 ($DateIn = *Loval));
                 Valid = 'Y';
                 OneCust = 'Y';
                 PResultSet    = ResultSet;
               EndIf;

             When WK_COUNT1 = 2;
               ResultSet    = ResultSet2;

             When WK_COUNT1 = 3;
               ResultSet    = ResultSet3;

             When WK_COUNT1 = 4;
               ResultSet    = ResultSet4;

             When WK_COUNT1 = 5;
               ResultSet    = ResultSet5;

             EndSl;

             Select;
             When WK_COUNT1 > 1 and Exit_Match_Fl = 'Y';

               Select;

               When $Resultst <>' ' AND
                    $DateOut = Wk_BegDt10 And OneCust = 'Y';
                 Valid = 'Y';
                 OneCust = 'N';
                 MltCust = 'Y';

               When $Resultst <>' ' AND
                    $DateOut = Wk_BegDt10;
                 Valid = 'Y';
                 $DateOut = Wk_BegDt10;
                 OneCust ='Y';
                 PResultSet = ResultSet;

               EndSl;

             When WK_COUNT1 > 1;                    //Exit_Match_Fl = 'N'

               Select;

               When ($Resultst <>' ' AND
                    ($DateOut < Wk_BegDt10 ) And
                    (($DateIn  >= Wk_BegDt10  ) OR
                    ($DateIn = *Loval))) AND OneCust = 'Y';
                 Valid = 'Y';
                 OneCust = 'N';
                 MltCust = 'Y';

               When $Resultst <>' ' AND
                    ($DateOut < Wk_BegDt10 ) And
                    (($DateIn  >= Wk_BegDt10  ) OR
                    ($DateIn = *Loval));
                 Valid = 'Y';
                 OneCust ='Y';
                 PResultSet = ResultSet;

               EndSl;
             EndSl;

           EndFor;

           If Valid = 'Y' AND OneCust='Y' AND
             MltCust='N';
             ResultSet =  PResultSet;
             LeaveSr;
           EndIf;

           ResultSet = *blanks;
           Valid = 'N';
         EndIf;

       EndSr;
       BegSr GetNxtTrpdt;

         Dow Wk_Date7P <= Wk_EndDat7 and Valid  = 'N';
           Wk_Date10 = %Date(Wk_Date7P:*Cymd) + %Days(1);
           Wk_Date7P = %Dec(Wk_Date10:*cymd);

           ExSr Get_CusAdr;

           Select;
           When WK_CustErr = 'M' Or  WK_CustErr = 'X';
              ExSr Mlti_Cust;

           When WK_CustErr = 'N';
              Valid = 'N';
              Wk_BegDt10 = %DATE(Beg_Date7:*CYMD);
              ResultSet    = ResultSet1;

              Exsr Compare_Begin_Date;

              If Valid = 'N';
                ResultSet = *blanks;
              EndIf;

           EndSl;
         EndDo;

       EndSr;
       BegSr ChkErrs;
         WK_COUNT1 = 1;
         Dow WK_COUNT1 <= Prompt_Err_cnt;
           %Occur(PRMMSG) = WK_COUNT1;
           If PRMMID <> 'DTS0075'
             and PRMMID <>'DTS0061'
             and PRMMID <>'DTS0062'
             and PRMMID <>'DTS0063'
             and PRMMID <>'DTS0069';
             GoAhead = 'N';
           EndIf;
           WK_COUNT1 = WK_COUNT1 + 1;
         EndDo;
         WK_COUNT1 = 1;
         Dow WK_COUNT1 <= Cust_Err_Cnt;
           %Occur(CUSMSG) = WK_COUNT1;
           If CUSMID <> 'DTS0075'
             and CUSMID <>'DTS0061'
             and CUSMID <>'DTS0062'
             and CUSMID <>'DTS0063'
             and CUSMID <>'DTS0069';
             GoAhead = 'N';
             WK_COUNT1 = WK_COUNT1 + 1;
             Iter;
           EndIf;
           Clear CUSMSG;
           WK_COUNT1 = WK_COUNT1 + 1;
         EndDo;
         WK_COUNT1 = 1;
         Dow WK_COUNT1 <= Mile_Err_Cnt;
           %Occur(MILMSG) = WK_COUNT1;
           If MILMID <> 'DTS0075'
             and MILMID <>'DTS0061'
             and MILMID <>'DTS0062'
             and MILMID <>'DTS0063'
             and MILMID <>'DTS0069';
             GoAhead = 'N';
           EndIf;
           WK_COUNT1 = WK_COUNT1 + 1;
         EndDo;
         WK_COUNT1 = 1;
         Dow WK_COUNT1 <= AState_Err_Cnt;
           %Occur(ASRMSG) = WK_COUNT1;
           If ASRMID <> 'DTS0075'
             and ASRMID <>'DTS0061'
             and ASRMID <>'DTS0062'
             and ASRMID <>'DTS0063'
             and ASRMID <>'DTS0069';
             GoAhead = 'N';
           EndIf;
           WK_COUNT1 = WK_COUNT1 + 1;
         EndDo;
         WK_COUNT1 = 1;
         Dow WK_COUNT1 <= Fuel_Err_Cnt;
           %Occur(FULMSG) = WK_COUNT1;
           If FULMID <> 'DTS0075'
             and FULMID <>'DTS0061'
             and FULMID <>'DTS0062'
             and FULMID <>'DTS0063'
             and FULMID <>'DTS0069';
             GoAhead = 'N';
           EndIf;
           WK_COUNT1 = WK_COUNT1 + 1;
         EndDo;
         WK_COUNT1 = 1;
         Dow WK_COUNT1 <= AFuel_Err_Cnt;
           %Occur(AFRMSG) = WK_COUNT1;
           If AFRMID <> 'DTS0075'
             and AFRMID <>'DTS0061'
             and AFRMID <>'DTS0062'
             and AFRMID <>'DTS0063'
             and AFRMID <>'DTS0069';
             GoAhead = 'N';
           EndIf;
           WK_COUNT1 = WK_COUNT1 + 1;
         EndDo;

         Exec Sql Select 'N' Into :GoAhead
                    From FDTSERR
                   Where OvTrip = :DshTrp and Ovmid not in ('DTS0075',
                         'DTS0061','DTS0062','DTS0063','DTS0069')
                   Fetch First 1 rows only;


         If GoAhead = 'Y';
           Exec Sql Delete from FDTSERR Where OvTrip = :DshTrp;
           Reset Cust_Err_Cnt;
         EndIf;

         Clear SqlCode;

         WK_COUNT1 = 1;
         Dow WK_COUNT1 <= Cust_Err_Cnt;
           %Occur(CUSMSG) = WK_COUNT1;
           If CUSMID = 'DTS0075' Or  CUSMID = 'DTS0061'
             Or  CUSMID = 'DTS0062' Or  CUSMID = 'DTS0063'
             Or  CUSMID = 'DTS0069';
             Clear CUSMSG;
           EndIf;
           WK_COUNT1 = WK_COUNT1 + 1;
         EndDo;

       EndSr;
       BegSr Get_CusAdr;
         CLEAR $TIME;
         CLEAR ResultSet;
         CLEAR ResultSet1;
         CLEAR ResultSet2;
         CLEAR ResultSet3;
         CLEAR ResultSet4;
         CLEAR ResultSet5;
         %Subst($USE:1:6) = UPUSE;

         Valid = 'N';

         SPCUSRTVR ( DSUNIT : $USE : Wk_Date7P : $Time
         : ResultSet1 : ResultSet2 : ResultSet3 :
         ResultSet4 : ResultSet5 : WK_CustErr : batchflag :
         billflag : GMTFlag : CTFLAG : AccFlag);

       EndSr;
       BegSr Mod_VEHMT;

         If TMERR = ' ';
           Wk_CYMD = TMEDAT;

           If TMEDAT > 0;
             Wk_Date10 = %Date(TMEDAT:*CYMD);
             vTimestamp = %timestamp(%Char(Wk_Date10) +
                          '-00.00.00.000000');
           Endif;

           ExSr Validate_Foreign_Unit;
           Select;
           When WKAFLG ='Y' And RecExist = 'N';

              Exec Sql Insert Into VEHMTRT
                (MTUNIT, MTCORP, MTTRDT, MTCTYP, MTMTYP, MTMTR, MTSCRP,
               MTSDST, MTSLCN, MTORIG, MTTRID, MTSEQ, MTCFLG, MTESAC, MTATYP,
               MTENDT, MTENBY, MTCHDT, MTCHBY, MTSTAT)
              Values
                (:TMUNIT,:TMCORP,:vTimeStamp,'EN','MI',:TMESPD,' ',' ',
                 ' ','DTR',:TMHTRP,1,'ON ','A',' ', Current_timestamp,
                 '*SYSTEM', Current_timestamp,'*SYSTEM',' ');

           When WKAFLG ='Y';                               //RecExist  = 'Y'

             Exec Sql Update VEHMTRT  Set MTESAC ='A',  MTATYP = ' ',
                   MTCHDT = Current_timestamp, MTCHBY = '*SYSTEM', MTSTAT = ' '
             Where MTUNIT = :TMUNIT and MTCORP = :TMCORP
               and MTTRDT = :vTimeStamp and MTCTYP = 'EN'
               and MTMTYP = 'MI' and MTMTR  = :TMESPD
               and MTSCRP = ' ' and MTSDST = ' '
               and MTSLCN = ' ' and MTORIG = 'DTR'
               and MTTRID = :TMHTRP and MTSEQ  = 1
               and MTCFLG = 'ON ';
           endsl;

         Endif;
         Clear SqlCode;
       EndSr;
       BegSr Validate_Foreign_Unit;
         RecExist = *Blanks;
         WKAFLG = 'N';
         WK_COUNT1 = *ZEROS;

         Exec Sql Select 'Y'
                    Into :WKAFLG
                    From FvehFil
                   Where VfUnit = :TmUnit
                   Fetch First 1 rows only;

         If WKAFLG='Y';

           RecExist = 'N';
           Exec Sql Select 'Y'
                      Into :RecExist
                      From VEHMTRT
                     Where MTUNIT = :TMUNIT and MTCORP = :TMCORP
                       and MTTRDT = :vTimeStamp and MTCTYP = 'EN'
                       and MTMTYP = 'MI' and MTMTR  = :TMESPD
                       and MTSCRP = ' ' and MTSDST = ' '
                       and MTSLCN = ' ' and MTORIG = 'DTR'
                       and MTTRID = :TMHTRP and MTSEQ  = 1
                       and MTCFLG = 'ON '
                     Fetch First 1 rows only;
         Endif;                                                                 // Unitflg='Y'
       EndSr;
       BegSr Vecap_Data;

         WKEFLG = *Blanks;
         WKAFLG = *Blanks;
         WKPRLC = *Blanks;
         WKFLG1 = *Blanks;
         WKFLG2 = *Blanks;
         SPV1CORP ( VFCORP : WKNME : WKAFLG :
         WKFLG1 : WKFLG2 : WKPRSC : WKACSC :
         WKPRLC : WKEFLG : WKUOMC : WKCTRC );

         If WKEFLG = '1' Or WKAFLG <> 'Y' Or WKPRLC <> 'Y';
           RecExist = 'E';
           LeaveSr;
         EndIf;

         $CNTRY = WKCTRC;
         *IN57 = *Off;
         If WKUOMC = 'M';
            *IN57 = *On;
         ENDIF;

         DSTKTR = '2';
         If VFCAT = 'TRUCK';
           DSTKTR = '1';
         EndIf;

         DSLIC = VFCLIS;

         DSFUEL = VFFUEL;

         DSAXLS = VFAXLS;

         DSOBR = VFDIST;

         DSTANK = 350;
         If VFTANK <> 0;
           DSTANK = VFTANK;
         EndIf;

         DSNTNK = 1;
         If VFNTNK <> 0;
           DSNTNK = VFNTNK;
         ENDIF;


         WKLICW = VF9N72 * 100;
         WKTARE = VFTARE;
       EndSr;
       BegSr ChkDtaRef;

         Clear Rply;

         Text='Data is being refreshed.Do you want +
              to Continue.';
         Snd_Msg(Text: Rply);

         If Rply = 'N';
           *Inlr = *On;
           Return;
         EndIf;

       EndSr;

       BegSr Validate_MDY;

         Test(DE) *mdy Wk_MDY;
         Reset Wk_MDY;

       EndSr;

        BegSr Dcl_Cursor;
          Exec Sql Declare Entr_Batch_Header Cursor for
                   Select TMCORP, TMHTRP, TMCUST, TMCDST, TMUNIT,
                          TMBDAT, TMSEQ#, TMAFY, TMAFM, TMCBG,
                          TMDPC, TMDPS, TMDSC, TMDSS, TMPMM,
                          TMPDD, TMPYY, TMERR
                     from HdrCsr_A
                   Where TM7A08 = :Tmpbox and TMBCNO = :DsBcno
                   Order By TM7A08,TMBCNO,TMPYY,TMPMM,TMPDD,TMSEQ#;

          Exec Sql Declare Entr_Mile_Cursor  Cursor for
                   Select TMLINE, TMRTES, TMCODE, TMBODM, TMTMIS, TMTOLL,
                          TMRCWT, TMSE, TMLE, TMAXLE, TMEODM, TMTPMM,
                          TMTPDD, TMTPYY
                     from MileCsr_A
                   Where TMSTRP = :DshTrp
                order by TMLINE;

          Exec Sql Declare Entr_Tkt_Cursor Cursor for
                   Select FTUDTR, FTGALN, FTFUSE, FTSTST, FTTKNO,
                          FTICUS, FTODIS, FTVEND, FTSTNA, FTSTCT,
                          FTPDAT, FTSRC, FTCORP
                     from FFUELTKTV4 a Join FLTFUETL1 b
                      on a.FTFTYP = b.FLFTYP and b.FlFSrF = 'Y'
                     and FTIUNI = :DSUNIT and FTCORP = :DSCORP
                     and FTPSTS = 'V' and FTICUS = :Wk_Cust8
                     and FTUDTR <> 'U' and FTGALN <> 0  and FTFUSE <> 'R'
                     and FTPDAT between :Wk_Date7P and :Wk_EndDat7
                   Order By FTIUNI,FTPDAT;

          Exec Sql Declare Entr_Fuel_Cursor Cursor for
                   Select TFLINE, TFSRC, TFINVM, TFINVD, TFINVY,
                          TFSPUR, TFTKNO, TFFKEY, TFQTM, TFVEND,
                          TFVNDN, TFVNDC, TFTAXP, TFORIG, TFFX,
                          TF2A01, TFINV, TFFSRC
                     from FuelCsr_A
                   Where TFTRIP = :DSHTRP
                   Order by TFAFY,TFAFM,TFLINE;

         Exec Sql Declare Entr_Fueltkt_Cursor Cursor for
                  Select FTTKNO, FTSRC
                    from Ffueltkt
                  Where FtTrpA = :DSHTRP;

        EndSr;
** FUNA
F4=Window
** FUNB
F8=Disp
** FUNC
F9=Add
** FUND
F10=Change
** FUNE
F11=Delete
** FUNF
F7=Suspend
** FUNFR
F7=Sus/Rej
** FUNG
F5=Override
** FUNH
F10=Chg
